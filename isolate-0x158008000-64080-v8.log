v8-version,12,4,254,21,-node.21,0
v8-platform,macos,macos
shared-library,/Users/annhoward/.nvm/versions/node/v22.12.0/bin/node,0x101d8c000,0x103ae92f0,15482880
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x1ba85bba0,0x1baa57ca0,488357888
shared-library,/usr/lib/libobjc.A.dylib,0x1ba3f1400,0x1ba432a40,488357888
shared-library,/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal,0x1be5eef20,0x1be625c50,488357888
shared-library,/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation,0x1bbe4d560,0x1bc837d78,488357888
shared-library,/usr/lib/liboah.dylib,0x1c8a14740,0x1c8a19e4c,488357888
shared-library,/usr/lib/libfakelink.dylib,0x1c8a49638,0x1c8a4aba0,488357888
shared-library,/usr/lib/libicucore.A.dylib,0x1be024938,0x1be28211c,488357888
shared-library,/usr/lib/libSystem.B.dylib,0x1c8a48158,0x1c8a4876c,488357888
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1c8a4c5d0,0x1c8a4c8a0,488357888
shared-library,/usr/lib/swift/libswiftCore.dylib,0x1cbf8b250,0x1cc3fa444,488357888
shared-library,/usr/lib/libc++abi.dylib,0x1ba78fb00,0x1ba7a53ac,488357888
shared-library,/usr/lib/libRosetta.dylib,0x2a1f28740,0x2a1f2de4c,488357888
shared-library,/usr/lib/libc++.1.dylib,0x1ba6ff988,0x1ba762fc8,488357888
shared-library,/usr/lib/swift/libswiftObjectiveC.dylib,0x1d4bf0080,0x1d4bf1bd8,488357888
shared-library,/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout,0x1c4056e58,0x1c4089c28,488357888
shared-library,/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration,0x1bbaaeb70,0x1bbb321e0,488357888
shared-library,/usr/lib/libz.1.dylib,0x1c8991640,0x1c899cfe0,488357888
shared-library,/usr/lib/libcompression.dylib,0x1c8c757c0,0x1c8ccde10,488357888
shared-library,/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork,0x1c038cc18,0x1c0602250,488357888
shared-library,/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration,0x1c351aa58,0x1c352164c,488357888
shared-library,/usr/lib/libarchive.2.dylib,0x1c8a9e910,0x1c8b8081c,488357888
shared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x1c342c6e8,0x1c342d37c,488357888
shared-library,/usr/lib/libxml2.2.dylib,0x1c40a0970,0x1c416a5e4,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices,0x1d0474950,0x1d0474950,488357888
shared-library,/usr/lib/liblangid.dylib,0x1c6e0e5e8,0x1c6e0f110,488357888
shared-library,/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit,0x1be670128,0x1be726c48,488357888
shared-library,/System/Library/Frameworks/Combine.framework/Versions/A/Combine,0x1ce370218,0x1ce4618e0,488357888
shared-library,/System/Library/PrivateFrameworks/CollectionsInternal.framework/Versions/A/CollectionsInternal,0x268902d28,0x268a2c388,488357888
shared-library,/System/Library/PrivateFrameworks/ReflectionInternal.framework/Versions/A/ReflectionInternal,0x2887b4ea8,0x2887baef0,488357888
shared-library,/System/Library/PrivateFrameworks/RuntimeInternal.framework/Versions/A/RuntimeInternal,0x28948bfd0,0x28949848c,488357888
shared-library,/usr/lib/swift/libswiftCoreFoundation.dylib,0x1e37609e4,0x1e3764f98,488357888
shared-library,/usr/lib/swift/libswiftDarwin.dylib,0x1e0ac8c58,0x1e0ac98a8,488357888
shared-library,/usr/lib/swift/libswiftDispatch.dylib,0x1d1f6e2f0,0x1d1f7ddb0,488357888
shared-library,/usr/lib/swift/libswiftIOKit.dylib,0x1e37ba840,0x1e37baaac,488357888
shared-library,/usr/lib/swift/libswiftSystem.dylib,0x2a2fafea8,0x2a2fc3b44,488357888
shared-library,/usr/lib/swift/libswiftXPC.dylib,0x1e3772208,0x1e37ab1ac,488357888
shared-library,/usr/lib/swift/libswift_Builtin_float.dylib,0x2a3020370,0x2a3020594,488357888
shared-library,/usr/lib/swift/libswift_Concurrency.dylib,0x2a3024060,0x2a308f44c,488357888
shared-library,/usr/lib/swift/libswift_StringProcessing.dylib,0x2a31832c8,0x2a3200954,488357888
shared-library,/usr/lib/swift/libswift_errno.dylib,0x2a3213950,0x2a321421c,488357888
shared-library,/usr/lib/swift/libswift_math.dylib,0x2a3215720,0x2a321718c,488357888
shared-library,/usr/lib/swift/libswift_signal.dylib,0x2a32184f8,0x2a3218518,488357888
shared-library,/usr/lib/swift/libswift_stdio.dylib,0x2a32196c0,0x2a3219c70,488357888
shared-library,/usr/lib/swift/libswift_time.dylib,0x2a321a670,0x2a321a6f4,488357888
shared-library,/usr/lib/swift/libswiftos.dylib,0x1d4bf42c0,0x1d4c07b10,488357888
shared-library,/usr/lib/swift/libswiftsys_time.dylib,0x2a321b5e0,0x2a321b668,488357888
shared-library,/usr/lib/swift/libswiftunistd.dylib,0x2a321c7d0,0x2a321c888,488357888
shared-library,/usr/lib/system/libcache.dylib,0x1c8a41840,0x1c8a44414,488357888
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1c89fca50,0x1c8a07ec4,488357888
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x1c8a27720,0x1c8a2a2d8,488357888
shared-library,/usr/lib/system/libcopyfile.dylib,0x1c8a1c9a8,0x1c8a24244,488357888
shared-library,/usr/lib/system/libcorecrypto.dylib,0x1ba54bc80,0x1ba5c8c70,488357888
shared-library,/usr/lib/system/libdispatch.dylib,0x1ba633120,0x1ba66ef40,488357888
shared-library,/usr/lib/system/libdyld.dylib,0x1ba7f2be0,0x1ba81c4a8,488357888
shared-library,/usr/lib/system/libkeymgr.dylib,0x1c8a37680,0x1c8a37d64,488357888
shared-library,/usr/lib/system/libmacho.dylib,0x1c89df688,0x1c89e1ee0,488357888
shared-library,/usr/lib/system/libquarantine.dylib,0x1c7e0b898,0x1c7e0dafc,488357888
shared-library,/usr/lib/system/libremovefile.dylib,0x1c8a34728,0x1c8a36740,488357888
shared-library,/usr/lib/system/libsystem_asl.dylib,0x1c07ecca8,0x1c0801ff4,488357888
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x1ba4e0ba8,0x1ba4e2a38,488357888
shared-library,/usr/lib/system/libsystem_c.dylib,0x1ba67ceb8,0x1ba6f5394,488357888
shared-library,/usr/lib/system/libsystem_collections.dylib,0x1c8a2b730,0x1c8a2f370,488357888
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x1c6dfb9c8,0x1c6dfecd0,488357888
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x1c5b96ca0,0x1c5bbe1e8,488357888
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1c8521be0,0x1c8526e34,488357888
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x1be2f0b20,0x1be2f74bc,488357888
shared-library,/usr/lib/system/libsystem_darwindirectory.dylib,0x2a3353a58,0x2a3355f5c,488357888
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x1c8a38a50,0x1c8a3ec3c,488357888
shared-library,/usr/lib/system/libsystem_eligibility.dylib,0x2a3357858,0x2a335b0c8,488357888
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x1ba679970,0x1ba67b728,488357888
shared-library,/usr/lib/system/libsystem_info.dylib,0x1ba82ade0,0x1ba854674,488357888
shared-library,/usr/lib/system/libsystem_m.dylib,0x1c89a05c0,0x1c89cd9ac,488357888
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x1ba5eaca8,0x1ba625870,488357888
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x1c0755cb8,0x1c076b058,488357888
shared-library,/usr/lib/system/libsystem_notify.dylib,0x1be752b38,0x1be7625d4,488357888
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x1c6e008e8,0x1c6e05098,488357888
shared-library,/usr/lib/system/libsystem_sanitizers.dylib,0x2a335f8a0,0x2a336399c,488357888
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x1c8a30a60,0x1c8a3232c,488357888
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x1ba7a97c0,0x1ba7dd308,488357888
shared-library,/usr/lib/system/libsystem_platform.dylib,0x1ba822860,0x1ba828f98,488357888
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x1ba7e5908,0x1ba7f03a0,488357888
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x1c2349a40,0x1c234f658,488357888
shared-library,/usr/lib/system/libsystem_trace.dylib,0x1ba5303d0,0x1ba546f98,488357888
shared-library,/usr/lib/system/libunwind.dylib,0x1c8a0c438,0x1c8a12dec,488357888
shared-library,/usr/lib/system/libxpc.dylib,0x1ba4e5428,0x1ba52196c,488357888
shared-library,/System/Library/Frameworks/Security.framework/Versions/A/Security,0x1bdc1b918,0x1bdf5f630,488357888
shared-library,/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement,0x1c7dd1f70,0x1c7df1c0c,488357888
shared-library,/System/Library/PrivateFrameworks/AppleKeyStore.framework/Versions/A/AppleKeyStore,0x26468a340,0x2646d27c8,488357888
shared-library,/usr/lib/libCoreEntitlements.dylib,0x2a1d80918,0x2a1d88774,488357888
shared-library,/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity,0x27f755738,0x27f796b98,488357888
shared-library,/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer,0x1c1f0aed8,0x1c1f1d1b8,488357888
shared-library,/usr/lib/libMobileGestalt.dylib,0x1c0773240,0x1c07cdfe8,488357888
shared-library,/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression,0x1c8508910,0x1c85103fc,488357888
shared-library,/usr/lib/libbsm.0.dylib,0x1c7e32680,0x1c7e40f84,488357888
shared-library,/usr/lib/libcoretls.dylib,0x1c7e1a8f8,0x1c7e2c808,488357888
shared-library,/usr/lib/libcoretls_cfhelpers.dylib,0x1ca023610,0x1ca02445c,488357888
shared-library,/usr/lib/libpam.2.dylib,0x1c8c6f720,0x1c8c72bb4,488357888
shared-library,/usr/lib/libsqlite3.dylib,0x1c1f25998,0x1c20c3340,488357888
shared-library,/usr/lib/libxar.1.dylib,0x1ca0977c0,0x1ca0a3d98,488357888
shared-library,/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS,0x1ca025a60,0x1ca07cc58,488357888
shared-library,/System/Library/PrivateFrameworks/SwiftASN1Internal.framework/Versions/A/SwiftASN1Internal,0x292a17cd8,0x292a3b384,488357888
shared-library,/usr/lib/libutil.dylib,0x1ca0a67a8,0x1ca0a8e10,488357888
shared-library,/usr/lib/libenergytrace.dylib,0x1c07706d8,0x1c0770d6c,488357888
shared-library,/usr/lib/system/libkxld.dylib,0x1c89e3680,0x1c89fa87c,488357888
shared-library,/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo,0x1c6e098b8,0x1c6e0c884,488357888
shared-library,/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer,0x1c7b069c8,0x1c7b140cc,488357888
shared-library,/System/Library/Frameworks/Network.framework/Versions/A/Network,0x1c2354548,0x1c30ac488,488357888
shared-library,/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics,0x1c33fc3a0,0x1c34213e4,488357888
shared-library,/System/Library/PrivateFrameworks/LoggingSupport.framework/Versions/A/LoggingSupport,0x1e364b0e8,0x1e36af898,488357888
shared-library,/System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog,0x1d142f0d0,0x1d144d3bc,488357888
shared-library,/System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices,0x1c225c2e0,0x1c22a4f74,488357888
shared-library,/System/Library/Frameworks/SwiftData.framework/Versions/A/SwiftData,0x2211c7600,0x2212d5b18,488357888
shared-library,/System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers,0x1bfe030d0,0x1bfe0fd1c,488357888
shared-library,/System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement,0x1c422bfa0,0x1c42472d4,488357888
shared-library,/usr/lib/libboringssl.dylib,0x1c02ba1a0,0x1c035a11c,488357888
shared-library,/usr/lib/libdns_services.dylib,0x1c2338c28,0x1c2345a4c,488357888
shared-library,/usr/lib/libquic.dylib,0x1e27f9e80,0x1e28c8d90,488357888
shared-library,/usr/lib/libusrtcp.dylib,0x1cbf17940,0x1cbf760b4,488357888
shared-library,/usr/lib/libapple_nghttp2.dylib,0x1c8c2c720,0x1c8c3db54,488357888
shared-library,/System/Library/PrivateFrameworks/InternalSwiftProtobuf.framework/Versions/A/InternalSwiftProtobuf,0x20713b320,0x20721a648,488357888
shared-library,/usr/lib/swift/libswiftDistributed.dylib,0x2a2f11970,0x2a2f1cf54,488357888
shared-library,/usr/lib/swift/libswiftObservation.dylib,0x2a2f3b278,0x2a2f44798,488357888
shared-library,/usr/lib/swift/libswiftSynchronization.dylib,0x2a2fa9fb0,0x2a2facea8,488357888
shared-library,/usr/lib/libnetwork.dylib,0x1c038a390,0x1c038a390,488357888
shared-library,/System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics,0x1f42fb318,0x1f433d1d4,488357888
shared-library,/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce,0x1c8c07790,0x1c8c27cdc,488357888
shared-library,/System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication,0x1d2703b38,0x1d27f3ee4,488357888
shared-library,/System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication,0x202e04480,0x202ebbee0,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents,0x1c401a8e0,0x1c4025368,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore,0x1be2fc1c0,0x1be3e8278,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata,0x1c34902c0,0x1c3502a5c,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices,0x1c852a020,0x1c855429c,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit,0x1c8b96b30,0x1c8bec8dc,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE,0x1c22c4ec0,0x1c2328800,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices,0x1bad9a838,0x1bafbe938,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices,0x1c9fadfc8,0x1c9ff4a0c,488357888
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList,0x1c4029340,0x1c4045bec,488357888
shared-library,/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics,0x1c0d500c8,0x1c123de9c,488357888
shared-library,/System/Library/Frameworks/GSS.framework/Versions/A/GSS,0x1ccc6cb88,0x1cccb7430,488357888
shared-library,/usr/lib/liblzma.5.dylib,0x1ca0045f0,0x1ca01bab8,488357888
shared-library,/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData,0x1c1ab09e0,0x1c1e149d0,488357888
shared-library,/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag,0x1c7d17180,0x1c7d28dc8,488357888
shared-library,/System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary,0x1c6e07af8,0x1c6e07f38,488357888
shared-library,/usr/lib/libAppleArchive.dylib,0x2a1c4b998,0x2a1cce290,488357888
shared-library,/usr/lib/libbz2.1.0.dylib,0x1c8514688,0x1c851f494,488357888
shared-library,/usr/lib/libiconv.2.dylib,0x1c8a837a8,0x1c8a8997c,488357888
shared-library,/usr/lib/libcharset.1.dylib,0x1c89de5e8,0x1c89de9ec,488357888
shared-library,/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight,0x1c08296a0,0x1c0c8b688,488357888
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib,0x1c5fe2a38,0x1c61f36d4,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate,0x1d0720418,0x1d0720418,488357888
shared-library,/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface,0x1c5bc7f90,0x1c5bd9920,488357888
shared-library,/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC,0x1c0804e80,0x1c081fc98,488357888
shared-library,/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework/Versions/A/IOSurfaceAccelerator,0x1d791a968,0x1d791d3ec,488357888
shared-library,/System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient,0x1caadd6c0,0x1caade94c,488357888
shared-library,/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay,0x1bcdf1500,0x1bced7ba4,488357888
shared-library,/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia,0x1c5e86588,0x1c5fbad20,488357888
shared-library,/System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator,0x1c5be0f38,0x1c5be8310,488357888
shared-library,/System/Library/Frameworks/Metal.framework/Versions/A/Metal,0x1c5beb578,0x1c5d90da8,488357888
shared-library,/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo,0x1c418b110,0x1c41d31d0,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders,0x1c8c6de38,0x1c8c6e1f8,488357888
shared-library,/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport,0x1caadfef0,0x1caafcdac,488357888
shared-library,/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore,0x1c3934a68,0x1c3c79c58,488357888
shared-library,/System/Library/PrivateFrameworks/ProDisplayLibrary.framework/Versions/A/ProDisplayLibrary,0x287af3968,0x287b65e30,488357888
shared-library,/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox,0x1cab267d0,0x1caf71bb0,488357888
shared-library,/usr/lib/swift/libswiftMetal.dylib,0x1f03252f0,0x1f0327598,488357888
shared-library,/usr/lib/swift/libswiftOSLog.dylib,0x1ff2c60b8,0x1ff2c6834,488357888
shared-library,/usr/lib/swift/libswiftQuartzCore.dylib,0x1f56c4078,0x1f56c4998,488357888
shared-library,/usr/lib/swift/libswiftUniformTypeIdentifiers.dylib,0x1f9d1f388,0x1f9d2a0e0,488357888
shared-library,/usr/lib/swift/libswiftsimd.dylib,0x1e7013c98,0x1e7028840,488357888
shared-library,/System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard,0x1c2177608,0x1c221c11c,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO,0x1c6612838,0x1c69008b0,488357888
shared-library,/System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG,0x1ca9a6920,0x1ca9e0138,488357888
shared-library,/usr/lib/libexpat.1.dylib,0x1ca4475f0,0x1ca45f784,488357888
shared-library,/System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync,0x1c147fb50,0x1c14f8258,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib,0x1cafd27c8,0x1caff8700,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib,0x1caffd898,0x1cb03a9b0,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib,0x1cb0e7668,0x1cb0ec218,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib,0x1ca9ec850,0x1caaa4a78,488357888
shared-library,/usr/lib/libate.dylib,0x1ca158c88,0x1ca194c50,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib,0x1cb08e670,0x1cb0b5f30,488357888
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib,0x1cb085640,0x1cb0875a8,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage,0x1c3523c80,0x1c388a5ac,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib,0x1d044f870,0x1d044f870,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib,0x1ca0de770,0x1ca152864,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib,0x1bb2119e0,0x1bb8901c4,488357888
shared-library,/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText,0x1bd2cb198,0x1bd43d674,488357888
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/Versions/A/FontServices,0x26eb59680,0x26eb59688,488357888
shared-library,/System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG,0x1ca62bdc0,0x1ca664550,488357888
shared-library,/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib,0x1c3d08328,0x1c3d47278,488357888
shared-library,/usr/lib/libhvf.dylib,0x2a230df70,0x2a23227c4,488357888
shared-library,/System/Library/PrivateFrameworks/ParsingInternal.framework/Versions/A/ParsingInternal,0x2839f8ea0,0x283b01c48,488357888
shared-library,/usr/lib/swift/libswiftRegexBuilder.dylib,0x2a2f580b0,0x2a2f5fbec,488357888
shared-library,/usr/lib/swift/libswift_RegexParser.dylib,0x2a30df958,0x2a316904c,488357888
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libXTFontStaticRegistryData.dylib,0x26eb5a918,0x26eb5a918,488357888
shared-library,/System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage,0x1c69918c8,0x1c6c45bd4,488357888
shared-library,/System/Library/PrivateFrameworks/FramePacing.framework/Versions/A/FramePacing,0x26ec24d10,0x26ec2af1c,488357888
shared-library,/System/Library/PrivateFrameworks/ASEProcessing.framework/Versions/A/ASEProcessing,0x1d5d32e78,0x1d5d4510c,488357888
shared-library,/System/Library/PrivateFrameworks/PhotosensitivityProcessing.framework/Versions/A/PhotosensitivityProcessing,0x286c60a40,0x286c6dd60,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL,0x21acc2c70,0x21accffd8,488357888
shared-library,/System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer,0x1ca61fc90,0x1ca62803c,488357888
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libllvm-flatbuffers.dylib,0x2738293d8,0x27386580c,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib,0x21acb4720,0x21acba188,488357888
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libGPUCompilerUtils.dylib,0x26f79a168,0x26f79e5b8,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib,0x21ad12760,0x21ad46e98,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib,0x21acd6a58,0x21acdcea0,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib,0x21ae9e430,0x21aea7b08,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib,0x21acdf7c0,0x21ad1136c,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib,0x21acd3870,0x21acd542c,488357888
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib,0x21acbc798,0x21acc0554,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore,0x1c6d4c250,0x1c6dd9698,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage,0x1c8474170,0x1c84ba400,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork,0x1c7ebd1a8,0x1c8092a24,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix,0x1c82f4050,0x1c8317300,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector,0x1c81090c0,0x1c814be1c,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray,0x1c8326198,0x1c8408aa4,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework/Versions/A/MPSFunctions,0x21e5b4f70,0x21e5c2f14,488357888
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSBenchmarkLoop.framework/Versions/A/MPSBenchmarkLoop,0x21e5973c8,0x21e5a11f8,488357888
shared-library,/System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools,0x1bb08d028,0x1bb1839e8,488357888
shared-library,/System/Library/PrivateFrameworks/IOAccelMemoryInfo.framework/Versions/A/IOAccelMemoryInfo,0x1e83bccc0,0x1e83c26b8,488357888
shared-library,/System/Library/PrivateFrameworks/kperf.framework/Versions/A/kperf,0x1f5ab87e8,0x1f5abcf88,488357888
shared-library,/System/Library/PrivateFrameworks/GPURawCounter.framework/Versions/A/GPURawCounter,0x1e373ad08,0x1e373bdd0,488357888
shared-library,/System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging,0x1e36d3ae8,0x1e36dcc48,488357888
shared-library,/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport,0x1ca1f3028,0x1ca200434,488357888
shared-library,/System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols,0x1d26e0540,0x1d26fc370,488357888
shared-library,/System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos,0x1ccc5ba40,0x1ccc6950c,488357888
shared-library,/usr/lib/libresolv.9.dylib,0x1cc8c1728,0x1cc8d9edc,488357888
shared-library,/System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal,0x1ca67de50,0x1ca72a91c,488357888
shared-library,/System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib,0x1d4b463f8,0x1d4b463f8,488357888
shared-library,/usr/lib/libheimdal-asn1.dylib,0x1ca462688,0x1ca46b6e0,488357888
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory,0x1c3fedf00,0x1c3ff4be8,488357888
shared-library,/System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth,0x1cccbe7c8,0x1ccccdd30,488357888
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory,0x1c3ffbac0,0x1c4011464,488357888
shared-library,/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation,0x1c7d430c8,0x1c7d8667c,488357888
shared-library,/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox,0x1cc5f44b0,0x1cc75898c,488357888
shared-library,/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio,0x1bd4e96d0,0x1bdabaa64,488357888
shared-library,/usr/lib/libAudioStatistics.dylib,0x1cc7fd500,0x1cc80c404,488357888
shared-library,/System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk,0x1c5e5db60,0x1c5e7b31c,488357888
shared-library,/System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore,0x1bcf127a0,0x1bd22b590,488357888
shared-library,/System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI,0x1d6e3d0b8,0x1d6ed8204,488357888
shared-library,/System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession,0x1cc79f530,0x1cc7de4a4,488357888
shared-library,/System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience,0x1ca54d150,0x1ca5cdf64,488357888
shared-library,/System/Library/PrivateFrameworks/FeatureFlags.framework/Versions/A/FeatureFlags,0x20e470718,0x20e470b10,488357888
shared-library,/System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport,0x1ca66ccd0,0x1ca67292c,488357888
shared-library,/System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata,0x1ccc3fe08,0x1ccc47eb4,488357888
shared-library,/System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy,0x1e28f3130,0x1e290b500,488357888
shared-library,/usr/lib/libSMC.dylib,0x1ccae0838,0x1ccae6168,488357888
shared-library,/usr/lib/libAudioToolboxUtility.dylib,0x1caf9ce00,0x1cafca1ec,488357888
shared-library,/usr/lib/libperfcheck.dylib,0x1ccc4db70,0x1ccc585e4,488357888
shared-library,/System/Library/PrivateFrameworks/AudioAnalytics.framework/Versions/A/AudioAnalytics,0x265208778,0x26522e694,488357888
shared-library,/System/Library/Frameworks/OSLog.framework/Versions/A/OSLog,0x206f01f30,0x206f0d66c,488357888
shared-library,/usr/lib/libmis.dylib,0x1e37067a8,0x1e372d5c0,488357888
shared-library,/System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib,0x1cc5acf90,0x1cc5e8bac,488357888
shared-library,/System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore,0x1cb0edee0,0x1cb0efc68,488357888
shared-library,/usr/lib/libspindump.dylib,0x1ca676ad8,0x1ca67aec8,488357888
shared-library,/System/Library/Frameworks/ExtensionFoundation.framework/Versions/A/ExtensionFoundation,0x21c8e4f60,0x21c97dc70,488357888
shared-library,/System/Library/PrivateFrameworks/CoreTime.framework/Versions/A/CoreTime,0x1d2810f10,0x1d281772c,488357888
shared-library,/System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices,0x1d22d31a8,0x1d23248f8,488357888
shared-library,/System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit,0x1ca347098,0x1ca371e0c,488357888
shared-library,/System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices,0x1c7d33e58,0x1c7d3bf20,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib,0x1c79e1b00,0x1c7acbed4,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib,0x1c8d4b938,0x1c9f967f4,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib,0x1c7ea7c98,0x1c7eb9590,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib,0x1c8c468c8,0x1c8c6bf78,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib,0x1c8d46570,0x1c8d49390,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib,0x1c6f34b00,0x1c795730c,488357888
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib,0x1bb9b2b60,0x1bbaa5a24,488357888
shared-library,/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL,0x27cb44588,0x27d0dec74,488357888
shared-library,/System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler,0x1cb080948,0x1cb083e08,488357888
shared-library,/System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment,0x1cb060ae0,0x1cb07b708,488357888
shared-library,/System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay,0x1cb088798,0x1cb08c2b0,488357888
shared-library,/System/Library/PrivateFrameworks/HIDDisplay.framework/Versions/A/HIDDisplay,0x207308f08,0x20731087c,488357888
shared-library,/System/Library/PrivateFrameworks/HID.framework/Versions/A/HID,0x1dc300e48,0x1dc308430,488357888
shared-library,/System/Library/PrivateFrameworks/VideoToolboxParavirtualizationSupport.framework/Versions/A/VideoToolboxParavirtualizationSupport,0x298d1d7c8,0x298d1dea4,488357888
shared-library,/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA,0x1ca3fea88,0x1ca44056c,488357888
shared-library,/System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit,0x1d151f9b0,0x1d154c59c,488357888
shared-library,/System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording,0x1d146b1c8,0x1d14f6708,488357888
shared-library,/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon,0x1bb8a6060,0x1bb98438c,488357888
shared-library,/usr/lib/libgermantok.dylib,0x1c7ea4730,0x1c7ea617c,488357888
shared-library,/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData,0x1c6f2dbd8,0x1c6f31d90,488357888
shared-library,/System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth,0x1ccc208a8,0x1ccc2be98,488357888
shared-library,/System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport,0x1c41eba20,0x1c41ed484,488357888
shared-library,/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity,0x264e17fe8,0x264e28d6c,488357888
shared-library,/usr/lib/libTLE.dylib,0x2a1f8bc60,0x2a1f91f20,488357888
shared-library,/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper,0x217d10a18,0x217d11da8,488357888
shared-library,/usr/lib/libmecab.dylib,0x1c7e44918,0x1c7e96768,488357888
shared-library,/usr/lib/libCRFSuite.dylib,0x1bbb428f0,0x1bbb715f0,488357888
shared-library,/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP,0x1c6e112e0,0x1c6f06894,488357888
shared-library,/usr/lib/libThaiTokenizer.dylib,0x1c8bfe6e8,0x1c8c03518,488357888
shared-library,/usr/lib/libCheckFix.dylib,0x1c7e0e5a8,0x1c7e1703c,488357888
shared-library,/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities,0x1c342f270,0x1c347f56c,488357888
shared-library,/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary,0x2783792d0,0x2784288a4,488357888
shared-library,/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore,0x1be62f0a8,0x1be6600f4,488357888
shared-library,/usr/lib/libapp_launch_measurement.dylib,0x1c4052840,0x1c40547bc,488357888
shared-library,/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices,0x1f5bc2cf8,0x1f5bc5118,488357888
shared-library,/usr/lib/libxslt.1.dylib,0x1ca0aa848,0x1ca0cd198,488357888
shared-library,/System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages,0x1d40e9280,0x1d4176dd0,488357888
shared-library,/System/Library/Frameworks/NetFS.framework/Versions/A/NetFS,0x1e05f1dd8,0x1e05fd494,488357888
shared-library,/usr/lib/libcurl.4.dylib,0x1d42a6af8,0x1d43129a4,488357888
shared-library,/usr/lib/libcrypto.46.dylib,0x2a21bf8e0,0x2a2290df4,488357888
shared-library,/usr/lib/libssl.48.dylib,0x2a2ce9790,0x2a2d19db0,488357888
shared-library,/System/Library/Frameworks/LDAP.framework/Versions/A/LDAP,0x1d3f7eaf0,0x1d3faf8d0,488357888
shared-library,/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent,0x1d3fba638,0x1d3fbb3f4,488357888
shared-library,/usr/lib/libsasl2.2.dylib,0x1cc8de7d0,0x1cc8eda8c,488357888
shared-library-end
tick,0x19d5edbb0,1917,0,0x0,6
profiler,begin,1000
new,CodeRange,0x108600000,0
new,MemoryChunk,0x304d5efc0000,262144
new,MemoryChunk,0x152faf240000,262144
new,MemoryChunk,0x5fc9a740000,262144
new,MemoryChunk,0xa85b340000,262144
new,MemoryChunk,0x3ce7de7c0000,262144
new,MemoryChunk,0x31315be00000,262144
heap-capacity,1030912
heap-available,4346312192
new,MemoryChunk,0x315d24f40000,262144
tick,0x1016ac070,3209,0,0x0,6
new,MemoryChunk,0x2f1cca480000,262144
new,MemoryChunk,0x195fc1ac0000,278528
new,MemoryChunk,0x76180f00000,262144
new,MemoryChunk,0x1f5524e40000,262144
new,MemoryChunk,0x36812ca40000,262144
new,MemoryChunk,0x107c6ff40000,262144
tick,0x101406e00,4459,0,0x0,1
new,MemoryChunk,0x340e31800000,262144
code-creation,Builtin,2,5000,0x101b78000,788,DeoptimizationEntry_Eager
code-creation,Builtin,2,5000,0x101b78320,788,DeoptimizationEntry_Lazy
code-creation,Builtin,2,5000,0x101b78640,1972,RecordWriteSaveFP
code-creation,Builtin,2,5000,0x101b78e00,1300,RecordWriteIgnoreFP
code-creation,Builtin,2,5042,0x101b79320,268,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,5042,0x101b79440,172,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,5042,0x101b79500,76,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,5042,0x101b79560,40,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,5042,0x101b795a0,40,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,5042,0x101b795e0,336,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,5042,0x101b79740,412,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,5042,0x101b798e0,452,CallFunction_ReceiverIsAny
code-creation,Builtin,2,5042,0x101b79ac0,232,CallBoundFunction
code-creation,Builtin,2,5042,0x101b79bc0,908,CallWrappedFunction
code-creation,Builtin,2,5042,0x101b79f60,192,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,5042,0x101b7a040,192,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,5084,0x101b7a120,192,Call_ReceiverIsAny
code-creation,Builtin,2,5084,0x101b7a200,820,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,5084,0x101b7a540,820,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,5084,0x101b7a880,956,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,5084,0x101b7ac40,956,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,5084,0x101b7b000,956,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,5084,0x101b7b3c0,956,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,5125,0x101b7b780,792,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,5125,0x101b7baa0,792,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,5125,0x101b7bdc0,792,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,5125,0x101b7c0e0,764,CallProxy
code-creation,Builtin,2,5125,0x101b7c3e0,172,CallVarargs
code-creation,Builtin,2,5125,0x101b7c4a0,1152,CallWithSpread
code-creation,Builtin,2,5125,0x101b7c940,1896,CallWithSpread_Baseline
code-creation,Builtin,2,5125,0x101b7d0c0,1960,CallWithSpread_WithFeedback
code-creation,Builtin,2,5125,0x101b7d880,1172,CallWithArrayLike
code-creation,Builtin,2,5125,0x101b7dd20,1948,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,5125,0x101b7e4c0,196,CallForwardVarargs
code-creation,Builtin,2,5125,0x101b7e5a0,196,CallFunctionForwardVarargs
code-creation,Builtin,2,5125,0x101b7e680,396,CallFunctionTemplate_Generic
code-creation,Builtin,2,5167,0x101b7e820,188,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,5167,0x101b7e8e0,268,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,5167,0x101b7ea00,356,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,5167,0x101b7eb80,24,ConstructFunction
code-creation,Builtin,2,5167,0x101b7eba0,236,ConstructBoundFunction
code-creation,Builtin,2,5167,0x101b7eca0,44,ConstructedNonConstructable
code-creation,Builtin,2,5167,0x101b7ece0,88,Construct
code-creation,Builtin,2,5167,0x101b7ed40,172,ConstructVarargs
code-creation,Builtin,2,5167,0x101b7ee00,1180,ConstructWithSpread
code-creation,Builtin,2,5167,0x101b7f2a0,1912,ConstructWithSpread_Baseline
code-creation,Builtin,2,5167,0x101b7fa20,1892,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,5167,0x101b801a0,1300,ConstructWithArrayLike
code-creation,Builtin,2,5209,0x101b806c0,2012,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,5209,0x101b80ea0,248,ConstructForwardVarargs
code-creation,Builtin,2,5209,0x101b80fa0,120,ConstructForwardAllArgs
code-creation,Builtin,2,5209,0x101b81020,696,ConstructForwardAllArgs_Baseline
code-creation,Builtin,2,5209,0x101b812e0,684,ConstructForwardAllArgs_WithFeedback
code-creation,Builtin,2,5209,0x101b815a0,248,ConstructFunctionForwardVarargs
code-creation,Builtin,2,5209,0x101b816a0,712,Construct_Baseline
code-creation,Builtin,2,5209,0x101b81980,716,Construct_WithFeedback
code-creation,Builtin,2,5209,0x101b81c60,540,JSConstructStubGeneric
code-creation,Builtin,2,5209,0x101b81e80,448,JSBuiltinsConstructStub
code-creation,Builtin,2,5209,0x101b82060,840,FastNewObject
code-creation,Builtin,2,5209,0x101b823c0,376,FastNewClosure
code-creation,Builtin,2,5250,0x101b82540,796,ConstructProxy
code-creation,Builtin,2,5250,0x101b82860,236,JSEntry
code-creation,Builtin,2,5250,0x101b82960,236,JSConstructEntry
code-creation,Builtin,2,5250,0x101b82a60,236,JSRunMicrotasksEntry
code-creation,Builtin,2,5250,0x101b82b60,184,JSEntryTrampoline
code-creation,Builtin,2,5250,0x101b82c20,184,JSConstructEntryTrampoline
code-creation,Builtin,2,5250,0x101b82ce0,356,ResumeGeneratorTrampoline
code-creation,Builtin,2,5250,0x101b82e60,1400,StringFromCodePointAt
code-creation,Builtin,2,5250,0x101b833e0,808,StringEqual
code-creation,Builtin,2,5250,0x101b83720,380,StringGreaterThan
code-creation,Builtin,2,5250,0x101b838a0,380,StringGreaterThanOrEqual
code-creation,Builtin,2,5250,0x101b83a20,380,StringLessThan
code-creation,Builtin,2,5250,0x101b83ba0,380,StringLessThanOrEqual
code-creation,Builtin,2,5250,0x101b83d20,380,StringCompare
code-creation,Builtin,2,5292,0x101b83ea0,3772,StringSubstring
code-creation,Builtin,2,5292,0x101b84d60,124,OrderedHashTableHealIndex
code-creation,Builtin,2,5292,0x101b84de0,1088,InterpreterEntryTrampoline
code-creation,Builtin,2,5292,0x101b85240,1124,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,5292,0x101b856c0,120,InterpreterForwardAllArgsThenConstruct
code-creation,Builtin,2,5292,0x101b85740,124,InterpreterPushArgsThenCall
code-creation,Builtin,2,5292,0x101b857c0,132,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,5292,0x101b85860,132,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,5292,0x101b85900,132,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,5292,0x101b859a0,840,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,5334,0x101b85d00,132,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,5334,0x101b85da0,140,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,5334,0x101b85e40,88,InterpreterEnterAtBytecode
code-creation,Builtin,2,5334,0x101b85ea0,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,5334,0x101b85f80,144,InterpreterOnStackReplacement
code-creation,Builtin,2,5334,0x101b86020,496,BaselineOutOfLinePrologue
code-creation,Builtin,2,5334,0x101b86220,24,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,5334,0x101b86240,140,BaselineOnStackReplacement
code-creation,Builtin,2,5334,0x101b862e0,100,BaselineLeaveFrame
code-creation,Builtin,2,5334,0x101b86360,224,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,5334,0x101b86460,228,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,5334,0x101b86560,204,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,5375,0x101b86640,4,MaglevOnStackReplacement
code-creation,Builtin,2,5375,0x101b86660,4,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,5375,0x101b86680,4,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,5375,0x101b866a0,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,5375,0x101b866c0,1192,CompileLazy
code-creation,Builtin,2,5375,0x101b86b80,76,CompileLazyDeoptimizedCode
code-creation,Builtin,2,5375,0x101b86be0,276,InstantiateAsmJs
code-creation,Builtin,2,5375,0x101b86d00,44,NotifyDeoptimized
code-creation,Builtin,2,5375,0x101b86d40,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,5375,0x101b86da0,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,5375,0x101b86e00,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,5417,0x101b86e60,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,5417,0x101b86ee0,364,CallApiCallbackGeneric
code-creation,Builtin,2,5417,0x101b87060,304,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,5417,0x101b871a0,336,CallApiCallbackOptimized
code-creation,Builtin,2,5417,0x101b87300,304,CallApiGetter
code-creation,Builtin,2,5417,0x101b87440,40,HandleApiCallOrConstruct
code-creation,Builtin,2,5417,0x101b87480,8,HandleApiConstruct
code-creation,Builtin,2,5417,0x101b874a0,8,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,5417,0x101b874c0,8,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,5417,0x101b874e0,52,AllocateInYoungGeneration
code-creation,Builtin,2,5417,0x101b87520,52,AllocateInOldGeneration
code-creation,Builtin,2,5417,0x101b87560,52,WasmAllocateInYoungGeneration
code-creation,Builtin,2,5417,0x101b875a0,52,WasmAllocateInOldGeneration
code-creation,Builtin,2,5459,0x101b875e0,140,NewHeapNumber
code-creation,Builtin,2,5459,0x101b87680,644,CopyFastSmiOrObjectElements
code-creation,Builtin,2,5459,0x101b87920,548,GrowFastDoubleElements
code-creation,Builtin,2,5459,0x101b87b60,480,GrowFastSmiOrObjectElements
code-creation,Builtin,2,5459,0x101b87d60,448,DebugBreakTrampoline
code-creation,Builtin,2,5459,0x101b87f40,320,RestartFrameTrampoline
code-creation,Builtin,2,5459,0x101b880a0,220,ToNumber
code-creation,Builtin,2,5459,0x101b88180,124,ToBigInt
code-creation,Builtin,2,5459,0x101b88200,324,ToNumber_Baseline
code-creation,Builtin,2,5459,0x101b88360,388,ToNumeric_Baseline
code-creation,Builtin,2,5459,0x101b88500,140,PlainPrimitiveToNumber
code-creation,Builtin,2,5459,0x101b885a0,260,ToNumberConvertBigInt
code-creation,Builtin,2,5459,0x101b886c0,100,ToBigIntConvertNumber
code-creation,Builtin,2,5500,0x101b88740,208,Typeof
code-creation,Builtin,2,5500,0x101b88820,140,BigIntToI64
code-creation,Builtin,2,5500,0x101b888c0,8,BigIntToI32Pair
code-creation,Builtin,2,5500,0x101b888e0,248,I64ToBigInt
code-creation,Builtin,2,5500,0x101b889e0,8,I32PairToBigInt
code-creation,Builtin,2,5500,0x101b88a00,152,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,5500,0x101b88aa0,176,MathCeilContinuation
code-creation,Builtin,2,5500,0x101b88b60,176,MathFloorContinuation
code-creation,Builtin,2,5500,0x101b88c20,200,MathRoundContinuation
code-creation,Builtin,2,5500,0x101b88d00,4124,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,5500,0x101b89d20,21300,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,5500,0x101b8f060,12500,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,5542,0x101b92140,740,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,5542,0x101b92440,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,5542,0x101b924a0,16,LoadIC_StringLength
code-creation,Builtin,2,5542,0x101b924c0,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,5542,0x101b924e0,4100,LoadIC_NoFeedback
code-creation,Builtin,2,5584,0x101b93500,44,StoreGlobalIC_Slow
code-creation,Builtin,2,5584,0x101b93540,8552,StoreIC_NoFeedback
code-creation,Builtin,2,5584,0x101b956c0,4372,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,5584,0x101b967e0,220,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,5584,0x101b968c0,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,5584,0x101b96920,288,KeyedStoreIC_SloppyArguments_InBounds
code-creation,Builtin,2,5584,0x101b96a60,288,KeyedStoreIC_SloppyArguments_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,5584,0x101b96ba0,288,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,5584,0x101b96ce0,288,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,5625,0x101b96e20,16340,StoreFastElementIC_InBounds
code-creation,Builtin,2,5625,0x101b9ae00,12568,StoreFastElementIC_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,5625,0x101b9df20,15332,StoreFastElementIC_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,5625,0x101ba1b20,7516,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,5625,0x101ba3880,8880,ElementsTransitionAndStore_InBounds
code-creation,Builtin,2,5625,0x101ba5b40,22960,ElementsTransitionAndStore_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,5625,0x101bab500,8880,ElementsTransitionAndStore_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,5625,0x101bad7c0,13628,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,5625,0x101bb0d00,1096,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,5625,0x101bb1160,196,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,5667,0x101bb1240,68,HasIndexedInterceptorIC
code-creation,Builtin,2,5667,0x101bb12a0,152,EnqueueMicrotask
code-creation,Builtin,2,5667,0x101bb1340,8,RunMicrotasksTrampoline
code-creation,Builtin,2,5667,0x101bb1360,3216,RunMicrotasks
code-creation,Builtin,2,5667,0x101bb2000,4672,HasProperty
code-creation,Builtin,2,5667,0x101bb3260,1252,DeleteProperty
code-creation,Builtin,2,5667,0x101bb3760,2588,CopyDataProperties
code-creation,Builtin,2,5667,0x101bb4180,10664,SetDataProperties
code-creation,Builtin,2,5667,0x101bb6b40,3556,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,5667,0x101bb7940,76,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,5667,0x101bb79a0,32,Abort
code-creation,Builtin,2,5667,0x101bb79e0,32,AbortCSADcheck
code-creation,Builtin,2,5709,0x101bb7a20,8,EmptyFunction
code-creation,Builtin,2,5709,0x101bb7a40,8,Illegal
code-creation,Builtin,2,5709,0x101bb7a60,8,StrictPoisonPillThrower
code-creation,Builtin,2,5709,0x101bb7a80,8,UnsupportedThrower
code-creation,Builtin,2,5709,0x101bb7aa0,80,ReturnReceiver
code-creation,Builtin,2,5709,0x101bb7b00,36,ArrayConstructor
code-creation,Builtin,2,5709,0x101bb7b40,452,ArrayConstructorImpl
code-creation,Builtin,2,5709,0x101bb7d20,228,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,5750,0x101bb7e20,228,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,5750,0x101bb7f20,188,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,5750,0x101bb7fe0,188,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,5792,0x101bb80a0,188,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,5792,0x101bb8160,188,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,5792,0x101bb8220,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,5792,0x101bb8300,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,5792,0x101bb83e0,864,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,5792,0x101bb8760,840,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,5792,0x101bb8ac0,752,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,5834,0x101bb8dc0,728,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,5834,0x101bb90a0,752,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,5834,0x101bb93a0,728,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,5834,0x101bb9680,844,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,5834,0x101bb99e0,820,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,5834,0x101bb9d20,60,ArrayNArgumentsConstructor
code-creation,Builtin,2,5875,0x101bb9d60,8,ArrayConcat
code-creation,Builtin,2,5875,0x101bb9d80,8,ArrayPrototypeFill
code-creation,Builtin,2,5875,0x101bb9da0,1996,ArrayIncludesSmi
code-creation,Builtin,2,5875,0x101bba580,1932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,5875,0x101bbad20,344,ArrayIncludesPackedDoubles
code-creation,Builtin,2,5875,0x101bbae80,472,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,5875,0x101bbb060,648,ArrayIncludes
code-creation,Builtin,2,5917,0x101bbb300,1820,ArrayIndexOfSmi
code-creation,Builtin,2,5917,0x101bbba20,1760,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,5917,0x101bbc120,276,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,5917,0x101bbc240,276,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,5917,0x101bbc360,648,ArrayIndexOf
code-creation,Builtin,2,5917,0x101bbc600,8,ArrayPop
code-creation,Builtin,2,5917,0x101bbc620,580,ArrayPrototypePop
code-creation,Builtin,2,5917,0x101bbc880,8,ArrayPush
code-creation,Builtin,2,5917,0x101bbc8a0,2504,ArrayPrototypePush
code-creation,Builtin,2,5917,0x101bbd280,8,ArrayShift
code-creation,Builtin,2,5959,0x101bbd2a0,8,ArrayUnshift
code-creation,Builtin,2,5959,0x101bbd2c0,1252,CloneFastJSArray
code-creation,Builtin,2,5959,0x101bbd7c0,2712,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,5959,0x101bbe260,1248,ExtractFastJSArray
code-creation,Builtin,2,5959,0x101bbe760,256,ArrayPrototypeEntries
code-creation,Builtin,2,5959,0x101bbe880,252,ArrayPrototypeKeys
code-creation,Builtin,2,5959,0x101bbe980,256,ArrayPrototypeValues
code-creation,Builtin,2,6000,0x101bbeaa0,4268,ArrayIteratorPrototypeNext
code-creation,Builtin,2,6000,0x101bbfb60,8,ArrayBufferConstructor
code-creation,Builtin,2,6000,0x101bbfb80,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,6000,0x101bbfba0,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,6000,0x101bbfbc0,8,ArrayBufferPrototypeResize
code-creation,Builtin,2,6000,0x101bbfbe0,8,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,6000,0x101bbfc00,8,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,6042,0x101bbfc20,1256,AsyncFunctionEnter
code-creation,Builtin,2,6042,0x101bc0120,96,AsyncFunctionReject
code-creation,Builtin,2,6042,0x101bc01a0,92,AsyncFunctionResolve
code-creation,Builtin,2,6042,0x101bc0200,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,6042,0x101bc0220,1936,AsyncFunctionAwaitCaught
code-creation,Builtin,2,6042,0x101bc09c0,1936,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,6042,0x101bc1160,208,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,6042,0x101bc1240,204,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,6084,0x101bc1320,8,BigIntConstructor
code-creation,Builtin,2,6084,0x101bc1340,8,BigIntAsUintN
code-creation,Builtin,2,6084,0x101bc1360,8,BigIntAsIntN
code-creation,Builtin,2,6084,0x101bc1380,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,6084,0x101bc13a0,8,BigIntPrototypeToString
code-creation,Builtin,2,6084,0x101bc13c0,8,BigIntPrototypeValueOf
code-creation,Builtin,2,6084,0x101bc13e0,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,6084,0x101bc1400,8,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,6084,0x101bc1420,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,6125,0x101bc1440,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,6125,0x101bc1460,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,6125,0x101bc1480,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,6125,0x101bc14a0,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,6125,0x101bc14c0,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,6125,0x101bc14e0,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,6167,0x101bc1500,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,6167,0x101bc1520,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,6167,0x101bc1540,8,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,6167,0x101bc1560,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,6167,0x101bc1580,8,CallSitePrototypeGetThis
code-creation,Builtin,2,6167,0x101bc15a0,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,6167,0x101bc15c0,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,6167,0x101bc15e0,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,6209,0x101bc1600,8,CallSitePrototypeIsEval
code-creation,Builtin,2,6209,0x101bc1620,8,CallSitePrototypeIsNative
code-creation,Builtin,2,6209,0x101bc1640,8,CallSitePrototypeIsPromiseAll
tick,0x19d5f1aa4,6209,0,0x0,6
code-creation,Builtin,2,6209,0x101bc1660,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,6250,0x101bc1680,8,CallSitePrototypeToString
code-creation,Builtin,2,6250,0x101bc16a0,8,ConsoleDebug
code-creation,Builtin,2,6250,0x101bc16c0,8,ConsoleError
code-creation,Builtin,2,6250,0x101bc16e0,8,ConsoleInfo
code-creation,Builtin,2,6250,0x101bc1700,8,ConsoleLog
code-creation,Builtin,2,6250,0x101bc1720,8,ConsoleWarn
code-creation,Builtin,2,6250,0x101bc1740,8,ConsoleDir
code-creation,Builtin,2,6250,0x101bc1760,8,ConsoleDirXml
code-creation,Builtin,2,6250,0x101bc1780,8,ConsoleTable
code-creation,Builtin,2,6250,0x101bc17a0,8,ConsoleTrace
code-creation,Builtin,2,6250,0x101bc17c0,8,ConsoleGroup
code-creation,Builtin,2,6292,0x101bc17e0,8,ConsoleGroupCollapsed
code-creation,Builtin,2,6292,0x101bc1800,8,ConsoleGroupEnd
code-creation,Builtin,2,6292,0x101bc1820,8,ConsoleClear
code-creation,Builtin,2,6292,0x101bc1840,8,ConsoleCount
code-creation,Builtin,2,6292,0x101bc1860,8,ConsoleCountReset
code-creation,Builtin,2,6292,0x101bc1880,8,ConsoleAssert
code-creation,Builtin,2,6292,0x101bc18a0,8,ConsoleProfile
code-creation,Builtin,2,6292,0x101bc18c0,8,ConsoleProfileEnd
code-creation,Builtin,2,6292,0x101bc18e0,8,ConsoleTime
code-creation,Builtin,2,6292,0x101bc1900,8,ConsoleTimeLog
code-creation,Builtin,2,6292,0x101bc1920,8,ConsoleTimeEnd
code-creation,Builtin,2,6292,0x101bc1940,8,ConsoleTimeStamp
code-creation,Builtin,2,6292,0x101bc1960,8,ConsoleContext
code-creation,Builtin,2,6292,0x101bc1980,8,DataViewConstructor
code-creation,Builtin,2,6334,0x101bc19a0,8,DateConstructor
code-creation,Builtin,2,6334,0x101bc19c0,196,DatePrototypeGetDate
code-creation,Builtin,2,6334,0x101bc1aa0,196,DatePrototypeGetDay
code-creation,Builtin,2,6334,0x101bc1b80,196,DatePrototypeGetFullYear
code-creation,Builtin,2,6334,0x101bc1c60,196,DatePrototypeGetHours
code-creation,Builtin,2,6334,0x101bc1d40,168,DatePrototypeGetMilliseconds
code-creation,Builtin,2,6334,0x101bc1e00,196,DatePrototypeGetMinutes
code-creation,Builtin,2,6334,0x101bc1ee0,196,DatePrototypeGetMonth
code-creation,Builtin,2,6334,0x101bc1fc0,196,DatePrototypeGetSeconds
code-creation,Builtin,2,6334,0x101bc20a0,144,DatePrototypeGetTime
code-creation,Builtin,2,6375,0x101bc2140,168,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,6375,0x101bc2200,168,DatePrototypeGetUTCDate
code-creation,Builtin,2,6375,0x101bc22c0,168,DatePrototypeGetUTCDay
code-creation,Builtin,2,6375,0x101bc2380,168,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,6375,0x101bc2440,168,DatePrototypeGetUTCHours
code-creation,Builtin,2,6375,0x101bc2500,168,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,6375,0x101bc25c0,168,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,6375,0x101bc2680,168,DatePrototypeGetUTCMonth
code-creation,Builtin,2,6375,0x101bc2740,168,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,6375,0x101bc2800,144,DatePrototypeValueOf
code-creation,Builtin,2,6375,0x101bc28a0,460,DatePrototypeToPrimitive
code-creation,Builtin,2,6375,0x101bc2a80,8,DatePrototypeGetYear
code-creation,Builtin,2,6417,0x101bc2aa0,8,DatePrototypeSetYear
code-creation,Builtin,2,6417,0x101bc2ac0,8,DateNow
code-creation,Builtin,2,6417,0x101bc2ae0,8,DateParse
code-creation,Builtin,2,6417,0x101bc2b00,8,DatePrototypeSetDate
code-creation,Builtin,2,6417,0x101bc2b20,8,DatePrototypeSetFullYear
code-creation,Builtin,2,6417,0x101bc2b40,8,DatePrototypeSetHours
code-creation,Builtin,2,6417,0x101bc2b60,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,6417,0x101bc2b80,8,DatePrototypeSetMinutes
code-creation,Builtin,2,6417,0x101bc2ba0,8,DatePrototypeSetMonth
code-creation,Builtin,2,6417,0x101bc2bc0,8,DatePrototypeSetSeconds
code-creation,Builtin,2,7875,0x101bc2be0,8,DatePrototypeSetTime
code-creation,Builtin,2,7875,0x101bc2c00,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,7917,0x101bc2c20,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,7917,0x101bc2c40,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,7917,0x101bc2c60,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,7917,0x101bc2c80,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,7917,0x101bc2ca0,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,7917,0x101bc2cc0,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,7917,0x101bc2ce0,8,DatePrototypeToDateString
code-creation,Builtin,2,7917,0x101bc2d00,8,DatePrototypeToISOString
code-creation,Builtin,2,7917,0x101bc2d20,8,DatePrototypeToUTCString
code-creation,Builtin,2,7959,0x101bc2d40,8,DatePrototypeToString
code-creation,Builtin,2,7959,0x101bc2d60,8,DatePrototypeToTimeString
code-creation,Builtin,2,7959,0x101bc2d80,8,DatePrototypeToJson
code-creation,Builtin,2,7959,0x101bc2da0,8,DateUTC
code-creation,Builtin,2,7959,0x101bc2dc0,8,ErrorConstructor
code-creation,Builtin,2,7959,0x101bc2de0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,7959,0x101bc2e00,8,ErrorPrototypeToString
code-creation,Builtin,2,7959,0x101bc2e20,8,FunctionConstructor
code-creation,Builtin,2,7959,0x101bc2e40,80,FunctionPrototypeApply
code-creation,Builtin,2,8000,0x101bc2ea0,8,FunctionPrototypeBind
code-creation,Builtin,2,8000,0x101bc2ec0,8,WebAssemblyFunctionPrototypeBind
code-creation,Builtin,2,8000,0x101bc2ee0,152,FunctionPrototypeCall
code-creation,Builtin,2,8000,0x101bc2f80,8,FunctionPrototypeToString
code-creation,Builtin,2,8000,0x101bc2fa0,276,CreateIterResultObject
code-creation,Builtin,2,8000,0x101bc30c0,1060,CreateGeneratorObject
code-creation,Builtin,2,8000,0x101bc3500,8,GeneratorFunctionConstructor
code-creation,Builtin,2,8000,0x101bc3520,436,GeneratorPrototypeNext
code-creation,Builtin,2,8000,0x101bc36e0,440,GeneratorPrototypeReturn
code-creation,Builtin,2,8000,0x101bc38a0,452,GeneratorPrototypeThrow
code-creation,Builtin,2,8042,0x101bc3a80,8,AsyncFunctionConstructor
code-creation,Builtin,2,8042,0x101bc3aa0,368,SuspendGeneratorBaseline
code-creation,Builtin,2,8042,0x101bc3c20,116,ResumeGeneratorBaseline
code-creation,Builtin,2,8042,0x101bc3ca0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,8042,0x101bc3ce0,116,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,8042,0x101bc3d60,8,GlobalDecodeURI
code-creation,Builtin,2,8042,0x101bc3d80,8,GlobalDecodeURIComponent
code-creation,Builtin,2,8042,0x101bc3da0,8,GlobalEncodeURI
code-creation,Builtin,2,8084,0x101bc3dc0,8,GlobalEncodeURIComponent
code-creation,Builtin,2,8084,0x101bc3de0,8,GlobalEscape
code-creation,Builtin,2,8084,0x101bc3e00,8,GlobalUnescape
code-creation,Builtin,2,8084,0x101bc3e20,8,GlobalEval
code-creation,Builtin,2,8084,0x101bc3e40,160,GlobalIsFinite
code-creation,Builtin,2,8084,0x101bc3f00,156,GlobalIsNaN
code-creation,Builtin,2,8084,0x101bc3fa0,8,JsonParse
code-creation,Builtin,2,8084,0x101bc3fc0,8,JsonStringify
code-creation,Builtin,2,8084,0x101bc3fe0,8,JsonRawJson
code-creation,Builtin,2,8125,0x101bc4000,8,JsonIsRawJson
code-creation,Builtin,2,8125,0x101bc4020,4704,LoadIC
code-creation,Builtin,2,8125,0x101bc52a0,4348,LoadIC_Megamorphic
code-creation,Builtin,2,8125,0x101bc63a0,4584,LoadIC_Noninlined
code-creation,Builtin,2,8125,0x101bc75a0,48,LoadICTrampoline
code-creation,Builtin,2,8125,0x101bc75e0,28,LoadICBaseline
code-creation,Builtin,2,8125,0x101bc7600,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,8125,0x101bc7640,9504,LoadSuperIC
code-creation,Builtin,2,8125,0x101bc9b80,28,LoadSuperICBaseline
code-creation,Builtin,2,8125,0x101bc9ba0,9048,KeyedLoadIC
code-creation,Builtin,2,8167,0x101bcbf00,9448,EnumeratedKeyedLoadIC
code-creation,Builtin,2,8167,0x101bce400,17016,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,8167,0x101bd2680,48,KeyedLoadICTrampoline
code-creation,Builtin,2,8167,0x101bd26c0,28,KeyedLoadICBaseline
code-creation,Builtin,2,8167,0x101bd26e0,36,EnumeratedKeyedLoadICBaseline
code-creation,Builtin,2,8167,0x101bd2720,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,8167,0x101bd2760,5580,StoreGlobalIC
code-creation,Builtin,2,8167,0x101bd3d40,48,StoreGlobalICTrampoline
code-creation,Builtin,2,8167,0x101bd3d80,28,StoreGlobalICBaseline
code-creation,Builtin,2,8209,0x101bd3da0,5720,StoreIC
code-creation,Builtin,2,8209,0x101bd5400,5524,StoreIC_Megamorphic
code-creation,Builtin,2,8209,0x101bd69a0,48,StoreICTrampoline
code-creation,Builtin,2,8209,0x101bd69e0,48,StoreICTrampoline_Megamorphic
code-creation,Builtin,2,8209,0x101bd6a20,28,StoreICBaseline
code-creation,Builtin,2,8209,0x101bd6a40,5568,DefineNamedOwnIC
code-creation,Builtin,2,8209,0x101bd8020,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,8250,0x101bd8060,28,DefineNamedOwnICBaseline
code-creation,Builtin,2,8250,0x101bd8080,6148,KeyedStoreIC
code-creation,Builtin,2,8250,0x101bd98a0,48,KeyedStoreICTrampoline
code-creation,Builtin,2,8250,0x101bd98e0,48,KeyedStoreICTrampoline_Megamorphic
code-creation,Builtin,2,8250,0x101bd9920,28,KeyedStoreICBaseline
code-creation,Builtin,2,8250,0x101bd9940,5660,DefineKeyedOwnIC
code-creation,Builtin,2,8250,0x101bdaf60,56,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,8250,0x101bdafa0,36,DefineKeyedOwnICBaseline
code-creation,Builtin,2,8250,0x101bdafe0,368,StoreInArrayLiteralIC
code-creation,Builtin,2,8250,0x101bdb160,28,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,8292,0x101bdb180,172,LookupContextTrampoline
code-creation,Builtin,2,8292,0x101bdb240,184,LookupContextBaseline
code-creation,Builtin,2,8292,0x101bdb300,172,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,8292,0x101bdb3c0,184,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,8292,0x101bdb480,2740,LoadGlobalIC
code-creation,Builtin,2,8292,0x101bdbf40,2720,LoadGlobalICInsideTypeof
code-creation,Builtin,2,8292,0x101bdca00,48,LoadGlobalICTrampoline
code-creation,Builtin,2,8292,0x101bdca40,28,LoadGlobalICBaseline
code-creation,Builtin,2,8292,0x101bdca60,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,8292,0x101bdcaa0,28,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,8292,0x101bdcac0,152,LookupGlobalIC
code-creation,Builtin,2,8292,0x101bdcb60,192,LookupGlobalICTrampoline
code-creation,Builtin,2,8334,0x101bdcc40,176,LookupGlobalICBaseline
code-creation,Builtin,2,8334,0x101bdcd00,152,LookupGlobalICInsideTypeof
code-creation,Builtin,2,8334,0x101bdcda0,192,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,8334,0x101bdce80,176,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,8334,0x101bdcf40,3116,CloneObjectIC
code-creation,Builtin,2,8334,0x101bddb80,28,CloneObjectICBaseline
code-creation,Builtin,2,8334,0x101bddba0,2816,CloneObjectIC_Slow
code-creation,Builtin,2,8334,0x101bde6c0,3072,KeyedHasIC
code-creation,Builtin,2,8334,0x101bdf2e0,28,KeyedHasICBaseline
code-creation,Builtin,2,8334,0x101bdf300,4672,KeyedHasIC_Megamorphic
code-creation,Builtin,2,8375,0x101be0560,1736,IterableToList
code-creation,Builtin,2,8375,0x101be0c40,1544,IterableToFixedArray
code-creation,Builtin,2,8375,0x101be1260,968,IterableToListWithSymbolLookup
code-creation,Builtin,2,8375,0x101be1640,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,8375,0x101be16a0,120,IterableToListMayPreserveHoles
code-creation,Builtin,2,8375,0x101be1720,120,IterableToListConvertHoles
code-creation,Builtin,2,8375,0x101be17a0,1264,IterableToFixedArrayForWasm
code-creation,Builtin,2,8375,0x101be1ca0,1664,StringListFromIterable
code-creation,Builtin,2,8375,0x101be2340,1280,FindOrderedHashMapEntry
code-creation,Builtin,2,8375,0x101be2860,4696,MapConstructor
code-creation,Builtin,2,8375,0x101be3ac0,1936,MapPrototypeSet
code-creation,Builtin,2,8375,0x101be4260,1516,MapPrototypeDelete
code-creation,Builtin,2,8417,0x101be4860,236,MapPrototypeGet
code-creation,Builtin,2,8417,0x101be4960,192,MapPrototypeHas
code-creation,Builtin,2,8417,0x101be4a40,8,MapPrototypeClear
code-creation,Builtin,2,8417,0x101be4a60,288,MapPrototypeEntries
code-creation,Builtin,2,8417,0x101be4ba0,160,MapPrototypeGetSize
code-creation,Builtin,2,8417,0x101be4c60,532,MapPrototypeForEach
code-creation,Builtin,2,8417,0x101be4e80,288,MapPrototypeKeys
code-creation,Builtin,2,8417,0x101be4fc0,288,MapPrototypeValues
code-creation,Builtin,2,8417,0x101be5100,868,MapIteratorPrototypeNext
code-creation,Builtin,2,8417,0x101be5480,1184,MapIteratorToList
code-creation,Builtin,2,8417,0x101be5940,8,NumberPrototypeToExponential
code-creation,Builtin,2,8417,0x101be5960,8,NumberPrototypeToFixed
code-creation,Builtin,2,8459,0x101be5980,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,8459,0x101be59a0,8,NumberPrototypeToPrecision
code-creation,Builtin,2,8459,0x101be59c0,348,SameValue
code-creation,Builtin,2,8459,0x101be5b20,184,SameValueNumbersOnly
code-creation,Builtin,2,8459,0x101be5be0,1492,Add_Baseline
code-creation,Builtin,2,8459,0x101be61c0,1024,AddSmi_Baseline
code-creation,Builtin,2,8500,0x101be65e0,1396,Subtract_Baseline
code-creation,Builtin,2,8500,0x101be6b60,1000,SubtractSmi_Baseline
code-creation,Builtin,2,8500,0x101be6f60,1492,Multiply_Baseline
code-creation,Builtin,2,8500,0x101be7540,1092,MultiplySmi_Baseline
code-creation,Builtin,2,8500,0x101be79a0,1536,Divide_Baseline
code-creation,Builtin,2,8500,0x101be7fc0,1216,DivideSmi_Baseline
code-creation,Builtin,2,8500,0x101be84a0,1432,Modulus_Baseline
code-creation,Builtin,2,8500,0x101be8a40,1060,ModulusSmi_Baseline
code-creation,Builtin,2,8542,0x101be8e80,668,Exponentiate_Baseline
code-creation,Builtin,2,8542,0x101be9120,572,ExponentiateSmi_Baseline
code-creation,Builtin,2,8542,0x101be9360,1452,BitwiseAnd_Baseline
code-creation,Builtin,2,8542,0x101be9920,400,BitwiseAndSmi_Baseline
code-creation,Builtin,2,8542,0x101be9ac0,1452,BitwiseOr_Baseline
code-creation,Builtin,2,8542,0x101bea080,400,BitwiseOrSmi_Baseline
code-creation,Builtin,2,8542,0x101bea220,1452,BitwiseXor_Baseline
code-creation,Builtin,2,8542,0x101bea7e0,400,BitwiseXorSmi_Baseline
code-creation,Builtin,2,8542,0x101bea980,968,ShiftLeft_Baseline
code-creation,Builtin,2,8542,0x101bead60,408,ShiftLeftSmi_Baseline
code-creation,Builtin,2,8584,0x101beaf00,968,ShiftRight_Baseline
code-creation,Builtin,2,8584,0x101beb2e0,396,ShiftRightSmi_Baseline
code-creation,Builtin,2,8584,0x101beb480,1036,ShiftRightLogical_Baseline
code-creation,Builtin,2,8584,0x101beb8a0,644,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,8584,0x101bebb40,1380,Add_WithFeedback
code-creation,Builtin,2,8584,0x101bec0c0,1328,Subtract_WithFeedback
code-creation,Builtin,2,8584,0x101bec600,1416,Multiply_WithFeedback
code-creation,Builtin,2,8584,0x101becba0,1448,Divide_WithFeedback
code-creation,Builtin,2,8625,0x101bed160,1344,Modulus_WithFeedback
code-creation,Builtin,2,8625,0x101bed6c0,620,Exponentiate_WithFeedback
code-creation,Builtin,2,8625,0x101bed940,1372,BitwiseAnd_WithFeedback
code-creation,Builtin,2,8625,0x101bedea0,1372,BitwiseOr_WithFeedback
code-creation,Builtin,2,8625,0x101bee400,1372,BitwiseXor_WithFeedback
code-creation,Builtin,2,8625,0x101bee960,896,ShiftLeft_WithFeedback
code-creation,Builtin,2,8625,0x101beed00,896,ShiftRight_WithFeedback
code-creation,Builtin,2,8625,0x101bef0a0,984,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,8667,0x101bef480,2004,Equal_Baseline
code-creation,Builtin,2,8667,0x101befc60,1024,StrictEqual_Baseline
code-creation,Builtin,2,8667,0x101bf0080,1364,LessThan_Baseline
code-creation,Builtin,2,8667,0x101bf05e0,1364,GreaterThan_Baseline
code-creation,Builtin,2,8667,0x101bf0b40,1364,LessThanOrEqual_Baseline
code-creation,Builtin,2,8667,0x101bf10a0,1364,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,8667,0x101bf1600,2016,Equal_WithFeedback
code-creation,Builtin,2,8667,0x101bf1e00,1008,StrictEqual_WithFeedback
code-creation,Builtin,2,8667,0x101bf2200,1332,LessThan_WithFeedback
code-creation,Builtin,2,8667,0x101bf2740,1332,GreaterThan_WithFeedback
code-creation,Builtin,2,8709,0x101bf2c80,1332,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,8709,0x101bf31c0,1332,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,8709,0x101bf3700,380,BitwiseNot_Baseline
code-creation,Builtin,2,8709,0x101bf3880,508,Decrement_Baseline
code-creation,Builtin,2,8709,0x101bf3a80,508,Increment_Baseline
code-creation,Builtin,2,8709,0x101bf3c80,528,Negate_Baseline
code-creation,Builtin,2,8709,0x101bf3ea0,356,BitwiseNot_WithFeedback
code-creation,Builtin,2,8709,0x101bf4020,484,Decrement_WithFeedback
code-creation,Builtin,2,8750,0x101bf4220,484,Increment_WithFeedback
code-creation,Builtin,2,8750,0x101bf4420,504,Negate_WithFeedback
code-creation,Builtin,2,8750,0x101bf4620,300,ObjectAssign
code-creation,Builtin,2,8750,0x101bf4760,916,ObjectCreate
code-creation,Builtin,2,8750,0x101bf4b00,8,ObjectDefineGetter
code-creation,Builtin,2,8750,0x101bf4b20,8,ObjectDefineProperties
code-creation,Builtin,2,8750,0x101bf4b40,8,ObjectDefineProperty
code-creation,Builtin,2,8750,0x101bf4b60,8,ObjectDefineSetter
code-creation,Builtin,2,8750,0x101bf4b80,1464,ObjectEntries
code-creation,Builtin,2,8792,0x101bf5140,8,ObjectFreeze
code-creation,Builtin,2,8792,0x101bf5160,4504,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,8792,0x101bf6300,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,8792,0x101bf6320,916,ObjectGetOwnPropertyNames
code-creation,Builtin,2,8792,0x101bf66c0,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,8792,0x101bf66e0,208,ObjectHasOwn
code-creation,Builtin,2,8792,0x101bf67c0,400,ObjectIs
code-creation,Builtin,2,8792,0x101bf6960,8,ObjectIsFrozen
code-creation,Builtin,2,8792,0x101bf6980,8,ObjectIsSealed
code-creation,Builtin,2,8792,0x101bf69a0,856,ObjectKeys
code-creation,Builtin,2,8834,0x101bf6d00,8,ObjectLookupGetter
code-creation,Builtin,2,8834,0x101bf6d20,8,ObjectLookupSetter
code-creation,Builtin,2,8834,0x101bf6d40,2924,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,8834,0x101bf78c0,268,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,8834,0x101bf79e0,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,8834,0x101bf7a00,8,ObjectPrototypeGetProto
code-creation,Builtin,2,8834,0x101bf7a20,8,ObjectPrototypeSetProto
code-creation,Builtin,2,8834,0x101bf7a40,8,ObjectSeal
code-creation,Builtin,2,8834,0x101bf7a60,1316,ObjectToString
code-creation,Builtin,2,8834,0x101bf7fa0,1220,ObjectValues
code-creation,Builtin,2,8875,0x101bf8480,416,OrdinaryHasInstance
code-creation,Builtin,2,8875,0x101bf8640,448,InstanceOf
code-creation,Builtin,2,8875,0x101bf8820,848,InstanceOf_WithFeedback
code-creation,Builtin,2,8875,0x101bf8b80,868,InstanceOf_Baseline
code-creation,Builtin,2,8875,0x101bf8f00,276,ForInEnumerate
code-creation,Builtin,2,8875,0x101bf9020,136,ForInPrepare
code-creation,Builtin,2,8875,0x101bf90c0,4656,ForInFilter
code-creation,Builtin,2,8875,0x101bfa300,68,ReflectApply
code-creation,Builtin,2,8917,0x101bfa360,72,ReflectConstruct
code-creation,Builtin,2,8917,0x101bfa3c0,8,ReflectDefineProperty
code-creation,Builtin,2,8917,0x101bfa3e0,8,ReflectOwnKeys
code-creation,Builtin,2,8917,0x101bfa400,8,ReflectSet
code-creation,Builtin,2,8917,0x101bfa420,8,RegExpCapture1Getter
code-creation,Builtin,2,8917,0x101bfa440,8,RegExpCapture2Getter
code-creation,Builtin,2,8917,0x101bfa460,8,RegExpCapture3Getter
code-creation,Builtin,2,8917,0x101bfa480,8,RegExpCapture4Getter
code-creation,Builtin,2,8917,0x101bfa4a0,8,RegExpCapture5Getter
code-creation,Builtin,2,8917,0x101bfa4c0,8,RegExpCapture6Getter
code-creation,Builtin,2,8959,0x101bfa4e0,8,RegExpCapture7Getter
code-creation,Builtin,2,8959,0x101bfa500,8,RegExpCapture8Getter
code-creation,Builtin,2,8959,0x101bfa520,8,RegExpCapture9Getter
code-creation,Builtin,2,8959,0x101bfa540,2288,RegExpConstructor
code-creation,Builtin,2,8959,0x101bfae40,8,RegExpInputGetter
code-creation,Builtin,2,8959,0x101bfae60,8,RegExpInputSetter
code-creation,Builtin,2,8959,0x101bfae80,8,RegExpLastMatchGetter
code-creation,Builtin,2,8959,0x101bfaea0,8,RegExpLastParenGetter
code-creation,Builtin,2,8959,0x101bfaec0,8,RegExpLeftContextGetter
code-creation,Builtin,2,9000,0x101bfaee0,852,RegExpPrototypeCompile
code-creation,Builtin,2,9000,0x101bfb240,8,RegExpPrototypeToString
code-creation,Builtin,2,9000,0x101bfb260,8,RegExpRightContextGetter
code-creation,Builtin,2,9000,0x101bfb280,240,RegExpExecAtom
code-creation,Builtin,2,9000,0x101bfb380,1180,RegExpExecInternal
code-creation,Builtin,2,9000,0x101bfb820,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,9000,0x101bfb840,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,9000,0x101bfb860,1252,FindOrderedHashSetEntry
code-creation,Builtin,2,9000,0x101bfbd60,5172,SetConstructor
code-creation,Builtin,2,9042,0x101bfd1a0,192,SetPrototypeHas
code-creation,Builtin,2,9042,0x101bfd280,1736,SetPrototypeAdd
code-creation,Builtin,2,9042,0x101bfd960,1524,SetPrototypeDelete
code-creation,Builtin,2,9042,0x101bfdf60,8,SetPrototypeClear
code-creation,Builtin,2,9042,0x101bfdf80,288,SetPrototypeEntries
code-creation,Builtin,2,9042,0x101bfe0c0,160,SetPrototypeGetSize
code-creation,Builtin,2,9042,0x101bfe180,500,SetPrototypeForEach
code-creation,Builtin,2,9042,0x101bfe380,288,SetPrototypeValues
code-creation,Builtin,2,9042,0x101bfe4c0,800,SetIteratorPrototypeNext
code-creation,Builtin,2,9084,0x101bfe800,1068,SetOrSetIteratorToList
code-creation,Builtin,2,9084,0x101bfec40,8,ShadowRealmConstructor
code-creation,Builtin,2,9084,0x101bfec60,708,ShadowRealmGetWrappedValue
code-creation,Builtin,2,9084,0x101bfef40,8,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,9084,0x101bfef60,1388,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,9084,0x101bff4e0,284,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,9084,0x101bff600,88,ShadowRealmImportValueRejected
code-creation,Builtin,2,9084,0x101bff660,8,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,9084,0x101bff680,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,9125,0x101bff6a0,8,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,9125,0x101bff6c0,2056,AtomicsLoad
code-creation,Builtin,2,9125,0x101bffee0,2196,AtomicsStore
code-creation,Builtin,2,9125,0x101c00780,2780,AtomicsExchange
code-creation,Builtin,2,9125,0x101c01260,3152,AtomicsCompareExchange
code-creation,Builtin,2,9125,0x101c01ec0,2648,AtomicsAdd
tick,0x19d666a70,9125,0,0x0,6
code-creation,Builtin,2,9167,0x101c02920,2680,AtomicsSub
code-creation,Builtin,2,9167,0x101c033a0,2680,AtomicsAnd
code-creation,Builtin,2,9167,0x101c03e20,2648,AtomicsOr
code-creation,Builtin,2,9167,0x101c04880,2648,AtomicsXor
code-creation,Builtin,2,9167,0x101c052e0,8,AtomicsNotify
code-creation,Builtin,2,9167,0x101c05300,8,AtomicsIsLockFree
code-creation,Builtin,2,9167,0x101c05320,8,AtomicsWait
code-creation,Builtin,2,9167,0x101c05340,8,AtomicsWaitAsync
code-creation,Builtin,2,9209,0x101c05360,8,StringFromCodePoint
code-creation,Builtin,2,9209,0x101c05380,1356,StringFromCharCode
code-creation,Builtin,2,9209,0x101c058e0,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,9209,0x101c05900,4592,StringPrototypeMatchAll
code-creation,Builtin,2,9209,0x101c06b00,8,StringPrototypeLocaleCompare
code-creation,Builtin,2,9209,0x101c06b20,1296,StringPrototypeReplace
code-creation,Builtin,2,9209,0x101c07040,2748,StringPrototypeSplit
code-creation,Builtin,2,9209,0x101c07b00,8,StringRaw
code-creation,Builtin,2,9250,0x101c07b20,8,SymbolConstructor
code-creation,Builtin,2,9250,0x101c07b40,8,SymbolFor
code-creation,Builtin,2,9250,0x101c07b60,8,SymbolKeyFor
code-creation,Builtin,2,9250,0x101c07b80,96,TypedArrayBaseConstructor
code-creation,Builtin,2,9250,0x101c07c00,304,TypedArrayConstructor
code-creation,Builtin,2,9250,0x101c07d40,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,9250,0x101c07d60,876,TypedArrayPrototypeByteLength
code-creation,Builtin,2,9250,0x101c080e0,328,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,9250,0x101c08240,588,TypedArrayPrototypeLength
code-creation,Builtin,2,9292,0x101c084a0,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,9292,0x101c084c0,8,TypedArrayPrototypeFill
code-creation,Builtin,2,9292,0x101c084e0,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,9292,0x101c08500,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,9292,0x101c08520,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,9292,0x101c08540,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,9292,0x101c08560,572,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,9292,0x101c087a0,28828,TypedArrayPrototypeMap
code-creation,Builtin,2,9292,0x101c0f840,208,JSToWasmWrapperAsm
code-creation,Builtin,2,9334,0x101c0f920,736,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,9334,0x101c0fc20,40,WasmToJsWrapperAsm
code-creation,Builtin,2,9334,0x101c0fc60,5040,WasmToJsWrapperCSA
code-creation,Builtin,2,9334,0x101c11020,40,WasmToJsWrapperInvalidSig
code-creation,Builtin,2,9334,0x101c11060,192,WasmSuspend
code-creation,Builtin,2,9334,0x101c11140,300,WasmResume
code-creation,Builtin,2,9334,0x101c11280,316,WasmReject
code-creation,Builtin,2,9334,0x101c113c0,8,WasmTrapHandlerLandingPad
code-creation,Builtin,2,9334,0x101c113e0,132,WasmCompileLazy
code-creation,Builtin,2,9334,0x101c11480,144,WasmLiftoffFrameSetup
code-creation,Builtin,2,9375,0x101c11520,260,WasmDebugBreak
code-creation,Builtin,2,9375,0x101c11640,4,WasmOnStackReplace
code-creation,Builtin,2,9375,0x101c11660,152,WasmFloat32ToNumber
code-creation,Builtin,2,9375,0x101c11700,140,WasmFloat64ToNumber
code-creation,Builtin,2,9375,0x101c117a0,1524,WasmFloat64ToString
code-creation,Builtin,2,9375,0x101c11da0,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,9375,0x101c11dc0,4952,WeakMapConstructor
code-creation,Builtin,2,9375,0x101c13120,268,WeakMapLookupHashIndex
code-creation,Builtin,2,9417,0x101c13240,244,WeakMapGet
code-creation,Builtin,2,9417,0x101c13340,204,WeakMapPrototypeHas
code-creation,Builtin,2,9417,0x101c13420,260,WeakMapPrototypeSet
code-creation,Builtin,2,9417,0x101c13540,212,WeakMapPrototypeDelete
code-creation,Builtin,2,9417,0x101c13620,3596,WeakSetConstructor
code-creation,Builtin,2,9417,0x101c14440,204,WeakSetPrototypeHas
code-creation,Builtin,2,9417,0x101c14520,260,WeakSetPrototypeAdd
code-creation,Builtin,2,9417,0x101c14640,212,WeakSetPrototypeDelete
code-creation,Builtin,2,9417,0x101c14720,476,WeakCollectionDelete
code-creation,Builtin,2,9417,0x101c14900,760,WeakCollectionSet
code-creation,Builtin,2,9459,0x101c14c00,8,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,9459,0x101c14c20,8,SharedStructTypeConstructor
code-creation,Builtin,2,9459,0x101c14c40,8,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,9459,0x101c14c60,8,SharedStructConstructor
code-creation,Builtin,2,9459,0x101c14c80,8,SharedArrayConstructor
tick,0x19d5f1aa4,9459,0,0x0,6
tick,0x19d5f0a68,9459,0,0x0,6
code-creation,Builtin,2,9500,0x101c14ca0,8,SharedArrayIsSharedArray
code-creation,Builtin,2,9500,0x101c14cc0,8,AtomicsMutexConstructor
code-creation,Builtin,2,9500,0x101c14ce0,8,AtomicsMutexIsMutex
code-creation,Builtin,2,9500,0x101c14d00,8,AtomicsMutexLock
code-creation,Builtin,2,9500,0x101c14d20,8,AtomicsMutexLockWithTimeout
code-creation,Builtin,2,9542,0x101c14d40,8,AtomicsMutexTryLock
code-creation,Builtin,2,9542,0x101c14d60,8,AtomicsConditionConstructor
code-creation,Builtin,2,9542,0x101c14d80,8,AtomicsConditionIsCondition
code-creation,Builtin,2,9542,0x101c14da0,8,AtomicsConditionWait
code-creation,Builtin,2,9542,0x101c14dc0,8,AtomicsConditionNotify
code-creation,Builtin,2,9542,0x101c14de0,340,AsyncGeneratorResolve
code-creation,Builtin,2,9542,0x101c14f40,108,AsyncGeneratorReject
code-creation,Builtin,2,9542,0x101c14fc0,1992,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,9542,0x101c157a0,2332,AsyncGeneratorReturn
code-creation,Builtin,2,9584,0x101c160c0,376,AsyncGeneratorResumeNext
code-creation,Builtin,2,9584,0x101c16240,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,9584,0x101c16260,1064,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,9584,0x101c166a0,1072,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,9584,0x101c16ae0,1072,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,9584,0x101c16f20,1964,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,9584,0x101c176e0,1964,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,9584,0x101c17ea0,188,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,9584,0x101c17f60,192,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,9584,0x101c18040,128,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,9584,0x101c180e0,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,9625,0x101c18180,124,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,9625,0x101c18200,192,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,9625,0x101c182e0,1732,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,9625,0x101c189c0,1852,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,9625,0x101c19100,1876,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,9625,0x101c19860,128,AsyncIteratorValueUnwrap
code-creation,Builtin,2,9625,0x101c19900,188,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,9625,0x101c199c0,216,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,9625,0x101c19aa0,216,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,9625,0x101c19b80,188,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,9625,0x101c19c40,216,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,9667,0x101c19d20,216,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,9667,0x101c19e00,316,WasmCEntry
code-creation,Builtin,2,9667,0x101c19f40,16,DirectCEntry
code-creation,Builtin,2,9667,0x101c19f60,1408,StringAdd_CheckNone
code-creation,Builtin,2,9667,0x101c1a500,3736,SubString
code-creation,Builtin,2,9667,0x101c1b3a0,80,DoubleToI
code-creation,Builtin,2,9667,0x101c1b400,3608,GetProperty
code-creation,Builtin,2,9667,0x101c1c220,3960,GetPropertyWithReceiver
code-creation,Builtin,2,9667,0x101c1d1a0,16324,SetProperty
code-creation,Builtin,2,9667,0x101c21180,13208,CreateDataProperty
code-creation,Builtin,2,9667,0x101c24520,48,GetOwnPropertyDescriptor
code-creation,Builtin,2,9709,0x101c24560,4,MemCopyUint8Uint8
code-creation,Builtin,2,9709,0x101c24580,4,MemMove
code-creation,Builtin,2,9709,0x101c245a0,192,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,9709,0x101c24680,2628,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,9709,0x101c250e0,8,IsTraceCategoryEnabled
code-creation,Builtin,2,9709,0x101c25100,8,Trace
code-creation,Builtin,2,9709,0x101c25120,8,FinalizationRegistryUnregister
code-creation,Builtin,2,9709,0x101c25140,440,AsyncModuleEvaluate
code-creation,Builtin,2,9709,0x101c25300,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,9709,0x101c25320,8,CallAsyncModuleRejected
code-creation,Builtin,2,9709,0x101c25340,8,TemporalNowTimeZone
code-creation,Builtin,2,9709,0x101c25360,8,TemporalNowInstant
code-creation,Builtin,2,9750,0x101c25380,8,TemporalNowPlainDateTime
code-creation,Builtin,2,9750,0x101c253a0,8,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,9750,0x101c253c0,8,TemporalNowZonedDateTime
code-creation,Builtin,2,9750,0x101c253e0,8,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,9750,0x101c25400,8,TemporalNowPlainDate
code-creation,Builtin,2,9750,0x101c25420,8,TemporalNowPlainDateISO
code-creation,Builtin,2,9750,0x101c25440,8,TemporalNowPlainTimeISO
code-creation,Builtin,2,9750,0x101c25460,8,TemporalPlainDateConstructor
code-creation,Builtin,2,9750,0x101c25480,8,TemporalPlainDateFrom
code-creation,Builtin,2,9750,0x101c254a0,8,TemporalPlainDateCompare
code-creation,Builtin,2,9792,0x101c254c0,8,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,9792,0x101c254e0,8,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,9792,0x101c25500,8,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,9792,0x101c25520,8,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,9792,0x101c25540,8,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,9792,0x101c25560,8,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,9792,0x101c25580,8,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,9792,0x101c255a0,8,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,9792,0x101c255c0,8,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,9792,0x101c255e0,8,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,9792,0x101c25600,8,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,9834,0x101c25620,8,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,9834,0x101c25640,8,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,9834,0x101c25660,8,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,9834,0x101c25680,8,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,9834,0x101c256a0,8,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,9834,0x101c256c0,8,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,9834,0x101c256e0,8,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,9834,0x101c25700,8,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,9834,0x101c25720,8,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,9834,0x101c25740,8,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,9875,0x101c25760,8,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,9875,0x101c25780,8,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,9917,0x101c257a0,8,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,9917,0x101c257c0,8,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,9917,0x101c257e0,8,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,9917,0x101c25800,8,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,9917,0x101c25820,8,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,9917,0x101c25840,8,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,9917,0x101c25860,8,TemporalPlainTimeConstructor
code-creation,Builtin,2,9917,0x101c25880,8,TemporalPlainTimeFrom
code-creation,Builtin,2,9959,0x101c258a0,8,TemporalPlainTimeCompare
code-creation,Builtin,2,9959,0x101c258c0,8,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,9959,0x101c258e0,8,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,9959,0x101c25900,8,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,9959,0x101c25920,8,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,9959,0x101c25940,8,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,9959,0x101c25960,8,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,9959,0x101c25980,8,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,9959,0x101c259a0,8,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,9959,0x101c259c0,8,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,9959,0x101c259e0,8,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,10000,0x101c25a00,8,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,10000,0x101c25a20,8,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,10000,0x101c25a40,8,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,10000,0x101c25a60,8,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,10000,0x101c25a80,8,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,10000,0x101c25aa0,8,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,10000,0x101c25ac0,8,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,10000,0x101c25ae0,8,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,10000,0x101c25b00,8,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,10042,0x101c25b20,8,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,10042,0x101c25b40,8,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,10042,0x101c25b60,8,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,10042,0x101c25b80,8,TemporalPlainDateTimeFrom
code-creation,Builtin,2,10042,0x101c25ba0,8,TemporalPlainDateTimeCompare
code-creation,Builtin,2,10042,0x101c25bc0,8,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,10042,0x101c25be0,8,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,10042,0x101c25c00,8,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,10042,0x101c25c20,8,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,10042,0x101c25c40,8,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,10042,0x101c25c60,8,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,10084,0x101c25c80,8,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,10084,0x101c25ca0,8,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,10084,0x101c25cc0,8,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,10084,0x101c25ce0,8,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,10084,0x101c25d00,8,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,10084,0x101c25d20,8,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,10084,0x101c25d40,8,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,10084,0x101c25d60,8,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,10084,0x101c25d80,8,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,10125,0x101c25da0,8,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,10125,0x101c25dc0,8,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,10125,0x101c25de0,8,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,10125,0x101c25e00,8,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,10125,0x101c25e20,8,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,10125,0x101c25e40,8,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,10125,0x101c25e60,8,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,10125,0x101c25e80,8,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,10125,0x101c25ea0,8,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,10125,0x101c25ec0,8,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,10125,0x101c25ee0,8,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,10167,0x101c25f00,8,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,10167,0x101c25f20,8,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,10167,0x101c25f40,8,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,10167,0x101c25f60,8,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,10167,0x101c25f80,8,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,10167,0x101c25fa0,8,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,10167,0x101c25fc0,8,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,10167,0x101c25fe0,8,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,10167,0x101c26000,8,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,10167,0x101c26020,8,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,10209,0x101c26040,8,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,10209,0x101c26060,8,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,10209,0x101c26080,8,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,10209,0x101c260a0,8,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,10209,0x101c260c0,8,TemporalZonedDateTimeFrom
code-creation,Builtin,2,10209,0x101c260e0,8,TemporalZonedDateTimeCompare
code-creation,Builtin,2,10209,0x101c26100,8,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,10209,0x101c26120,8,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,10209,0x101c26140,8,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,10209,0x101c26160,8,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,10250,0x101c26180,8,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,10250,0x101c261a0,8,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,10250,0x101c261c0,8,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,10250,0x101c261e0,8,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,10250,0x101c26200,8,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,10250,0x101c26220,8,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,10250,0x101c26240,8,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,10250,0x101c26260,8,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,10250,0x101c26280,8,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,10250,0x101c262a0,8,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,10292,0x101c262c0,8,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,10292,0x101c262e0,8,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,10292,0x101c26300,8,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,10292,0x101c26320,8,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,10292,0x101c26340,8,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,10292,0x101c26360,8,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,10292,0x101c26380,8,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,10292,0x101c263a0,8,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,10292,0x101c263c0,8,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,10292,0x101c263e0,8,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,10292,0x101c26400,8,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,10334,0x101c26420,8,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,10334,0x101c26440,8,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,10334,0x101c26460,8,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,10334,0x101c26480,8,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,10334,0x101c264a0,8,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,10334,0x101c264c0,8,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,10334,0x101c264e0,8,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,10334,0x101c26500,8,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,10334,0x101c26520,8,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,10334,0x101c26540,8,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,10375,0x101c26560,8,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,10375,0x101c26580,8,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,10375,0x101c265a0,8,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,10375,0x101c265c0,8,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,10375,0x101c265e0,8,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,10375,0x101c26600,8,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,10375,0x101c26620,8,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,10375,0x101c26640,8,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,10375,0x101c26660,8,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,10375,0x101c26680,8,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,10417,0x101c266a0,8,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,10417,0x101c266c0,8,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,10417,0x101c266e0,8,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,10417,0x101c26700,8,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,10417,0x101c26720,8,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,10417,0x101c26740,8,TemporalDurationConstructor
code-creation,Builtin,2,10417,0x101c26760,8,TemporalDurationFrom
code-creation,Builtin,2,10417,0x101c26780,8,TemporalDurationCompare
code-creation,Builtin,2,10417,0x101c267a0,8,TemporalDurationPrototypeYears
code-creation,Builtin,2,10459,0x101c267c0,8,TemporalDurationPrototypeMonths
code-creation,Builtin,2,10459,0x101c267e0,8,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,10459,0x101c26800,8,TemporalDurationPrototypeDays
code-creation,Builtin,2,10459,0x101c26820,8,TemporalDurationPrototypeHours
code-creation,Builtin,2,10459,0x101c26840,8,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,10459,0x101c26860,8,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,10459,0x101c26880,8,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,10459,0x101c268a0,8,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,10459,0x101c268c0,8,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,10459,0x101c268e0,8,TemporalDurationPrototypeSign
code-creation,Builtin,2,10459,0x101c26900,8,TemporalDurationPrototypeBlank
code-creation,Builtin,2,10500,0x101c26920,8,TemporalDurationPrototypeWith
code-creation,Builtin,2,10500,0x101c26940,8,TemporalDurationPrototypeNegated
code-creation,Builtin,2,10500,0x101c26960,8,TemporalDurationPrototypeAbs
code-creation,Builtin,2,10500,0x101c26980,8,TemporalDurationPrototypeAdd
code-creation,Builtin,2,10500,0x101c269a0,8,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,10500,0x101c269c0,8,TemporalDurationPrototypeRound
code-creation,Builtin,2,10500,0x101c269e0,8,TemporalDurationPrototypeTotal
code-creation,Builtin,2,10500,0x101c26a00,8,TemporalDurationPrototypeToString
code-creation,Builtin,2,10500,0x101c26a20,8,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,10500,0x101c26a40,8,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,10500,0x101c26a60,8,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,10542,0x101c26a80,8,TemporalInstantConstructor
code-creation,Builtin,2,10542,0x101c26aa0,8,TemporalInstantFrom
code-creation,Builtin,2,10542,0x101c26ac0,8,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,10542,0x101c26ae0,8,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,10542,0x101c26b00,8,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,10542,0x101c26b20,8,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,10542,0x101c26b40,8,TemporalInstantCompare
code-creation,Builtin,2,10542,0x101c26b60,8,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,10542,0x101c26b80,8,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,10542,0x101c26ba0,8,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,10542,0x101c26bc0,8,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,10584,0x101c26be0,8,TemporalInstantPrototypeAdd
code-creation,Builtin,2,10584,0x101c26c00,8,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,10584,0x101c26c20,8,TemporalInstantPrototypeUntil
code-creation,Builtin,2,10584,0x101c26c40,8,TemporalInstantPrototypeSince
code-creation,Builtin,2,10584,0x101c26c60,8,TemporalInstantPrototypeRound
code-creation,Builtin,2,10584,0x101c26c80,8,TemporalInstantPrototypeEquals
code-creation,Builtin,2,10584,0x101c26ca0,8,TemporalInstantPrototypeToString
code-creation,Builtin,2,10584,0x101c26cc0,8,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,10584,0x101c26ce0,8,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,10584,0x101c26d00,8,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,10625,0x101c26d20,8,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,10625,0x101c26d40,8,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,10625,0x101c26d60,8,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,10625,0x101c26d80,8,TemporalPlainYearMonthFrom
code-creation,Builtin,2,10625,0x101c26da0,8,TemporalPlainYearMonthCompare
code-creation,Builtin,2,10667,0x101c26dc0,8,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,10667,0x101c26de0,8,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,10667,0x101c26e00,8,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,10667,0x101c26e20,8,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,10667,0x101c26e40,8,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,10667,0x101c26e60,8,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,10667,0x101c26e80,8,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,10667,0x101c26ea0,8,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,10667,0x101c26ec0,8,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,10667,0x101c26ee0,8,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,10709,0x101c26f00,8,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,10709,0x101c26f20,8,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,10709,0x101c26f40,8,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,10709,0x101c26f60,8,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,10709,0x101c26f80,8,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,10709,0x101c26fa0,8,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,10709,0x101c26fc0,8,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,10709,0x101c26fe0,8,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,10709,0x101c27000,8,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,10709,0x101c27020,8,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,10750,0x101c27040,8,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,10750,0x101c27060,8,TemporalPlainMonthDayFrom
code-creation,Builtin,2,10750,0x101c27080,8,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,10750,0x101c270a0,8,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,10750,0x101c270c0,8,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,10750,0x101c270e0,8,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,10792,0x101c27100,8,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,10792,0x101c27120,8,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,10792,0x101c27140,8,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,10792,0x101c27160,8,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,10792,0x101c27180,8,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,10792,0x101c271a0,8,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,10792,0x101c271c0,8,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,10792,0x101c271e0,8,TemporalTimeZoneConstructor
code-creation,Builtin,2,10792,0x101c27200,8,TemporalTimeZoneFrom
code-creation,Builtin,2,10834,0x101c27220,8,TemporalTimeZonePrototypeId
code-creation,Builtin,2,10834,0x101c27240,8,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,10834,0x101c27260,8,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,10834,0x101c27280,8,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,10834,0x101c272a0,8,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,10834,0x101c272c0,8,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,10834,0x101c272e0,8,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,10834,0x101c27300,8,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,10875,0x101c27320,8,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,10875,0x101c27340,8,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,10875,0x101c27360,8,TemporalCalendarConstructor
code-creation,Builtin,2,10875,0x101c27380,8,TemporalCalendarFrom
code-creation,Builtin,2,10875,0x101c273a0,8,TemporalCalendarPrototypeId
code-creation,Builtin,2,10875,0x101c273c0,8,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,10875,0x101c273e0,8,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,10875,0x101c27400,8,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,10917,0x101c27420,8,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,10917,0x101c27440,8,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,10917,0x101c27460,8,TemporalCalendarPrototypeYear
code-creation,Builtin,2,10917,0x101c27480,8,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,10917,0x101c274a0,8,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,10917,0x101c274c0,8,TemporalCalendarPrototypeDay
code-creation,Builtin,2,10917,0x101c274e0,8,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,10917,0x101c27500,8,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,10917,0x101c27520,8,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,10959,0x101c27540,8,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,10959,0x101c27560,8,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,10959,0x101c27580,8,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,10959,0x101c275a0,8,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,10959,0x101c275c0,8,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,10959,0x101c275e0,3556,TemporalCalendarPrototypeFields
code-creation,Builtin,2,10959,0x101c283e0,8,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,10959,0x101c28400,8,TemporalCalendarPrototypeToString
code-creation,Builtin,2,10959,0x101c28420,8,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,11000,0x101c28440,8,DatePrototypeToTemporalInstant
code-creation,Builtin,2,11000,0x101c28460,1720,StringFixedArrayFromIterable
code-creation,Builtin,2,11000,0x101c28b20,1720,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,11000,0x101c291e0,296,AggregateErrorConstructor
code-creation,Builtin,2,11000,0x101c29320,852,ArrayPrototypeAt
code-creation,Builtin,2,11000,0x101c29680,544,ArrayPrototypeConcat
code-creation,Builtin,2,11000,0x101c298c0,4508,ArrayPrototypeCopyWithin
code-creation,Builtin,2,11000,0x101c2aa60,240,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,11000,0x101c2ab60,560,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,11042,0x101c2ada0,4280,ArrayEveryLoopContinuation
code-creation,Builtin,2,11042,0x101c2be60,1572,ArrayEvery
code-creation,Builtin,2,11042,0x101c2c4a0,296,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,11042,0x101c2c5e0,828,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,11042,0x101c2c920,4436,ArrayFilterLoopContinuation
code-creation,Builtin,2,11042,0x101c2da80,4388,ArrayFilter
code-creation,Builtin,2,11042,0x101c2ebc0,232,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,11042,0x101c2ecc0,52,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,11042,0x101c2ed00,364,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,11084,0x101c2ee80,508,ArrayFindLoopContinuation
code-creation,Builtin,2,11084,0x101c2f080,1540,ArrayPrototypeFind
code-creation,Builtin,2,11084,0x101c2f6a0,232,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,11084,0x101c2f7a0,52,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,11084,0x101c2f7e0,364,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,11084,0x101c2f960,500,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,11084,0x101c2fb60,1540,ArrayPrototypeFindIndex
code-creation,Builtin,2,11084,0x101c30180,452,ArrayFindLastLoopContinuation
code-creation,Builtin,2,11084,0x101c30360,1656,ArrayPrototypeFindLast
code-creation,Builtin,2,11084,0x101c309e0,444,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,11125,0x101c30ba0,1652,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,11125,0x101c31220,3148,FlattenIntoArrayWithoutMapFn
code-creation,Builtin,2,11125,0x101c31e80,3100,FlattenIntoArrayWithMapFn
code-creation,Builtin,2,11125,0x101c32aa0,852,ArrayPrototypeFlat
code-creation,Builtin,2,11125,0x101c32e00,820,ArrayPrototypeFlatMap
code-creation,Builtin,2,11125,0x101c33140,240,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,11125,0x101c33240,240,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,11125,0x101c33340,4168,ArrayForEachLoopContinuation
code-creation,Builtin,2,11167,0x101c343a0,1380,ArrayForEach
code-creation,Builtin,2,11167,0x101c34920,6320,ArrayFromAsyncIterableOnFulfilled
code-creation,Builtin,2,11167,0x101c361e0,6344,ArrayFromAsyncIterableOnRejected
code-creation,Builtin,2,11167,0x101c37ac0,3232,ArrayFromAsyncArrayLikeOnFulfilled
code-creation,Builtin,2,11167,0x101c38780,3272,ArrayFromAsyncArrayLikeOnRejected
code-creation,Builtin,2,11167,0x101c39460,15520,ArrayFromAsync
code-creation,Builtin,2,11167,0x101c3d120,4752,ArrayFrom
tick,0x1014cb21c,11167,0,0x0,6
code-creation,Builtin,2,11167,0x101c3e3c0,192,ArrayIsArray
code-creation,Builtin,2,11209,0x101c3e4a0,380,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,11209,0x101c3e620,60,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,11209,0x101c3e660,160,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,11209,0x101c3e720,240,ConvertToLocaleString
code-creation,Builtin,2,11209,0x101c3e820,792,JoinStackPush
code-creation,Builtin,2,11209,0x101c3eb40,300,JoinStackPop
code-creation,Builtin,2,11209,0x101c3ec80,8812,ArrayPrototypeJoin
code-creation,Builtin,2,11209,0x101c40f00,5672,ArrayPrototypeToLocaleString
code-creation,Builtin,2,11209,0x101c42540,276,ArrayPrototypeToString
code-creation,Builtin,2,11209,0x101c42660,8676,TypedArrayPrototypeJoin
code-creation,Builtin,2,11250,0x101c44860,5472,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,11250,0x101c45de0,3992,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,11250,0x101c46d80,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,11250,0x101c46ea0,260,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,11250,0x101c46fc0,452,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,11250,0x101c471a0,4144,ArrayMapLoopContinuation
code-creation,Builtin,2,11250,0x101c481e0,3840,ArrayMap
code-creation,Builtin,2,11250,0x101c49100,1744,ArrayOf
code-creation,Builtin,2,11250,0x101c497e0,400,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,11250,0x101c49980,232,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,11250,0x101c49a80,232,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,11292,0x101c49b80,4172,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,11292,0x101c4abe0,1864,ArrayReduceRight
code-creation,Builtin,2,11292,0x101c4b340,208,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,11292,0x101c4b420,232,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,11292,0x101c4b520,232,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,11292,0x101c4b620,4224,ArrayReduceLoopContinuation
code-creation,Builtin,2,11292,0x101c4c6c0,1580,ArrayReduce
code-creation,Builtin,2,11292,0x101c4cd00,3228,ArrayPrototypeReverse
code-creation,Builtin,2,11292,0x101c4d9a0,3416,ArrayPrototypeShift
code-creation,Builtin,2,11292,0x101c4e700,5996,ArrayPrototypeSlice
code-creation,Builtin,2,11292,0x101c4fe80,240,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,11292,0x101c4ff80,544,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,11334,0x101c501c0,4268,ArraySomeLoopContinuation
code-creation,Builtin,2,11334,0x101c51280,1548,ArraySome
code-creation,Builtin,2,11334,0x101c518a0,12568,ArrayPrototypeSplice
code-creation,Builtin,2,11334,0x101c549c0,2032,GenericArrayToReversed
code-creation,Builtin,2,11334,0x101c551c0,2860,ArrayPrototypeToReversed
code-creation,Builtin,2,11334,0x101c55d00,5308,ArrayTimSortIntoCopy
code-creation,Builtin,2,11334,0x101c571c0,1880,ArrayPrototypeToSorted
code-creation,Builtin,2,11334,0x101c57920,8220,ArrayPrototypeToSpliced
code-creation,Builtin,2,11334,0x101c59940,2816,ArrayPrototypeUnshift
code-creation,Builtin,2,11334,0x101c5a460,1356,GenericArrayWith
code-creation,Builtin,2,11334,0x101c5a9c0,1128,ArrayPrototypeWith
code-creation,Builtin,2,11375,0x101c5ae40,308,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,11375,0x101c5af80,428,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,11375,0x101c5b140,228,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,11375,0x101c5b240,228,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,11375,0x101c5b340,308,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,11375,0x101c5b480,228,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,11375,0x101c5b580,128,ArrayBufferIsView
code-creation,Builtin,2,11375,0x101c5b620,224,ToInteger
code-creation,Builtin,2,11375,0x101c5b720,3900,FastCreateDataProperty
code-creation,Builtin,2,11375,0x101c5c660,1076,BooleanConstructor
code-creation,Builtin,2,11375,0x101c5caa0,196,BooleanPrototypeToString
code-creation,Builtin,2,11417,0x101c5cb80,192,BooleanPrototypeValueOf
code-creation,Builtin,2,11417,0x101c5cc60,976,BigIntAddNoThrow
code-creation,Builtin,2,11417,0x101c5d040,1152,BigIntAdd
code-creation,Builtin,2,11417,0x101c5d4e0,976,BigIntSubtractNoThrow
code-creation,Builtin,2,11417,0x101c5d8c0,1152,BigIntSubtract
code-creation,Builtin,2,11417,0x101c5dd60,308,BigIntMultiplyNoThrow
code-creation,Builtin,2,11417,0x101c5dea0,516,BigIntMultiply
code-creation,Builtin,2,11417,0x101c5e0c0,492,BigIntDivideNoThrow
code-creation,Builtin,2,11417,0x101c5e2c0,608,BigIntDivide
code-creation,Builtin,2,11417,0x101c5e540,404,BigIntModulusNoThrow
code-creation,Builtin,2,11417,0x101c5e6e0,520,BigIntModulus
code-creation,Builtin,2,11417,0x101c5e900,868,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,11417,0x101c5ec80,1060,BigIntBitwiseAnd
code-creation,Builtin,2,11459,0x101c5f0c0,832,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,11459,0x101c5f420,996,BigIntBitwiseOr
code-creation,Builtin,2,11459,0x101c5f820,896,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,11459,0x101c5fbc0,1088,BigIntBitwiseXor
code-creation,Builtin,2,11459,0x101c60020,1220,BigIntShiftLeftNoThrow
code-creation,Builtin,2,11459,0x101c60500,1412,BigIntShiftLeft
code-creation,Builtin,2,11459,0x101c60aa0,1220,BigIntShiftRightNoThrow
code-creation,Builtin,2,11459,0x101c60f80,1412,BigIntShiftRight
code-creation,Builtin,2,11459,0x101c61520,132,BigIntEqual
code-creation,Builtin,2,11459,0x101c615c0,184,BigIntLessThan
code-creation,Builtin,2,11459,0x101c61680,188,BigIntGreaterThan
code-creation,Builtin,2,11459,0x101c61740,188,BigIntLessThanOrEqual
code-creation,Builtin,2,11459,0x101c61800,184,BigIntGreaterThanOrEqual
code-creation,Builtin,2,11500,0x101c618c0,324,BigIntUnaryMinus
code-creation,Builtin,2,11500,0x101c61a20,2060,ToString
code-creation,Builtin,2,11500,0x101c62240,188,StringPrototypeToString
code-creation,Builtin,2,11500,0x101c62300,188,StringPrototypeValueOf
code-creation,Builtin,2,11500,0x101c623c0,2216,StringToList
code-creation,Builtin,2,11500,0x101c62c80,808,StringPrototypeCharAt
code-creation,Builtin,2,11500,0x101c62fc0,692,StringPrototypeCharCodeAt
code-creation,Builtin,2,11500,0x101c63280,1204,StringPrototypeCodePointAt
code-creation,Builtin,2,11500,0x101c63740,436,StringPrototypeConcat
code-creation,Builtin,2,11500,0x101c63900,1116,StringConstructor
code-creation,Builtin,2,11500,0x101c63d60,2132,StringAddConvertLeft
code-creation,Builtin,2,11500,0x101c645c0,2168,StringAddConvertRight
code-creation,Builtin,2,11500,0x101c64e40,660,StringCharAt
code-creation,Builtin,2,11500,0x101c650e0,20,FastNewClosureBaseline
code-creation,Builtin,2,11542,0x101c65100,296,FastNewFunctionContextEval
code-creation,Builtin,2,11542,0x101c65240,296,FastNewFunctionContextFunction
code-creation,Builtin,2,11542,0x101c65380,296,CreateRegExpLiteral
code-creation,Builtin,2,11542,0x101c654c0,1376,CreateShallowArrayLiteral
code-creation,Builtin,2,11542,0x101c65a40,480,CreateEmptyArrayLiteral
code-creation,Builtin,2,11542,0x101c65c40,2208,CreateShallowObjectLiteral
code-creation,Builtin,2,11542,0x101c66500,472,ObjectConstructor
code-creation,Builtin,2,11542,0x101c666e0,256,CreateEmptyLiteralObject
code-creation,Builtin,2,11542,0x101c66800,592,NumberConstructor
code-creation,Builtin,2,11542,0x101c66a60,92,GenericLazyDeoptContinuation
code-creation,Builtin,2,11542,0x101c66ac0,84,StringToNumber
code-creation,Builtin,2,11584,0x101c66b20,240,NonNumberToNumber
code-creation,Builtin,2,11584,0x101c66c20,288,NonNumberToNumeric
code-creation,Builtin,2,11584,0x101c66d60,60,ToNumeric
code-creation,Builtin,2,11584,0x101c66da0,1392,NumberToString
code-creation,Builtin,2,11584,0x101c67320,140,ToBoolean
code-creation,Builtin,2,11584,0x101c673c0,140,ToBooleanForBaselineJump
code-creation,Builtin,2,11584,0x101c67460,536,ToLength
code-creation,Builtin,2,11584,0x101c67680,1300,ToName
code-creation,Builtin,2,11584,0x101c67ba0,940,ToObject
code-creation,Builtin,2,11584,0x101c67f60,460,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,11584,0x101c68140,460,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,11584,0x101c68320,824,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,11584,0x101c68660,36,OrdinaryToPrimitive_Number
code-creation,Builtin,2,11625,0x101c686a0,412,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,11625,0x101c68840,412,OrdinaryToPrimitive_String
code-creation,Builtin,2,11625,0x101c689e0,280,FastConsoleAssert
code-creation,Builtin,2,11625,0x101c68b00,216,DataViewPrototypeGetBuffer
code-creation,Builtin,2,11625,0x101c68be0,712,DataViewPrototypeGetByteLength
code-creation,Builtin,2,11625,0x101c68ec0,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,11625,0x101c69080,772,DataViewPrototypeGetUint8
code-creation,Builtin,2,11625,0x101c693a0,772,DataViewPrototypeGetInt8
code-creation,Builtin,2,11625,0x101c696c0,856,DataViewPrototypeGetUint16
code-creation,Builtin,2,11625,0x101c69a20,852,DataViewPrototypeGetInt16
code-creation,Builtin,2,11667,0x101c69d80,996,DataViewPrototypeGetUint32
code-creation,Builtin,2,11667,0x101c6a180,884,DataViewPrototypeGetInt32
code-creation,Builtin,2,11667,0x101c6a500,1064,DataViewPrototypeGetFloat16
code-creation,Builtin,2,11667,0x101c6a940,1020,DataViewPrototypeGetFloat32
code-creation,Builtin,2,11667,0x101c6ad40,1084,DataViewPrototypeGetFloat64
code-creation,Builtin,2,11667,0x101c6b180,1144,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,11667,0x101c6b600,1168,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,11667,0x101c6baa0,1168,DataViewPrototypeSetUint8
code-creation,Builtin,2,11667,0x101c6bf40,1168,DataViewPrototypeSetInt8
code-creation,Builtin,2,11667,0x101c6c3e0,1256,DataViewPrototypeSetUint16
code-creation,Builtin,2,11667,0x101c6c8e0,1256,DataViewPrototypeSetInt16
code-creation,Builtin,2,11667,0x101c6cde0,1288,DataViewPrototypeSetUint32
code-creation,Builtin,2,11709,0x101c6d300,1288,DataViewPrototypeSetInt32
code-creation,Builtin,2,11709,0x101c6d820,1380,DataViewPrototypeSetFloat16
code-creation,Builtin,2,11709,0x101c6dda0,1292,DataViewPrototypeSetFloat32
code-creation,Builtin,2,11709,0x101c6e2c0,1352,DataViewPrototypeSetFloat64
code-creation,Builtin,2,11709,0x101c6e820,1200,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,11709,0x101c6ece0,1200,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,11709,0x101c6f1a0,976,FinalizationRegistryConstructor
code-creation,Builtin,2,11709,0x101c6f580,1056,FinalizationRegistryRegister
code-creation,Builtin,2,11709,0x101c6f9c0,660,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,11709,0x101c6fc60,360,FunctionPrototypeHasInstance
code-creation,Builtin,2,11709,0x101c6fde0,912,FastFunctionPrototypeBind
code-creation,Builtin,2,11709,0x101c70180,144,IncBlockCounter
code-creation,Builtin,2,11750,0x101c70220,308,GetTemplateObject
code-creation,Builtin,2,11750,0x101c70360,128,ForInNext
code-creation,Builtin,2,11750,0x101c70400,184,GetImportMetaObjectBaseline
code-creation,Builtin,2,11750,0x101c704c0,128,GetIteratorWithFeedback
code-creation,Builtin,2,11750,0x101c70560,124,GetIteratorBaseline
code-creation,Builtin,2,11750,0x101c705e0,316,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,11750,0x101c70720,1136,CallIteratorWithFeedback
code-creation,Builtin,2,11750,0x101c70ba0,936,IteratorConstructor
code-creation,Builtin,2,11750,0x101c70f60,80,IteratorPrototypeGetToStringTag
code-creation,Builtin,2,11750,0x101c70fc0,368,IteratorPrototypeSetToStringTag
code-creation,Builtin,2,11750,0x101c71140,120,IteratorPrototypeGetConstructor
code-creation,Builtin,2,11792,0x101c711c0,368,IteratorPrototypeSetConstructor
code-creation,Builtin,2,11792,0x101c71340,912,IteratorFrom
code-creation,Builtin,2,11792,0x101c716e0,184,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,11792,0x101c717a0,436,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,11792,0x101c71960,436,IteratorHelperPrototypeNext
code-creation,Builtin,2,11792,0x101c71b20,1348,IteratorHelperPrototypeReturn
code-creation,Builtin,2,11792,0x101c72080,388,IteratorPrototypeMap
code-creation,Builtin,2,11792,0x101c72220,1356,IteratorMapHelperNext
code-creation,Builtin,2,11792,0x101c72780,388,IteratorPrototypeFilter
code-creation,Builtin,2,11792,0x101c72920,1520,IteratorFilterHelperNext
code-creation,Builtin,2,11792,0x101c72f20,500,IteratorPrototypeTake
code-creation,Builtin,2,11792,0x101c73120,1552,IteratorTakeHelperNext
code-creation,Builtin,2,11792,0x101c73740,500,IteratorPrototypeDrop
code-creation,Builtin,2,11834,0x101c73940,1804,IteratorDropHelperNext
code-creation,Builtin,2,11834,0x101c74060,404,IteratorPrototypeFlatMap
code-creation,Builtin,2,11834,0x101c74200,2668,IteratorFlatMapHelperNext
code-creation,Builtin,2,11834,0x101c74c80,1744,IteratorPrototypeReduce
code-creation,Builtin,2,11834,0x101c75360,1568,IteratorPrototypeToArray
code-creation,Builtin,2,11834,0x101c759a0,1084,IteratorPrototypeForEach
code-creation,Builtin,2,11834,0x101c75de0,1368,IteratorPrototypeSome
code-creation,Builtin,2,11834,0x101c76340,1364,IteratorPrototypeEvery
code-creation,Builtin,2,11834,0x101c768a0,1376,IteratorPrototypeFind
code-creation,Builtin,2,11834,0x101c76e20,7676,MapGroupBy
code-creation,Builtin,2,11834,0x101c78c20,276,MathAbs
code-creation,Builtin,2,11834,0x101c78d40,256,MathCeil
code-creation,Builtin,2,11875,0x101c78e60,256,MathFloor
code-creation,Builtin,2,11875,0x101c78f80,280,MathRound
code-creation,Builtin,2,11875,0x101c790a0,256,MathTrunc
code-creation,Builtin,2,11875,0x101c791c0,360,MathPow
code-creation,Builtin,2,11875,0x101c79340,404,MathMax
code-creation,Builtin,2,11875,0x101c794e0,404,MathMin
code-creation,Builtin,2,11875,0x101c79680,280,MathAcos
code-creation,Builtin,2,11875,0x101c797a0,280,MathAcosh
code-creation,Builtin,2,11875,0x101c798c0,280,MathAsin
code-creation,Builtin,2,11875,0x101c799e0,280,MathAsinh
code-creation,Builtin,2,11875,0x101c79b00,280,MathAtan
code-creation,Builtin,2,11875,0x101c79c20,356,MathAtan2
code-creation,Builtin,2,11875,0x101c79da0,280,MathAtanh
code-creation,Builtin,2,11875,0x101c79ec0,280,MathCbrt
code-creation,Builtin,2,11875,0x101c79fe0,156,MathClz32
code-creation,Builtin,2,11917,0x101c7a080,280,MathCos
code-creation,Builtin,2,11917,0x101c7a1a0,280,MathCosh
code-creation,Builtin,2,11917,0x101c7a2c0,280,MathExp
code-creation,Builtin,2,11917,0x101c7a3e0,280,MathExpm1
code-creation,Builtin,2,11917,0x101c7a500,264,MathFround
code-creation,Builtin,2,11917,0x101c7a620,476,MathF16round
code-creation,Builtin,2,11917,0x101c7a800,228,MathImul
code-creation,Builtin,2,11917,0x101c7a900,280,MathLog
code-creation,Builtin,2,11917,0x101c7aa20,280,MathLog1p
code-creation,Builtin,2,11959,0x101c7ab40,280,MathLog10
code-creation,Builtin,2,11959,0x101c7ac60,280,MathLog2
code-creation,Builtin,2,11959,0x101c7ad80,280,MathSin
code-creation,Builtin,2,11959,0x101c7aea0,180,MathSign
code-creation,Builtin,2,11959,0x101c7af60,280,MathSinh
code-creation,Builtin,2,11959,0x101c7b080,260,MathSqrt
code-creation,Builtin,2,11959,0x101c7b1a0,280,MathTan
code-creation,Builtin,2,11959,0x101c7b2c0,280,MathTanh
code-creation,Builtin,2,11959,0x101c7b3e0,1024,MathHypot
code-creation,Builtin,2,11959,0x101c7b800,320,MathRandom
code-creation,Builtin,2,11959,0x101c7b960,2572,NumberPrototypeToString
code-creation,Builtin,2,12000,0x101c7c380,156,NumberIsFinite
code-creation,Builtin,2,12000,0x101c7c420,156,NumberIsInteger
code-creation,Builtin,2,12000,0x101c7c4c0,152,NumberIsNaN
code-creation,Builtin,2,12000,0x101c7c560,184,NumberIsSafeInteger
code-creation,Builtin,2,12000,0x101c7c620,192,NumberPrototypeValueOf
code-creation,Builtin,2,12000,0x101c7c700,228,NumberParseFloat
code-creation,Builtin,2,12000,0x101c7c800,188,ParseInt
code-creation,Builtin,2,12000,0x101c7c8c0,108,NumberParseInt
code-creation,Builtin,2,12042,0x101c7c940,732,Add
code-creation,Builtin,2,12042,0x101c7cc20,404,Subtract
code-creation,Builtin,2,12042,0x101c7cdc0,528,Multiply
code-creation,Builtin,2,12042,0x101c7cfe0,452,Divide
code-creation,Builtin,2,12042,0x101c7d1c0,496,Modulus
code-creation,Builtin,2,12042,0x101c7d3c0,504,Exponentiate
code-creation,Builtin,2,12042,0x101c7d5c0,316,Negate
code-creation,Builtin,2,12042,0x101c7d700,152,BitwiseNot
code-creation,Builtin,2,12042,0x101c7d7a0,120,Decrement
code-creation,Builtin,2,12042,0x101c7d820,120,Increment
code-creation,Builtin,2,12084,0x101c7d8a0,476,ShiftLeft
code-creation,Builtin,2,12084,0x101c7da80,476,ShiftRight
code-creation,Builtin,2,12084,0x101c7dc60,532,ShiftRightLogical
code-creation,Builtin,2,12084,0x101c7de80,264,BitwiseAnd
code-creation,Builtin,2,12084,0x101c7dfa0,264,BitwiseOr
code-creation,Builtin,2,12084,0x101c7e0c0,264,BitwiseXor
code-creation,Builtin,2,12084,0x101c7e1e0,1004,LessThan
code-creation,Builtin,2,12084,0x101c7e5e0,1004,LessThanOrEqual
code-creation,Builtin,2,12084,0x101c7e9e0,1004,GreaterThan
code-creation,Builtin,2,12125,0x101c7ede0,1004,GreaterThanOrEqual
code-creation,Builtin,2,12125,0x101c7f1e0,1132,Equal
code-creation,Builtin,2,12125,0x101c7f660,540,StrictEqual
code-creation,Builtin,2,12125,0x101c7f880,3356,ObjectFromEntries
code-creation,Builtin,2,12125,0x101c805a0,3880,GroupByGeneric
code-creation,Builtin,2,12125,0x101c814e0,7920,ObjectGroupBy
code-creation,Builtin,2,12125,0x101c833e0,932,CreateObjectWithoutProperties
code-creation,Builtin,2,12125,0x101c837a0,176,ObjectIsExtensible
code-creation,Builtin,2,12125,0x101c83860,180,ObjectPreventExtensions
code-creation,Builtin,2,12125,0x101c83920,184,ObjectGetPrototypeOf
code-creation,Builtin,2,12167,0x101c839e0,312,ObjectSetPrototypeOf
code-creation,Builtin,2,12167,0x101c83b20,92,ObjectPrototypeToString
code-creation,Builtin,2,12167,0x101c83b80,116,ObjectPrototypeValueOf
code-creation,Builtin,2,12167,0x101c83c00,208,ObjectPrototypeToLocaleString
code-creation,Builtin,2,12167,0x101c83ce0,828,FulfillPromise
code-creation,Builtin,2,12167,0x101c84020,984,RejectPromise
code-creation,Builtin,2,12167,0x101c84400,2776,NewPromiseCapability
code-creation,Builtin,2,12167,0x101c84ee0,212,PromiseCapabilityDefaultReject
code-creation,Builtin,2,12167,0x101c84fc0,192,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,12209,0x101c850a0,1160,PerformPromiseThen
code-creation,Builtin,2,12209,0x101c85540,716,PromiseReject
code-creation,Builtin,2,12209,0x101c85820,300,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,12209,0x101c85960,144,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,12209,0x101c85a00,4100,PromiseAll
code-creation,Builtin,2,12209,0x101c86a20,4416,PromiseAllSettled
code-creation,Builtin,2,12209,0x101c87b80,1084,PromiseAllResolveElementClosure
code-creation,Builtin,2,12209,0x101c87fc0,1416,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,12209,0x101c88560,1416,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,12209,0x101c88b00,1152,PromiseAnyRejectElementClosure
code-creation,Builtin,2,12250,0x101c88fa0,2688,PromiseAny
code-creation,Builtin,2,12250,0x101c89a40,3184,PromiseConstructor
code-creation,Builtin,2,12250,0x101c8a6c0,364,PromisePrototypeCatch
code-creation,Builtin,2,12250,0x101c8a840,108,PromiseValueThunkFinally
code-creation,Builtin,2,12250,0x101c8a8c0,108,PromiseThrowerFinally
code-creation,Builtin,2,12250,0x101c8a940,1052,PromiseCatchFinally
code-creation,Builtin,2,12250,0x101c8ad60,1052,PromiseThenFinally
code-creation,Builtin,2,12250,0x101c8b180,1724,PromisePrototypeFinally
code-creation,Builtin,2,12250,0x101c8b840,1344,PromiseResolveThenableJob
code-creation,Builtin,2,12250,0x101c8bda0,84,GetContinuationPreservedEmbedderData
code-creation,Builtin,2,12292,0x101c8be00,100,SetContinuationPreservedEmbedderData
code-creation,Builtin,2,12292,0x101c8be80,1536,PromiseRace
code-creation,Builtin,2,12292,0x101c8c4a0,384,PromiseFulfillReactionJob
code-creation,Builtin,2,12292,0x101c8c640,472,PromiseRejectReactionJob
code-creation,Builtin,2,12292,0x101c8c820,172,PromiseResolveTrampoline
code-creation,Builtin,2,12334,0x101c8c8e0,1000,PromiseResolve
code-creation,Builtin,2,12334,0x101c8cce0,820,ResolvePromise
code-creation,Builtin,2,12334,0x101c8d020,2032,PromisePrototypeThen
code-creation,Builtin,2,12334,0x101c8d820,332,PromiseWithResolvers
code-creation,Builtin,2,12334,0x101c8d980,448,ProxyConstructor
code-creation,Builtin,2,12334,0x101c8db60,2408,ProxyDeleteProperty
code-creation,Builtin,2,12334,0x101c8e4e0,2708,ProxyGetProperty
code-creation,Builtin,2,12334,0x101c8ef80,1068,ProxyGetPrototypeOf
code-creation,Builtin,2,12334,0x101c8f3c0,2328,ProxyHasProperty
code-creation,Builtin,2,12334,0x101c8fce0,844,ProxyIsExtensible
code-creation,Builtin,2,12375,0x101c90040,876,ProxyPreventExtensions
code-creation,Builtin,2,12375,0x101c903c0,1096,ProxyRevocable
code-creation,Builtin,2,12375,0x101c90820,144,ProxyRevoke
code-creation,Builtin,2,12375,0x101c908c0,2840,ProxySetProperty
code-creation,Builtin,2,12375,0x101c913e0,1336,ProxySetPrototypeOf
code-creation,Builtin,2,12375,0x101c91920,228,ReflectIsExtensible
code-creation,Builtin,2,12375,0x101c91a20,232,ReflectPreventExtensions
code-creation,Builtin,2,12375,0x101c91b20,208,ReflectGetPrototypeOf
code-creation,Builtin,2,12375,0x101c91c00,336,ReflectSetPrototypeOf
code-creation,Builtin,2,12417,0x101c91d60,312,ReflectGet
code-creation,Builtin,2,12417,0x101c91ea0,176,ReflectDeleteProperty
code-creation,Builtin,2,12417,0x101c91f60,172,ReflectHas
code-creation,Builtin,2,12417,0x101c92020,4380,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,12417,0x101c93140,5240,RegExpPrototypeExecSlow
code-creation,Builtin,2,12417,0x101c945c0,5324,RegExpPrototypeExec
code-creation,Builtin,2,12417,0x101c95aa0,2492,RegExpPrototypeMatchAll
code-creation,Builtin,2,12417,0x101c96460,9180,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,12417,0x101c98840,9080,RegExpMatchFast
code-creation,Builtin,2,12417,0x101c9abc0,3652,RegExpPrototypeMatch
code-creation,Builtin,2,12459,0x101c9ba20,6092,RegExpReplace
code-creation,Builtin,2,12459,0x101c9d200,568,RegExpPrototypeReplace
code-creation,Builtin,2,12459,0x101c9d440,1616,RegExpSearchFast
code-creation,Builtin,2,12459,0x101c9daa0,1588,RegExpPrototypeSearch
code-creation,Builtin,2,12459,0x101c9e0e0,220,RegExpPrototypeSourceGetter
code-creation,Builtin,2,12459,0x101c9e1c0,5684,RegExpSplit
code-creation,Builtin,2,12459,0x101c9f800,504,RegExpPrototypeSplit
code-creation,Builtin,2,12459,0x101c9fa00,2204,RegExpPrototypeTest
code-creation,Builtin,2,12459,0x101ca02a0,1524,RegExpPrototypeTestFast
code-creation,Builtin,2,12459,0x101ca08a0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,12500,0x101ca09a0,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,12500,0x101ca0aa0,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,12500,0x101ca0ba0,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,12500,0x101ca0ca0,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,12500,0x101ca0da0,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,12500,0x101ca0ea0,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,12500,0x101ca0fc0,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,12500,0x101ca10e0,244,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,12500,0x101ca11e0,2608,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,12542,0x101ca1c20,11212,SetPrototypeDifference
code-creation,Builtin,2,12542,0x101ca4800,12212,SetPrototypeIntersection
code-creation,Builtin,2,12542,0x101ca77c0,2960,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,12542,0x101ca8360,1736,SetPrototypeIsSubsetOf
code-creation,Builtin,2,12542,0x101ca8a40,2232,SetPrototypeIsSupersetOf
code-creation,Builtin,2,12542,0x101ca9300,11248,SetPrototypeSymmetricDifference
code-creation,Builtin,2,12542,0x101cabf00,7260,SetPrototypeUnion
code-creation,Builtin,2,12542,0x101cadb60,1172,StringPrototypeAt
code-creation,Builtin,2,12584,0x101cae000,3248,StringPrototypeEndsWith
code-creation,Builtin,2,12584,0x101caecc0,468,CreateHTML
code-creation,Builtin,2,12584,0x101caeea0,180,StringPrototypeAnchor
code-creation,Builtin,2,12584,0x101caef60,148,StringPrototypeBig
code-creation,Builtin,2,12584,0x101caf000,148,StringPrototypeBlink
code-creation,Builtin,2,12584,0x101caf0a0,148,StringPrototypeBold
code-creation,Builtin,2,12584,0x101caf140,180,StringPrototypeFontcolor
code-creation,Builtin,2,12584,0x101caf200,180,StringPrototypeFontsize
code-creation,Builtin,2,12584,0x101caf2c0,148,StringPrototypeFixed
code-creation,Builtin,2,12625,0x101caf360,148,StringPrototypeItalics
code-creation,Builtin,2,12625,0x101caf400,180,StringPrototypeLink
code-creation,Builtin,2,12625,0x101caf4c0,148,StringPrototypeSmall
code-creation,Builtin,2,12625,0x101caf560,148,StringPrototypeStrike
code-creation,Builtin,2,12625,0x101caf600,148,StringPrototypeSub
code-creation,Builtin,2,12625,0x101caf6a0,148,StringPrototypeSup
code-creation,Builtin,2,12625,0x101caf740,976,StringPrototypeIncludes
code-creation,Builtin,2,12625,0x101cafb20,580,StringPrototypeIndexOf
code-creation,Builtin,2,12625,0x101cafd80,652,StringPrototypeIsWellFormed
tick,0x19d62a8ec,12667,0,0x0,6
code-creation,Builtin,2,12667,0x101cb0020,344,StringPrototypeIterator
code-creation,Builtin,2,12667,0x101cb0180,1668,StringIteratorPrototypeNext
code-creation,Builtin,2,12667,0x101cb0820,1432,StringPrototypeMatch
code-creation,Builtin,2,12667,0x101cb0dc0,1432,StringPrototypeSearch
code-creation,Builtin,2,12667,0x101cb1360,832,StringPrototypePadStart
code-creation,Builtin,2,12667,0x101cb16c0,836,StringPrototypePadEnd
code-creation,Builtin,2,12667,0x101cb1a20,136,StringRepeat
code-creation,Builtin,2,12667,0x101cb1ac0,408,StringPrototypeRepeat
code-creation,Builtin,2,12667,0x101cb1c60,12432,StringPrototypeReplaceAll
code-creation,Builtin,2,12709,0x101cb4d00,4152,StringPrototypeSlice
code-creation,Builtin,2,12709,0x101cb5d40,3256,StringPrototypeStartsWith
code-creation,Builtin,2,12709,0x101cb6a00,4136,StringPrototypeSubstr
code-creation,Builtin,2,12709,0x101cb7a40,4080,StringPrototypeSubstring
code-creation,Builtin,2,12709,0x101cb8a40,960,StringPrototypeToWellFormed
code-creation,Builtin,2,12709,0x101cb8e20,8768,StringPrototypeTrim
code-creation,Builtin,2,12709,0x101cbb080,8224,StringPrototypeTrimStart
code-creation,Builtin,2,12709,0x101cbd0c0,7816,StringPrototypeTrimEnd
code-creation,Builtin,2,12709,0x101cbef60,1196,SuppressedErrorConstructor
code-creation,Builtin,2,12709,0x101cbf420,196,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,12709,0x101cbf500,204,SymbolPrototypeToPrimitive
code-creation,Builtin,2,12709,0x101cbf5e0,216,SymbolPrototypeToString
code-creation,Builtin,2,12750,0x101cbf6c0,192,SymbolPrototypeValueOf
code-creation,Builtin,2,12750,0x101cbf7a0,1060,TypedArrayPrototypeAt
code-creation,Builtin,2,12750,0x101cbfbe0,9744,CreateTypedArray
code-creation,Builtin,2,12750,0x101cc2200,1740,TypedArrayPrototypeEvery
code-creation,Builtin,2,12750,0x101cc28e0,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,12750,0x101cc2a80,4324,TypedArrayPrototypeFilter
code-creation,Builtin,2,12750,0x101cc3b80,1712,TypedArrayPrototypeFind
code-creation,Builtin,2,12750,0x101cc4240,1716,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,12750,0x101cc4900,1684,TypedArrayPrototypeFindLast
code-creation,Builtin,2,12750,0x101cc4fa0,1688,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,12750,0x101cc5640,1580,TypedArrayPrototypeForEach
code-creation,Builtin,2,12750,0x101cc5c80,3488,TypedArrayFrom
code-creation,Builtin,2,12750,0x101cc6a40,408,TypedArrayPrototypeKeys
code-creation,Builtin,2,12792,0x101cc6be0,1300,TypedArrayOf
code-creation,Builtin,2,12792,0x101cc7100,1692,TypedArrayPrototypeReduce
code-creation,Builtin,2,12792,0x101cc77a0,1680,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,12792,0x101cc7e40,3032,TypedArrayPrototypeSet
code-creation,Builtin,2,12792,0x101cc8a20,3800,TypedArrayPrototypeSlice
code-creation,Builtin,2,12792,0x101cc9900,1716,TypedArrayPrototypeSome
code-creation,Builtin,2,12792,0x101cc9fc0,980,TypedArrayMergeSort
code-creation,Builtin,2,12792,0x101cca3a0,2192,TypedArrayPrototypeSort
code-creation,Builtin,2,12792,0x101ccac40,2884,TypedArrayPrototypeSubArray
code-creation,Builtin,2,12792,0x101ccb7a0,1676,TypedArrayPrototypeToReversed
code-creation,Builtin,2,12834,0x101ccbe40,3128,TypedArrayPrototypeToSorted
code-creation,Builtin,2,12834,0x101ccca80,412,TypedArrayPrototypeValues
code-creation,Builtin,2,12834,0x101cccc20,2880,TypedArrayPrototypeWith
code-creation,Builtin,2,12834,0x101ccd780,1116,WeakRefConstructor
code-creation,Builtin,2,12834,0x101ccdbe0,212,WeakRefDeref
code-creation,Builtin,2,12834,0x101ccdcc0,732,NewSloppyArgumentsElements
code-creation,Builtin,2,12834,0x101ccdfa0,336,NewStrictArgumentsElements
code-creation,Builtin,2,12834,0x101cce100,376,NewRestArgumentsElements
code-creation,Builtin,2,12834,0x101cce280,1640,FastNewSloppyArguments
code-creation,Builtin,2,12834,0x101cce900,556,FastNewStrictArguments
code-creation,Builtin,2,12834,0x101cceb40,604,FastNewRestArguments
code-creation,Builtin,2,12834,0x101cceda0,628,StoreCurrentScriptContextSlotBaseline
code-creation,Builtin,2,12875,0x101ccf020,660,StoreScriptContextSlotBaseline
code-creation,Builtin,2,12875,0x101ccf2c0,624,StringSlowFlatten
code-creation,Builtin,2,12875,0x101ccf540,2012,StringIndexOf
code-creation,Builtin,2,12875,0x101ccfd20,1384,TestTurbofanType
code-creation,Builtin,2,12875,0x101cd02a0,208,CheckTurbofanType
code-creation,Builtin,2,12875,0x101cd0380,644,CheckTurboshaftWord32Type
code-creation,Builtin,2,12875,0x101cd0620,1092,CheckTurboshaftWord64Type
code-creation,Builtin,2,12875,0x101cd0a80,936,CheckTurboshaftFloat32Type
code-creation,Builtin,2,12875,0x101cd0e40,920,CheckTurboshaftFloat64Type
code-creation,Builtin,2,12875,0x101cd11e0,196,DebugPrintWordPtr
code-creation,Builtin,2,12875,0x101cd12c0,192,DebugPrintFloat64
code-creation,Builtin,2,12875,0x101cd13a0,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,12875,0x101cd13c0,16,TestHelperPlus1
code-creation,Builtin,2,12917,0x101cd13e0,16,TestHelperPlus2
code-creation,Builtin,2,12917,0x101cd1400,108,NewSmiBox
code-creation,Builtin,2,12917,0x101cd1480,20,ReturnTwoValues
code-creation,Builtin,2,12917,0x101cd14a0,48,ThrowAsBuiltin
code-creation,Builtin,2,12917,0x101cd14e0,124,TestCallNever
code-creation,Builtin,2,12917,0x101cd1560,44,Load_FastSmiElements_0
code-creation,Builtin,2,12917,0x101cd15a0,44,Load_FastObjectElements_0
code-creation,Builtin,2,12917,0x101cd15e0,164,Load_FastDoubleElements_0
code-creation,Builtin,2,12917,0x101cd16a0,48,Store_FastSmiElements_0
code-creation,Builtin,2,12917,0x101cd16e0,108,Store_FastObjectElements_0
code-creation,Builtin,2,12917,0x101cd1760,56,Store_FastDoubleElements_0
code-creation,Builtin,2,12917,0x101cd17a0,52,Delete_FastSmiElements_0
code-creation,Builtin,2,12917,0x101cd17e0,52,Delete_FastObjectElements_0
code-creation,Builtin,2,12959,0x101cd1820,52,Delete_FastDoubleElements_0
code-creation,Builtin,2,12959,0x101cd1860,180,SortCompareDefault
code-creation,Builtin,2,12959,0x101cd1920,128,SortCompareUserFn
code-creation,Builtin,2,12959,0x101cd19c0,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,12959,0x101cd19e0,328,Copy
code-creation,Builtin,2,12959,0x101cd1b40,5392,MergeAt
code-creation,Builtin,2,12959,0x101cd3060,852,GallopLeft
code-creation,Builtin,2,12959,0x101cd33c0,888,GallopRight
code-creation,Builtin,2,12959,0x101cd3740,3676,ArrayTimSort
code-creation,Builtin,2,12959,0x101cd45a0,1784,ArrayPrototypeSort
code-creation,Builtin,2,12959,0x101cd4ca0,3924,StringFastLocaleCompare
code-creation,Builtin,2,12959,0x101cd5c00,72,JSToJSWrapperInvalidSig
code-creation,Builtin,2,12959,0x101cd5c60,2668,JSToJSWrapper
code-creation,Builtin,2,12959,0x101cd66e0,3048,JSToWasmWrapper
code-creation,Builtin,2,13000,0x101cd72e0,2976,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,13000,0x101cd7ea0,3560,JSToWasmHandleReturns
code-creation,Builtin,2,13000,0x101cd8ca0,108,WasmInt32ToHeapNumber
code-creation,Builtin,2,13000,0x101cd8d20,76,WasmFuncRefToJS
code-creation,Builtin,2,13000,0x101cd8d80,84,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,13000,0x101cd8de0,96,WasmTaggedToFloat64
code-creation,Builtin,2,13000,0x101cd8e60,100,WasmTaggedToFloat32
code-creation,Builtin,2,13000,0x101cd8ee0,108,WasmMemoryGrow
code-creation,Builtin,2,13000,0x101cd8f60,100,WasmTableInit
code-creation,Builtin,2,13000,0x101cd8fe0,100,WasmTableCopy
code-creation,Builtin,2,13000,0x101cd9060,88,WasmTableFill
code-creation,Builtin,2,13000,0x101cd90c0,72,WasmTableGrow
code-creation,Builtin,2,13042,0x101cd9120,100,WasmTableGet
code-creation,Builtin,2,13042,0x101cd91a0,164,WasmTableSet
code-creation,Builtin,2,13042,0x101cd9260,184,WasmTableGetFuncRef
code-creation,Builtin,2,13042,0x101cd9320,56,WasmFunctionTableGet
code-creation,Builtin,2,13042,0x101cd9360,104,WasmTableSetFuncRef
code-creation,Builtin,2,13042,0x101cd93e0,92,WasmRefFunc
code-creation,Builtin,2,13042,0x101cd9440,56,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,13042,0x101cd9480,204,WasmAllocateZeroedFixedArray
code-creation,Builtin,2,13042,0x101cd9560,196,WasmAllocateFixedArray
code-creation,Builtin,2,13042,0x101cd9640,40,WasmThrow
code-creation,Builtin,2,13042,0x101cd9680,56,WasmRethrow
code-creation,Builtin,2,13042,0x101cd96c0,48,WasmRethrowExplicitContext
code-creation,Builtin,2,13042,0x101cd9700,44,WasmTriggerTierUp
code-creation,Builtin,2,13084,0x101cd9740,28,WasmStackGuard
code-creation,Builtin,2,13084,0x101cd9760,28,WasmStackOverflow
code-creation,Builtin,2,13084,0x101cd9780,40,WasmTraceMemory
code-creation,Builtin,2,13084,0x101cd97c0,28,WasmTraceEnter
code-creation,Builtin,2,13084,0x101cd97e0,40,WasmTraceExit
code-creation,Builtin,2,13084,0x101cd9820,688,WasmAllocateJSArray
code-creation,Builtin,2,13084,0x101cd9ae0,128,WasmAllocateStructWithRtt
code-creation,Builtin,2,13084,0x101cd9b80,172,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,13084,0x101cd9c40,104,WasmArrayNewSegment
code-creation,Builtin,2,13084,0x101cd9cc0,148,WasmArrayInitSegment
code-creation,Builtin,2,13084,0x101cd9d60,160,WasmArrayCopyWithChecks
code-creation,Builtin,2,13084,0x101cd9e20,108,WasmArrayCopy
code-creation,Builtin,2,13084,0x101cd9ea0,124,WasmUint32ToNumber
code-creation,Builtin,2,13084,0x101cd9f20,128,UintPtr53ToNumber
code-creation,Builtin,2,13125,0x101cd9fc0,140,WasmI32AtomicWait
code-creation,Builtin,2,13125,0x101cda060,136,WasmI64AtomicWait
code-creation,Builtin,2,13125,0x101cda100,1300,CallRefIC
code-creation,Builtin,2,13125,0x101cda620,1680,WasmGetOwnProperty
code-creation,Builtin,2,13125,0x101cdacc0,96,WasmTrap
code-creation,Builtin,2,13125,0x101cdad40,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,13125,0x101cdad60,84,WasmTrapHandlerThrowTrap
code-creation,Builtin,2,13125,0x101cdadc0,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,13125,0x101cdade0,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,13125,0x101cdae00,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,13125,0x101cdae20,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,13125,0x101cdae40,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,13125,0x101cdae60,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,13167,0x101cdae80,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,13167,0x101cdaea0,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,13167,0x101cdaec0,12,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,13167,0x101cdaee0,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,13167,0x101cdaf00,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,13167,0x101cdaf20,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,13167,0x101cdaf40,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,13167,0x101cdaf60,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,13209,0x101cdaf80,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,13209,0x101cdafa0,12,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,13209,0x101cdafc0,136,WasmStringNewWtf8
code-creation,Builtin,2,13209,0x101cdb060,204,WasmStringNewWtf8Array
code-creation,Builtin,2,13209,0x101cdb140,128,WasmStringNewWtf16
code-creation,Builtin,2,13209,0x101cdb1e0,1348,WasmStringNewWtf16Array
code-creation,Builtin,2,13209,0x101cdb740,156,WasmStringFromDataSegment
code-creation,Builtin,2,13209,0x101cdb7e0,80,WasmStringAsWtf16
code-creation,Builtin,2,13250,0x101cdb840,44,WasmStringConst
code-creation,Builtin,2,13250,0x101cdb880,88,WasmStringMeasureUtf8
code-creation,Builtin,2,13250,0x101cdb8e0,88,WasmStringMeasureWtf8
code-creation,Builtin,2,13250,0x101cdb940,148,WasmStringEncodeWtf8
code-creation,Builtin,2,13250,0x101cdb9e0,132,WasmStringEncodeWtf8Array
code-creation,Builtin,2,13250,0x101cdba80,68,WasmStringToUtf8Array
code-creation,Builtin,2,13250,0x101cdbae0,136,WasmStringEncodeWtf16
code-creation,Builtin,2,13250,0x101cdbb80,856,WasmStringEncodeWtf16Array
code-creation,Builtin,2,13250,0x101cdbee0,72,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,13250,0x101cdbf40,72,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,13292,0x101cdbfa0,60,ThrowDataViewTypeError
code-creation,Builtin,2,13292,0x101cdbfe0,64,ThrowDataViewDetachedError
code-creation,Builtin,2,13292,0x101cdc040,64,ThrowDataViewOutOfBounds
code-creation,Builtin,2,13292,0x101cdc0a0,20,WasmStringConcat
code-creation,Builtin,2,13292,0x101cdc0c0,100,WasmStringEqual
code-creation,Builtin,2,13292,0x101cdc140,124,WasmStringIsUSVSequence
code-creation,Builtin,2,13292,0x101cdc1c0,40,WasmStringAsWtf8
code-creation,Builtin,2,13292,0x101cdc200,332,WasmStringViewWtf8Advance
code-creation,Builtin,2,13292,0x101cdc360,212,WasmStringViewWtf8Encode
code-creation,Builtin,2,13334,0x101cdc440,180,WasmStringViewWtf8Slice
code-creation,Builtin,2,13334,0x101cdc500,588,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,13334,0x101cdc760,176,WasmStringViewWtf16Encode
code-creation,Builtin,2,13334,0x101cdc820,5500,WasmStringViewWtf16Slice
tick,0x19d5f1aa4,13334,0,0x0,6
code-creation,Builtin,2,13375,0x101cddda0,112,WasmStringAsIter
code-creation,Builtin,2,13417,0x101cdde20,1228,WasmStringCodePointAt
code-creation,Builtin,2,13417,0x101cde300,1200,WasmStringViewIterNext
code-creation,Builtin,2,13417,0x101cde7c0,1292,WasmStringViewIterAdvance
code-creation,Builtin,2,13417,0x101cdece0,1252,WasmStringViewIterRewind
code-creation,Builtin,2,13459,0x101cdf1e0,5100,WasmStringViewIterSlice
code-creation,Builtin,2,13459,0x101ce05e0,2880,WasmIntToString
code-creation,Builtin,2,13459,0x101ce1140,168,WasmStringToDouble
code-creation,Builtin,2,13459,0x101ce1200,72,WasmStringFromCodePoint
code-creation,Builtin,2,13459,0x101ce1260,64,WasmStringHash
code-creation,Builtin,2,13459,0x101ce12c0,48,WasmAnyConvertExtern
code-creation,Builtin,2,13459,0x101ce1300,404,WasmFastApiCallTypeCheckAndUpdateIC
code-creation,Builtin,2,13500,0x101ce14a0,180,WebAssemblyStringCast
code-creation,Builtin,2,13500,0x101ce1560,164,WebAssemblyStringTest
code-creation,Builtin,2,13500,0x101ce1620,384,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,13500,0x101ce17c0,392,WebAssemblyStringFromUtf8Array
code-creation,Builtin,2,13500,0x101ce1960,484,WebAssemblyStringIntoUtf8Array
code-creation,Builtin,2,13542,0x101ce1b60,212,WebAssemblyStringToUtf8Array
code-creation,Builtin,2,13542,0x101ce1c40,364,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,13542,0x101ce1dc0,344,WebAssemblyStringFromCharCode
code-creation,Builtin,2,13542,0x101ce1f20,412,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,13542,0x101ce20c0,1292,WebAssemblyStringCodePointAt
code-creation,Builtin,2,13542,0x101ce25e0,768,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,13542,0x101ce2900,184,WebAssemblyStringLength
code-creation,Builtin,2,13584,0x101ce29c0,212,WebAssemblyStringMeasureUtf8
code-creation,Builtin,2,13584,0x101ce2aa0,244,WebAssemblyStringConcat
code-creation,Builtin,2,13584,0x101ce2ba0,428,WebAssemblyStringSubstring
code-creation,Builtin,2,13584,0x101ce2d60,504,WebAssemblyStringEquals
code-creation,Builtin,2,13584,0x101ce2f60,244,WebAssemblyStringCompare
code-creation,Builtin,2,13584,0x101ce3060,156,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,13584,0x101ce3100,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,13625,0x101ce3120,224,LoadJoinTypedElement_Float16Elements_0
code-creation,Builtin,2,13625,0x101ce3220,124,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,13625,0x101ce32a0,120,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,13625,0x101ce3320,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,13667,0x101ce3340,232,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,13667,0x101ce3440,264,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,13667,0x101ce3560,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,13667,0x101ce3580,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,13667,0x101ce35a0,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,13667,0x101ce35c0,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,13709,0x101ce35e0,140,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,13709,0x101ce3680,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,13709,0x101ce36a0,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,13709,0x101ce36e0,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,13709,0x101ce3720,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,13709,0x101ce3760,40,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,13709,0x101ce37a0,4920,Load_GenericElementsAccessor_0
code-creation,Builtin,2,13750,0x101ce4ae0,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,13750,0x101ce4b20,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,13750,0x101ce4b60,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,13750,0x101ce4b80,180,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,13750,0x101ce4c40,532,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,13750,0x101ce4e60,224,LoadTypedElement_Float16Elements_0
code-creation,Builtin,2,13750,0x101ce4f60,160,StoreTypedElementNumeric_Float16Elements_0
code-creation,Builtin,2,13792,0x101ce5020,796,StoreTypedElementJSAny_Float16Elements_0
code-creation,Builtin,2,13792,0x101ce5340,124,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,13792,0x101ce53c0,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,13792,0x101ce5400,536,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,13792,0x101ce5620,120,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,13792,0x101ce56a0,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,13792,0x101ce56e0,532,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,13834,0x101ce5900,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,13834,0x101ce5920,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,13834,0x101ce5960,612,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,13834,0x101ce5be0,232,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,13834,0x101ce5ce0,72,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,13834,0x101ce5d40,568,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,13875,0x101ce5f80,264,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,13875,0x101ce60a0,72,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,13875,0x101ce6100,568,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,13917,0x101ce6340,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,13917,0x101ce6360,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,13917,0x101ce63a0,532,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,13917,0x101ce65c0,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,13917,0x101ce65e0,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,13917,0x101ce6620,532,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,13917,0x101ce6840,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,13959,0x101ce6860,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,13959,0x101ce68a0,532,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,13959,0x101ce6ac0,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,13959,0x101ce6ae0,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,13959,0x101ce6b20,532,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,13959,0x101ce6d40,140,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,13959,0x101ce6de0,180,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,14000,0x101ce6ea0,532,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,14000,0x101ce70c0,8,CollatorConstructor
code-creation,Builtin,2,14000,0x101ce70e0,8,CollatorInternalCompare
code-creation,Builtin,2,14000,0x101ce7100,8,CollatorPrototypeCompare
code-creation,Builtin,2,14000,0x101ce7120,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,14000,0x101ce7140,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,14000,0x101ce7160,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,14000,0x101ce7180,8,DatePrototypeToLocaleString
code-creation,Builtin,2,14000,0x101ce71a0,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,14000,0x101ce71c0,8,DateTimeFormatConstructor
code-creation,Builtin,2,14000,0x101ce71e0,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,14000,0x101ce7200,8,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,14042,0x101ce7220,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,14042,0x101ce7240,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,14042,0x101ce7260,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,14042,0x101ce7280,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,14042,0x101ce72a0,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,14042,0x101ce72c0,8,DisplayNamesConstructor
code-creation,Builtin,2,14042,0x101ce72e0,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,14042,0x101ce7300,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,14042,0x101ce7320,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,14042,0x101ce7340,8,DurationFormatConstructor
code-creation,Builtin,2,14042,0x101ce7360,8,DurationFormatPrototypeFormat
code-creation,Builtin,2,14084,0x101ce7380,8,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,14084,0x101ce73a0,8,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,14084,0x101ce73c0,8,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,14084,0x101ce73e0,8,IntlGetCanonicalLocales
code-creation,Builtin,2,14084,0x101ce7400,8,IntlSupportedValuesOf
code-creation,Builtin,2,14084,0x101ce7420,8,ListFormatConstructor
code-creation,Builtin,2,14084,0x101ce7440,240,ListFormatPrototypeFormat
code-creation,Builtin,2,14084,0x101ce7540,240,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,14084,0x101ce7640,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,14084,0x101ce7660,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,14084,0x101ce7680,8,LocaleConstructor
code-creation,Builtin,2,14125,0x101ce76a0,8,LocalePrototypeBaseName
code-creation,Builtin,2,14125,0x101ce76c0,8,LocalePrototypeCalendar
code-creation,Builtin,2,14125,0x101ce76e0,8,LocalePrototypeCalendars
code-creation,Builtin,2,14125,0x101ce7700,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,14125,0x101ce7720,8,LocalePrototypeCollation
code-creation,Builtin,2,14125,0x101ce7740,8,LocalePrototypeCollations
code-creation,Builtin,2,14125,0x101ce7760,8,LocalePrototypeGetCalendars
code-creation,Builtin,2,14125,0x101ce7780,8,LocalePrototypeGetCollations
code-creation,Builtin,2,14125,0x101ce77a0,8,LocalePrototypeGetHourCycles
code-creation,Builtin,2,14125,0x101ce77c0,8,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,14125,0x101ce77e0,8,LocalePrototypeGetTimeZones
code-creation,Builtin,2,14125,0x101ce7800,8,LocalePrototypeGetTextInfo
code-creation,Builtin,2,14167,0x101ce7820,8,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,14167,0x101ce7840,8,LocalePrototypeHourCycle
code-creation,Builtin,2,14167,0x101ce7860,8,LocalePrototypeHourCycles
code-creation,Builtin,2,14167,0x101ce7880,8,LocalePrototypeLanguage
code-creation,Builtin,2,14167,0x101ce78a0,8,LocalePrototypeMaximize
code-creation,Builtin,2,14167,0x101ce78c0,8,LocalePrototypeMinimize
code-creation,Builtin,2,14167,0x101ce78e0,8,LocalePrototypeNumeric
code-creation,Builtin,2,14167,0x101ce7900,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,14167,0x101ce7920,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,14167,0x101ce7940,8,LocalePrototypeRegion
code-creation,Builtin,2,14167,0x101ce7960,8,LocalePrototypeScript
code-creation,Builtin,2,14167,0x101ce7980,8,LocalePrototypeTextInfo
code-creation,Builtin,2,14209,0x101ce79a0,8,LocalePrototypeTimeZones
code-creation,Builtin,2,14209,0x101ce79c0,8,LocalePrototypeToString
code-creation,Builtin,2,14209,0x101ce79e0,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,14209,0x101ce7a00,8,NumberFormatConstructor
code-creation,Builtin,2,14209,0x101ce7a20,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,14209,0x101ce7a40,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,14209,0x101ce7a60,8,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,14209,0x101ce7a80,8,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,14209,0x101ce7aa0,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,14209,0x101ce7ac0,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,14209,0x101ce7ae0,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,14250,0x101ce7b00,8,PluralRulesConstructor
code-creation,Builtin,2,14250,0x101ce7b20,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,14250,0x101ce7b40,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,14250,0x101ce7b60,8,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,14250,0x101ce7b80,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,14250,0x101ce7ba0,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,14250,0x101ce7bc0,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,14250,0x101ce7be0,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,14250,0x101ce7c00,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,14250,0x101ce7c20,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,14250,0x101ce7c40,8,SegmenterConstructor
code-creation,Builtin,2,14250,0x101ce7c60,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,14292,0x101ce7c80,8,SegmenterPrototypeSegment
code-creation,Builtin,2,14292,0x101ce7ca0,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,14292,0x101ce7cc0,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,14292,0x101ce7ce0,8,SegmentsPrototypeContaining
code-creation,Builtin,2,14292,0x101ce7d00,8,SegmentsPrototypeIterator
code-creation,Builtin,2,14292,0x101ce7d20,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,14292,0x101ce7d40,1160,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,14292,0x101ce81e0,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,14292,0x101ce8200,216,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,14292,0x101ce82e0,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,14292,0x101ce8300,716,StringToLowerCaseIntl
code-creation,Builtin,2,14334,0x101ce85e0,8,TemporalCalendarPrototypeEra
code-creation,Builtin,2,14334,0x101ce8600,8,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,14334,0x101ce8620,8,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,14334,0x101ce8640,8,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,14334,0x101ce8660,8,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,14334,0x101ce8680,8,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,14334,0x101ce86a0,8,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,14334,0x101ce86c0,8,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,14334,0x101ce86e0,8,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,14334,0x101ce8700,8,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,14334,0x101ce8720,8,V8BreakIteratorConstructor
code-creation,Builtin,2,14375,0x101ce8740,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,14375,0x101ce8760,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,14375,0x101ce8780,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,14375,0x101ce87a0,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,14375,0x101ce87c0,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,14375,0x101ce87e0,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,14375,0x101ce8800,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,14375,0x101ce8820,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,14375,0x101ce8840,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,14375,0x101ce8860,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,14417,0x101ce8880,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,14417,0x101ce88a0,8,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,14417,0x101ce88c0,28,Wide
code-creation,BytecodeHandler,0,14417,0x101ce88e0,28,ExtraWide
code-creation,BytecodeHandler,0,14417,0x101ce8900,120,DebugBreakWide
code-creation,BytecodeHandler,0,14417,0x101ce8980,120,DebugBreakExtraWide
code-creation,BytecodeHandler,0,14417,0x101ce8a00,184,DebugBreak0
code-creation,BytecodeHandler,0,14417,0x101ce8ac0,120,DebugBreak1
code-creation,BytecodeHandler,0,14417,0x101ce8b40,120,DebugBreak2
code-creation,BytecodeHandler,0,14417,0x101ce8bc0,120,DebugBreak3
code-creation,BytecodeHandler,0,14417,0x101ce8c40,120,DebugBreak4
code-creation,BytecodeHandler,0,14417,0x101ce8cc0,120,DebugBreak5
code-creation,BytecodeHandler,0,14417,0x101ce8d40,120,DebugBreak6
code-creation,BytecodeHandler,0,14417,0x101ce8dc0,44,Ldar
code-creation,BytecodeHandler,0,14459,0x101ce8e00,76,LdaZero
code-creation,BytecodeHandler,0,14459,0x101ce8e60,84,LdaSmi
code-creation,BytecodeHandler,0,14459,0x101ce8ec0,76,LdaUndefined
code-creation,BytecodeHandler,0,14459,0x101ce8f20,76,LdaNull
code-creation,BytecodeHandler,0,14459,0x101ce8f80,76,LdaTheHole
code-creation,BytecodeHandler,0,14459,0x101ce8fe0,28,LdaTrue
code-creation,BytecodeHandler,0,14459,0x101ce9000,28,LdaFalse
code-creation,BytecodeHandler,0,14459,0x101ce9020,92,LdaConstant
code-creation,BytecodeHandler,0,14459,0x101ce9080,176,LdaContextSlot
code-creation,BytecodeHandler,0,14459,0x101ce9140,176,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,14500,0x101ce9200,108,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,14500,0x101ce9280,108,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,14500,0x101ce9300,40,Star
code-creation,BytecodeHandler,0,14500,0x101ce9340,52,Mov
code-creation,BytecodeHandler,0,14500,0x101ce9380,48,PushContext
code-creation,BytecodeHandler,0,14500,0x101ce93c0,44,PopContext
code-creation,BytecodeHandler,0,14500,0x101ce9400,64,TestReferenceEqual
code-creation,BytecodeHandler,0,14542,0x101ce9460,64,TestUndetectable
code-creation,BytecodeHandler,0,14542,0x101ce94c0,52,TestNull
code-creation,BytecodeHandler,0,14542,0x101ce9500,52,TestUndefined
code-creation,BytecodeHandler,0,14542,0x101ce9540,384,TestTypeOf
code-creation,BytecodeHandler,0,14584,0x101ce96e0,5492,LdaGlobal
code-creation,BytecodeHandler,0,14625,0x101ceac60,4028,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,14625,0x101cebc20,148,StaGlobal
code-creation,BytecodeHandler,0,14625,0x101cebcc0,192,StaContextSlot
code-creation,BytecodeHandler,0,14667,0x101cebda0,124,StaCurrentContextSlot
code-creation,BytecodeHandler,0,14667,0x101cebe20,752,StaScriptContextSlot
code-creation,BytecodeHandler,0,14667,0x101cec120,680,StaCurrentScriptContextSlot
code-creation,BytecodeHandler,0,14667,0x101cec3e0,148,LdaLookupSlot
code-creation,BytecodeHandler,0,14667,0x101cec480,312,LdaLookupContextSlot
tick,0x19d5f1aa4,14709,0,0x0,6
code-creation,BytecodeHandler,0,14709,0x101cec5c0,4356,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,14750,0x101ced6e0,148,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,14750,0x101ced780,312,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,14750,0x101ced8c0,4280,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,14750,0x101cee980,236,StaLookupSlot
code-creation,BytecodeHandler,0,14750,0x101ceea80,4652,GetNamedProperty
code-creation,BytecodeHandler,0,14792,0x101cefcc0,172,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,14792,0x101cefd80,196,GetKeyedProperty
code-creation,BytecodeHandler,0,14792,0x101cefe60,180,GetEnumeratedKeyedProperty
code-creation,BytecodeHandler,0,14792,0x101ceff20,228,LdaModuleVariable
code-creation,BytecodeHandler,0,14792,0x101cf0020,348,StaModuleVariable
code-creation,BytecodeHandler,0,14834,0x101cf0180,164,SetNamedProperty
code-creation,BytecodeHandler,0,14834,0x101cf0240,164,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,14834,0x101cf0300,156,SetKeyedProperty
code-creation,BytecodeHandler,0,14834,0x101cf03a0,176,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,14834,0x101cf0460,156,StaInArrayLiteral
code-creation,BytecodeHandler,0,14834,0x101cf0500,192,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,14834,0x101cf05e0,1460,Add
code-creation,BytecodeHandler,0,14834,0x101cf0ba0,1468,Sub
code-creation,BytecodeHandler,0,14875,0x101cf1160,1564,Mul
code-creation,BytecodeHandler,0,14875,0x101cf1780,1592,Div
code-creation,BytecodeHandler,0,14875,0x101cf1dc0,1476,Mod
code-creation,BytecodeHandler,0,14875,0x101cf23a0,824,Exp
code-creation,BytecodeHandler,0,14875,0x101cf26e0,1720,BitwiseOr
code-creation,BytecodeHandler,0,14875,0x101cf2da0,1720,BitwiseXor
code-creation,BytecodeHandler,0,14875,0x101cf3460,1720,BitwiseAnd
code-creation,BytecodeHandler,0,14875,0x101cf3b20,1188,ShiftLeft
code-creation,BytecodeHandler,0,14917,0x101cf3fe0,1188,ShiftRight
code-creation,BytecodeHandler,0,14917,0x101cf44a0,1248,ShiftRightLogical
code-creation,BytecodeHandler,0,14917,0x101cf49a0,1420,AddSmi
code-creation,BytecodeHandler,0,14917,0x101cf4f40,1320,SubSmi
code-creation,BytecodeHandler,0,14917,0x101cf5480,1372,MulSmi
code-creation,BytecodeHandler,0,14917,0x101cf59e0,1512,DivSmi
code-creation,BytecodeHandler,0,14917,0x101cf5fe0,1324,ModSmi
code-creation,BytecodeHandler,0,14917,0x101cf6520,732,ExpSmi
code-creation,BytecodeHandler,0,14917,0x101cf6800,520,BitwiseOrSmi
code-creation,BytecodeHandler,0,14959,0x101cf6a20,520,BitwiseXorSmi
code-creation,BytecodeHandler,0,14959,0x101cf6c40,520,BitwiseAndSmi
code-creation,BytecodeHandler,0,14959,0x101cf6e60,548,ShiftLeftSmi
code-creation,BytecodeHandler,0,14959,0x101cf70a0,528,ShiftRightSmi
code-creation,BytecodeHandler,0,14959,0x101cf72c0,820,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,14959,0x101cf7600,708,Inc
code-creation,BytecodeHandler,0,14959,0x101cf78e0,708,Dec
code-creation,BytecodeHandler,0,15000,0x101cf7bc0,680,Negate
code-creation,BytecodeHandler,0,15000,0x101cf7e80,520,BitwiseNot
code-creation,BytecodeHandler,0,15000,0x101cf80a0,160,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,15000,0x101cf8160,44,LogicalNot
code-creation,BytecodeHandler,0,15000,0x101cf81a0,292,TypeOf
code-creation,BytecodeHandler,0,15000,0x101cf82e0,128,DeletePropertyStrict
code-creation,BytecodeHandler,0,15000,0x101cf8380,128,DeletePropertySloppy
code-creation,BytecodeHandler,0,15000,0x101cf8420,48,GetSuperConstructor
code-creation,BytecodeHandler,0,15042,0x101cf8460,340,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,15042,0x101cf85c0,860,CallAnyReceiver
code-creation,BytecodeHandler,0,15042,0x101cf8920,860,CallProperty
code-creation,BytecodeHandler,0,15042,0x101cf8c80,880,CallProperty0
code-creation,BytecodeHandler,0,15042,0x101cf9000,892,CallProperty1
code-creation,BytecodeHandler,0,15042,0x101cf9380,912,CallProperty2
code-creation,BytecodeHandler,0,15042,0x101cf9720,864,CallUndefinedReceiver
code-creation,BytecodeHandler,0,15042,0x101cf9aa0,856,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,15084,0x101cf9e00,868,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,15084,0x101cfa180,888,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,15084,0x101cfa500,860,CallWithSpread
code-creation,BytecodeHandler,0,15084,0x101cfa860,136,CallRuntime
code-creation,BytecodeHandler,0,15084,0x101cfa900,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,15084,0x101cfa9a0,96,CallJSRuntime
code-creation,BytecodeHandler,0,15084,0x101cfaa20,1844,InvokeIntrinsic
code-creation,BytecodeHandler,0,15125,0x101cfb160,1172,Construct
code-creation,BytecodeHandler,0,15125,0x101cfb600,452,ConstructWithSpread
code-creation,BytecodeHandler,0,15125,0x101cfb7e0,1016,ConstructForwardAllArgs
code-creation,BytecodeHandler,0,15125,0x101cfbbe0,2224,TestEqual
code-creation,BytecodeHandler,0,15125,0x101cfc4a0,1120,TestEqualStrict
code-creation,BytecodeHandler,0,15125,0x101cfc920,1612,TestLessThan
code-creation,BytecodeHandler,0,15125,0x101cfcf80,1612,TestGreaterThan
code-creation,BytecodeHandler,0,15167,0x101cfd5e0,1612,TestLessThanOrEqual
code-creation,BytecodeHandler,0,15167,0x101cfdc40,1612,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,15209,0x101cfe2a0,1056,TestInstanceOf
code-creation,BytecodeHandler,0,15209,0x101cfe6e0,140,TestIn
code-creation,BytecodeHandler,0,15209,0x101cfe780,104,ToName
code-creation,BytecodeHandler,0,15209,0x101cfe800,200,ToNumber
code-creation,BytecodeHandler,0,15209,0x101cfe8e0,220,ToNumeric
code-creation,BytecodeHandler,0,15209,0x101cfe9c0,124,ToObject
code-creation,BytecodeHandler,0,15250,0x101cfea40,152,ToString
code-creation,BytecodeHandler,0,15250,0x101cfeae0,160,ToBoolean
code-creation,BytecodeHandler,0,15250,0x101cfeba0,416,CreateRegExpLiteral
code-creation,BytecodeHandler,0,15250,0x101cfed60,1824,CreateArrayLiteral
code-creation,BytecodeHandler,0,15250,0x101cff4a0,104,CreateArrayFromIterable
code-creation,BytecodeHandler,0,15250,0x101cff520,752,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,15250,0x101cff820,2784,CreateObjectLiteral
code-creation,BytecodeHandler,0,15292,0x101d00320,304,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,15292,0x101d00460,156,CloneObject
code-creation,BytecodeHandler,0,15292,0x101d00500,208,GetTemplateObject
code-creation,BytecodeHandler,0,15292,0x101d005e0,352,CreateClosure
code-creation,BytecodeHandler,0,15292,0x101d00760,136,CreateBlockContext
code-creation,BytecodeHandler,0,15292,0x101d00800,144,CreateCatchContext
code-creation,BytecodeHandler,0,15292,0x101d008a0,376,CreateFunctionContext
code-creation,BytecodeHandler,0,15334,0x101d00a20,376,CreateEvalContext
code-creation,BytecodeHandler,0,15334,0x101d00ba0,144,CreateWithContext
code-creation,BytecodeHandler,0,15334,0x101d00c40,1924,CreateMappedArguments
code-creation,BytecodeHandler,0,15334,0x101d013e0,636,CreateUnmappedArguments
code-creation,BytecodeHandler,0,15334,0x101d01660,684,CreateRestParameter
code-creation,BytecodeHandler,0,15334,0x101d01920,1316,JumpLoop
code-creation,BytecodeHandler,0,15375,0x101d01e60,32,Jump
code-creation,BytecodeHandler,0,15375,0x101d01ea0,48,JumpConstant
code-creation,BytecodeHandler,0,15375,0x101d01ee0,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,15375,0x101d01f40,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,15375,0x101d01fa0,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,15417,0x101d02000,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,15417,0x101d02060,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,15417,0x101d020c0,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,15417,0x101d02120,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,15417,0x101d02180,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,15417,0x101d021e0,188,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,15459,0x101d022a0,188,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,15459,0x101d02360,172,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,15459,0x101d02420,172,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,15459,0x101d024e0,64,JumpIfTrue
code-creation,BytecodeHandler,0,15500,0x101d02540,64,JumpIfFalse
code-creation,BytecodeHandler,0,15500,0x101d025a0,64,JumpIfNull
code-creation,BytecodeHandler,0,15500,0x101d02600,64,JumpIfNotNull
code-creation,BytecodeHandler,0,15500,0x101d02660,64,JumpIfUndefined
code-creation,BytecodeHandler,0,15500,0x101d026c0,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,15500,0x101d02720,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,15542,0x101d02780,72,JumpIfJSReceiver
code-creation,BytecodeHandler,0,15542,0x101d027e0,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,15542,0x101d02860,532,ForInEnumerate
code-creation,BytecodeHandler,0,15542,0x101d02a80,236,ForInPrepare
code-creation,BytecodeHandler,0,15584,0x101d02b80,76,ForInContinue
code-creation,BytecodeHandler,0,15584,0x101d02be0,268,ForInNext
code-creation,BytecodeHandler,0,15584,0x101d02d00,48,ForInStep
code-creation,BytecodeHandler,0,15584,0x101d02d40,36,SetPendingMessage
code-creation,BytecodeHandler,0,15584,0x101d02d80,124,Throw
code-creation,BytecodeHandler,0,15584,0x101d02e00,124,ReThrow
code-creation,BytecodeHandler,0,15584,0x101d02e80,120,Return
code-creation,BytecodeHandler,0,15584,0x101d02f00,224,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,15584,0x101d03000,144,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,15584,0x101d030a0,144,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,15584,0x101d03140,168,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,15584,0x101d03200,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,15584,0x101d03280,400,SuspendGenerator
code-creation,BytecodeHandler,0,15625,0x101d03420,176,ResumeGenerator
code-creation,BytecodeHandler,0,15625,0x101d034e0,140,GetIterator
code-creation,BytecodeHandler,0,15625,0x101d03580,112,Debugger
code-creation,BytecodeHandler,0,15625,0x101d03600,132,IncBlockCounter
code-creation,BytecodeHandler,0,15625,0x101d036a0,72,Abort
code-creation,BytecodeHandler,0,15625,0x101d03700,44,Star0
code-creation,BytecodeHandler,0,15625,0x101d03740,68,Illegal
code-creation,BytecodeHandler,0,15625,0x101d037a0,124,DebugBreak1.Wide
code-creation,BytecodeHandler,0,15625,0x101d03820,124,DebugBreak2.Wide
code-creation,BytecodeHandler,0,15625,0x101d038a0,124,DebugBreak3.Wide
code-creation,BytecodeHandler,0,15625,0x101d03920,124,DebugBreak4.Wide
code-creation,BytecodeHandler,0,15625,0x101d039a0,124,DebugBreak5.Wide
code-creation,BytecodeHandler,0,15625,0x101d03a20,124,DebugBreak6.Wide
code-creation,BytecodeHandler,0,15667,0x101d03aa0,44,Ldar.Wide
code-creation,BytecodeHandler,0,15667,0x101d03ae0,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,15667,0x101d03b20,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,15667,0x101d03b60,136,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,15667,0x101d03c00,136,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,15667,0x101d03ca0,68,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,15667,0x101d03d00,68,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,15667,0x101d03d60,40,Star.Wide
code-creation,BytecodeHandler,0,15667,0x101d03da0,52,Mov.Wide
code-creation,BytecodeHandler,0,15667,0x101d03de0,48,PushContext.Wide
code-creation,BytecodeHandler,0,15667,0x101d03e20,44,PopContext.Wide
code-creation,BytecodeHandler,0,15667,0x101d03e60,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,15667,0x101d03ec0,4164,LdaGlobal.Wide
code-creation,BytecodeHandler,0,15709,0x101d04f20,4080,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,15709,0x101d05f20,152,StaGlobal.Wide
code-creation,BytecodeHandler,0,15709,0x101d05fc0,192,StaContextSlot.Wide
code-creation,BytecodeHandler,0,15709,0x101d060a0,124,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,15709,0x101d06120,756,StaScriptContextSlot.Wide
code-creation,BytecodeHandler,0,15709,0x101d06420,684,StaCurrentScriptContextSlot.Wide
code-creation,BytecodeHandler,0,15709,0x101d066e0,152,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,15750,0x101d06780,316,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,15750,0x101d068c0,4364,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,15750,0x101d079e0,152,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,15750,0x101d07a80,316,LdaLookupContextSlotInsideTypeof.Wide
tick,0x19d5f1aa4,15750,0,0x0,6
code-creation,BytecodeHandler,0,15750,0x101d07bc0,4288,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,15792,0x101d08ca0,240,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,15792,0x101d08da0,4676,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,15792,0x101d0a000,176,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a0c0,144,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a160,184,GetEnumeratedKeyedProperty.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a220,228,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a320,352,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a4a0,168,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a560,168,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a620,160,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,15834,0x101d0a6e0,180,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,15875,0x101d0a7a0,160,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,15875,0x101d0a860,196,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,15875,0x101d0a940,1424,Add.Wide
code-creation,BytecodeHandler,0,15875,0x101d0aee0,1428,Sub.Wide
code-creation,BytecodeHandler,0,15875,0x101d0b480,1524,Mul.Wide
code-creation,BytecodeHandler,0,15875,0x101d0ba80,1604,Div.Wide
code-creation,BytecodeHandler,0,15875,0x101d0c0e0,1484,Mod.Wide
code-creation,BytecodeHandler,0,15875,0x101d0c6c0,836,Exp.Wide
code-creation,BytecodeHandler,0,15875,0x101d0ca20,1768,BitwiseOr.Wide
code-creation,BytecodeHandler,0,15875,0x101d0d120,1768,BitwiseXor.Wide
code-creation,BytecodeHandler,0,15875,0x101d0d820,1768,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,15875,0x101d0df20,1220,ShiftLeft.Wide
code-creation,BytecodeHandler,0,15917,0x101d0e400,1220,ShiftRight.Wide
code-creation,BytecodeHandler,0,15917,0x101d0e8e0,1276,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,15917,0x101d0ede0,1396,AddSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d0f360,1284,SubSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d0f880,1380,MulSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d0fe00,1520,DivSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d10400,1336,ModSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d10940,724,ExpSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d10c20,532,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d10e40,532,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d11060,532,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d11280,560,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,15917,0x101d114c0,540,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,15959,0x101d116e0,836,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,15959,0x101d11a40,672,Inc.Wide
code-creation,BytecodeHandler,0,15959,0x101d11d00,672,Dec.Wide
code-creation,BytecodeHandler,0,15959,0x101d11fc0,692,Negate.Wide
code-creation,BytecodeHandler,0,15959,0x101d12280,536,BitwiseNot.Wide
code-creation,BytecodeHandler,0,15959,0x101d124a0,132,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,15959,0x101d12540,132,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,15959,0x101d125e0,48,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,15959,0x101d12620,344,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,15959,0x101d12780,868,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,15959,0x101d12b00,868,CallProperty.Wide
code-creation,BytecodeHandler,0,15959,0x101d12e80,880,CallProperty0.Wide
code-creation,BytecodeHandler,0,16000,0x101d13200,892,CallProperty1.Wide
code-creation,BytecodeHandler,0,16000,0x101d13580,912,CallProperty2.Wide
code-creation,BytecodeHandler,0,16000,0x101d13920,864,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,16000,0x101d13ca0,856,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,16000,0x101d14000,868,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,16000,0x101d14380,888,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,16000,0x101d14700,868,CallWithSpread.Wide
code-creation,BytecodeHandler,0,16000,0x101d14a80,140,CallRuntime.Wide
code-creation,BytecodeHandler,0,16042,0x101d14b20,164,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,16042,0x101d14be0,100,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,16042,0x101d14c60,1852,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,16042,0x101d153a0,1124,Construct.Wide
code-creation,BytecodeHandler,0,16042,0x101d15820,400,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,16042,0x101d159c0,1016,ConstructForwardAllArgs.Wide
code-creation,BytecodeHandler,0,16042,0x101d15dc0,2232,TestEqual.Wide
code-creation,BytecodeHandler,0,16042,0x101d16680,1128,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,16042,0x101d16b00,1624,TestLessThan.Wide
code-creation,BytecodeHandler,0,16042,0x101d17160,1624,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,16042,0x101d177c0,1624,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,16084,0x101d17e20,1624,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,16084,0x101d18480,1064,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,16084,0x101d188c0,144,TestIn.Wide
code-creation,BytecodeHandler,0,16084,0x101d18960,204,ToNumber.Wide
code-creation,BytecodeHandler,0,16084,0x101d18a40,224,ToNumeric.Wide
code-creation,BytecodeHandler,0,16084,0x101d18b40,128,ToObject.Wide
code-creation,BytecodeHandler,0,16084,0x101d18be0,420,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,16084,0x101d18da0,1736,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,16084,0x101d19480,752,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,16084,0x101d19780,2700,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,16084,0x101d1a220,160,CloneObject.Wide
code-creation,BytecodeHandler,0,16084,0x101d1a2e0,156,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a380,348,CreateClosure.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a4e0,140,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a580,148,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a620,376,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a7a0,376,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a920,148,CreateWithContext.Wide
code-creation,BytecodeHandler,0,16125,0x101d1a9c0,1344,JumpLoop.Wide
code-creation,BytecodeHandler,0,16125,0x101d1af20,32,Jump.Wide
code-creation,BytecodeHandler,0,16125,0x101d1af60,48,JumpConstant.Wide
code-creation,BytecodeHandler,0,16125,0x101d1afa0,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,16125,0x101d1b000,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,16125,0x101d1b060,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b0c0,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b120,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b180,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b1e0,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b240,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b2a0,188,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b360,188,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b420,172,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b4e0,172,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b5a0,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,16167,0x101d1b600,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b660,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b6c0,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b720,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b780,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b7e0,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b840,72,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b8a0,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,16209,0x101d1b920,536,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,16209,0x101d1bb40,236,ForInPrepare.Wide
code-creation,BytecodeHandler,0,16209,0x101d1bc40,76,ForInContinue.Wide
code-creation,BytecodeHandler,0,16209,0x101d1bca0,272,ForInNext.Wide
code-creation,BytecodeHandler,0,16250,0x101d1bdc0,48,ForInStep.Wide
code-creation,BytecodeHandler,0,16250,0x101d1be00,184,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,16250,0x101d1bec0,172,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,16250,0x101d1bf80,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,16250,0x101d1c000,408,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,16250,0x101d1c1a0,176,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,16250,0x101d1c260,144,GetIterator.Wide
code-creation,BytecodeHandler,0,16250,0x101d1c300,136,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,16250,0x101d1c3a0,76,Abort.Wide
code-creation,BytecodeHandler,0,16250,0x101d1c400,124,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,16250,0x101d1c480,124,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,16250,0x101d1c500,124,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c580,124,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c600,124,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c680,124,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c700,44,Ldar.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c740,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c780,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c7c0,136,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c860,136,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c900,68,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c960,68,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1c9c0,40,Star.ExtraWide
code-creation,BytecodeHandler,0,16292,0x101d1ca00,52,Mov.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1ca40,48,PushContext.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1ca80,44,PopContext.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1cac0,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1cb20,4164,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1db80,4080,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1eb80,152,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1ec20,192,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1ed00,124,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1ed80,756,StaScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1f080,684,StaCurrentScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1f340,152,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,16334,0x101d1f3e0,316,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d1f520,4364,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d20640,152,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d206e0,316,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d20820,4288,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d21900,240,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d21a00,4676,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d22c60,176,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d22d20,144,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d22dc0,184,GetEnumeratedKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,16375,0x101d22e80,228,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d22f80,352,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d23100,168,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d231c0,168,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d23280,160,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d23340,180,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d23400,160,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d234c0,196,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,16417,0x101d235a0,1424,Add.ExtraWide
code-creation,BytecodeHandler,0,16459,0x101d23b40,1428,Sub.ExtraWide
code-creation,BytecodeHandler,0,16459,0x101d240e0,1524,Mul.ExtraWide
code-creation,BytecodeHandler,0,16459,0x101d246e0,1604,Div.ExtraWide
code-creation,BytecodeHandler,0,16459,0x101d24d40,1484,Mod.ExtraWide
code-creation,BytecodeHandler,0,16459,0x101d25320,836,Exp.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d25680,1768,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d25d80,1768,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d26480,1768,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d26b80,1220,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d27060,1220,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d27540,1276,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d27a40,1396,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d27fc0,1284,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d284e0,1380,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d28a60,1520,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d29060,1336,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,16500,0x101d295a0,724,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d29880,528,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d29aa0,528,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d29cc0,528,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d29ee0,548,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2a120,536,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2a340,828,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2a680,672,Inc.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2a940,672,Dec.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2ac00,692,Negate.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2aec0,536,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2b0e0,132,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,16542,0x101d2b180,132,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2b220,48,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2b260,344,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2b3c0,868,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2b740,868,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2bac0,880,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2be40,892,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2c1c0,912,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2c560,864,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2c8e0,856,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2cc40,868,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,16584,0x101d2cfc0,888,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2d340,868,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2d6c0,140,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2d760,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2d820,100,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2d8a0,1852,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2dfe0,1124,Construct.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2e460,400,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2e600,1016,ConstructForwardAllArgs.ExtraWide
code-creation,BytecodeHandler,0,16625,0x101d2ea00,2232,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d2f2c0,1128,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d2f740,1624,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d2fda0,1624,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d30400,1624,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d30a60,1624,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d310c0,1064,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d31500,144,TestIn.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d315a0,204,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d31680,224,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d31780,128,ToObject.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d31820,420,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,16667,0x101d319e0,1736,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d320c0,752,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d323c0,2700,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d32e60,160,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d32f20,156,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d32fc0,348,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d33120,140,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d331c0,148,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d33260,376,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d333e0,376,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d33560,148,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,16709,0x101d33600,1344,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33b60,32,Jump.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33ba0,48,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33be0,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33c40,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33ca0,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33d00,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33d60,92,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33dc0,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33e20,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33e80,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,16750,0x101d33ee0,188,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d33fa0,188,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34060,172,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34120,172,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d341e0,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34240,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d342a0,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34300,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34360,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d343c0,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34420,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d34480,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,16792,0x101d344e0,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34560,536,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34780,236,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34880,76,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d348e0,272,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34a00,48,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34a40,184,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34b00,172,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34bc0,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34c40,408,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,16834,0x101d34de0,176,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,16875,0x101d34ea0,144,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,16875,0x101d34f40,136,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,16875,0x101d34fe0,76,Abort.ExtraWide
tick,0x101684ab0,17000,0,0x0,6
new,MemoryChunk,0x7e2bc540000,262144
new,MemoryChunk,0x2b191400000,262144
new,MemoryChunk,0x1d7c06380000,262144
tick,0x1017c74d4,18250,0,0x0,5
new,MemoryChunk,0x1ad65c300000,262144
new,MemoryChunk,0x387cf2480000,262144
new,MemoryChunk,0x2f7916640000,262144
tick,0x1016650b0,19500,0,0x0,5
new,MemoryChunk,0x32d2c6e80000,262144
code-creation,Eval,9,20042,0x32d2c6e81198,5, node:internal/main/run_main_module:1:1,0x2f79166517a8,~
script-source,73,node:internal/main/run_main_module,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\x2C\n} = require('internal/process/pre_execution');\nconst { getOptionValue } = require('internal/options');\nconst { emitExperimentalWarning } = require('internal/util');\n\nconst isEntryURL = getOptionValue('--entry-url');\nconst mainEntry = prepareMainThreadExecution(!isEntryURL);\n\nmarkBootstrapComplete();\n\n// Necessary to reset RegExp statics before user code runs.\nRegExpPrototypeExec(/^/\x2C '');\n\nif (isEntryURL) {\n  emitExperimentalWarning('--entry-url');\n}\n\nif (getOptionValue('--experimental-default-type') === 'module') {\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\n} else {\n  /**\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\n   */\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\n}\n
code-source-info,0x32d2c6e81198,73,0,1367,C0O0C4O1367,,
code-creation,JS,9,20125,0x32d2c6e81298,154, node:internal/main/run_main_module:1:1,0x2f7916651870,~
code-source-info,0x32d2c6e81298,73,0,1367,C0O25C5O131C8O131C13O74C18O104C23O201C26O201C31O182C36O266C39O266C44O238C49O312C52O312C57O361C59O389C61O361C66O403C69O489C78O489C83O520C87O540C90O540C94O583C97O587C104O633C109O651C112O651C117O687C122O688C129O1299C132O1299C137O1337C142O1344C147O1345C153O1366,,
new,MemoryChunk,0x108600000,262144
tick,0x19d4345dc,20792,0,0x0,0,0x1f5524e43933,0x1f5524e464df,0x107c6ff47f7e,0x107c6ff47978,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,20834,0x108608020,2936,normalizeString node:path:77:25,0x36812ca43ef8,^
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  getLazy\x2C\n  emitExperimentalWarning\x2C\n  isWindows\x2C\n  isMacOS\x2C\n} = require('internal/util');\n\nconst lazyMinimatch = getLazy(() => require('internal/deps/minimatch/index'));\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction formatExt(ext) {\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nfunction glob(path\x2C pattern\x2C windows) {\n  emitExperimentalWarning('glob');\n  validateString(path\x2C 'path');\n  validateString(pattern\x2C 'pattern');\n  return lazyMinimatch().minimatch(path\x2C pattern\x2C {\n    __proto__: null\x2C\n    nocase: isMacOS || isWindows\x2C\n    windowsPathsNoEscape: true\x2C\n    nonegate: true\x2C\n    nocomment: true\x2C\n    optimizationLevel: 2\x2C\n    platform: windows ? 'win32' : 'posix'\x2C\n    nocaseMagicOnly: true\x2C\n  });\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C `paths[${i}]`);\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    if (fromOrig.length !== from.length || toOrig.length !== to.length) {\n      const fromSplit = StringPrototypeSplit(fromOrig\x2C '\\\\');\n      const toSplit = StringPrototypeSplit(toOrig\x2C '\\\\');\n      if (fromSplit[fromSplit.length - 1] === '') {\n        fromSplit.pop();\n      }\n      if (toSplit[toSplit.length - 1] === '') {\n        toSplit.pop();\n      }\n\n      const fromLen = fromSplit.length;\n      const toLen = toSplit.length;\n      const length = fromLen < toLen ? fromLen : toLen;\n\n      let i;\n      for (i = 0; i < length; i++) {\n        if (StringPrototypeToLowerCase(fromSplit[i]) !== StringPrototypeToLowerCase(toSplit[i])) {\n          break;\n        }\n      }\n\n      if (i === 0) {\n        return toOrig;\n      } else if (i === length) {\n        if (toLen > length) {\n          return ArrayPrototypeJoin(ArrayPrototypeSlice(toSplit\x2C i)\x2C '\\\\');\n        }\n        if (fromLen > length) {\n          return StringPrototypeRepeat('..\\\\'\x2C fromLen - 1 - i) + '..';\n        }\n        return '';\n      }\n\n      return StringPrototypeRepeat('..\\\\'\x2C fromLen - i) + ArrayPrototypeJoin(ArrayPrototypeSlice(toSplit\x2C i)\x2C '\\\\');\n    }\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return resolvedPath;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'suffix');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return glob(path\x2C pattern\x2C true);\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nconst posixCwd = (() => {\n  if (isWindows) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= 0 && !resolvedAbsolute; i--) {\n      const path = args[i];\n      validateString(path\x2C `paths[${i}]`);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    if (!resolvedAbsolute) {\n      const cwd = posixCwd();\n      resolvedPath = `${cwd}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(cwd\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    const path = [];\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        path.push(arg);\n      }\n    }\n\n    if (path.length === 0)\n      return '.';\n\n    return posix.normalize(ArrayPrototypeJoin(path\x2C '/'));\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'suffix');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const char = path[i];\n      if (char === '/') {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (char === '.') {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return glob(path\x2C pattern\x2C false);\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = isWindows ? win32 : posix;\n
code-source-info,0x108608020,35,2379,4303,,,
tick,0x19d4e05cc,22959,0,0x0,0,0x1f5524e43933,0x1f5524e464df,0x107c6ff47f7e,0x107c6ff47978,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,23042,0x108608bc0,728,requireBuiltin node:internal/bootstrap/realm:421:24,0x76180f05080,^
script-source,6,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\n// Only per-realm internal states and bindings should be bootstrapped in this\n// file and no globals should be exposed to the user code.\n//\n// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.cc\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/realm') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n});\n\n\n// processBindingAllowList contains the name of bindings that are allowed\n// for access via process.binding(). This is used to provide a transition\n// path for modules that are being moved over to internalBinding.\n// Certain bindings may not actually correspond to an internalBinding any\n// more\x2C we just implement them as legacy wrappers instead. See the\n// legacyWrapperList.\nconst processBindingAllowList = new SafeSet([\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'uv'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'natives'\x2C\n  'util'\x2C\n]);\n\n// The code bellow assumes that the two lists must not contain any modules\n// beginning with "internal/".\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'sea'\x2C\n  'sqlite'\x2C\n  'test'\x2C\n  'test/reporters'\x2C\n]);\n// Modules that will only be enabled at run time.\nconst experimentalModuleList = new SafeSet(['sqlite']);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = { __proto__: null };\n\n  process.binding = function binding(module) {\n    module = String(module);\n    const mod = bindingObj[module];\n    if (typeof mod === 'object') {\n      return mod;\n    }\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (runtimeDeprecatedList.has(module)) {\n      process.emitWarning(\n        `Access to process.binding('${module}') is deprecated.`\x2C\n        'DeprecationWarning'\x2C\n        'DEP0111');\n      return internalBinding(module);\n    }\n    if (legacyWrapperList.has(module)) {\n      return requireBuiltin('internal/legacy/processbinding')[module]();\n    }\n    if (processBindingAllowList.has(module)) {\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n/**\n * Set up internalBinding() in the closure.\n * @type {import('typings/globals').internalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = { __proto__: null };\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst selfId = 'internal/bootstrap/realm';\nconst {\n  builtinIds\x2C\n  compileFunction\x2C\n  setInternalLoaders\x2C\n} = internalBinding('builtins');\n\nconst { ModuleWrap } = internalBinding('module_wrap');\nObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\nconst publicBuiltinIds = builtinIds\n  .filter((id) =>\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\n      !experimentalModuleList.has(id)\x2C\n  );\n// Do not expose the loaders to user land even with --expose-internals.\nconst internalBuiltinIds = builtinIds\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\n\n// When --expose-internals is on we'll add the internal builtin ids to these.\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\nlet canBeRequiredByUsersWithoutSchemeList =\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  static allowRequireByUsers(id) {\n    if (id === selfId) {\n      // No code because this is an assertion against bugs.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not allow ${id}`);\n    }\n    canBeRequiredByUsersList.add(id);\n    if (!schemelessBlockList.has(id)) {\n      canBeRequiredByUsersWithoutSchemeList.add(id);\n    }\n  }\n\n  static setRealmAllowRequireByUsers(ids) {\n    canBeRequiredByUsersList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\n    canBeRequiredByUsersWithoutSchemeList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    return canBeRequiredByUsersList.has(id);\n  }\n\n  static canBeRequiredWithoutScheme(id) {\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\n  }\n\n  static normalizeRequirableId(id) {\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\n        return normalizedId;\n      }\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\n      return id;\n    }\n\n    return undefined;\n  }\n\n  static isBuiltin(id) {\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\n      typeof id === 'string' &&\n        StringPrototypeStartsWith(id\x2C 'node:') &&\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\n    );\n  }\n\n  static getCanBeRequiredByUsersWithoutSchemeList() {\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const url = `node:${this.id}`;\n    const builtin = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    if (!ArrayPrototypeIncludes(exportsKeys\x2C 'default')) {\n      ArrayPrototypePush(exportsKeys\x2C 'default');\n    }\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        builtin.syncExports();\n        this.setExport('default'\x2C builtin.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : requireBuiltin;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: requireBuiltin\x2C\n};\n\nfunction requireBuiltin(id) {\n  if (id === selfId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    request = StringPrototypeSlice(request\x2C 5);\n  } else if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return requireBuiltin(request);\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\x2C\n  } = internalBinding('errors');\n  const {\n    prepareStackTraceCallback\x2C\n    ErrorPrepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\x2C\n    }\x2C\n  } = requireBuiltin('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n  // Setup the default Error.prepareStackTrace.\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: ErrorPrepareStackTrace\x2C\n  });\n}\n\n// Store the internal loaders in C++.\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\n\n// Setup per-realm bindings.\nsetupPrepareStackTrace();\n
code-source-info,0x108608bc0,6,13549,13891,,,
tick,0x19d5393fc,23750,0,0x0,0,0x1f5524e43933,0x1f5524e464df,0x107c6ff47f7e,0x107c6ff47978,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,23792,0x108608ec0,1336,compileForInternalLoader node:internal/bootstrap/realm:384:27,0x76180f04fb0,^
code-source-info,0x108608ec0,6,12533,13331,,,
code-creation,JS,10,23834,0x108609420,568,internalBinding node:internal/bootstrap/realm:185:45,0x76180f040a8,^
code-source-info,0x108609420,6,6027,6265,,,
code-creation,JS,10,24209,0x108609680,664,wrappedFn node:internal/errors:535:21,0x76180f09610,^
script-source,7,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: ["error"\x2C {checkErrorDeclarations: true}] */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectIsExtensible\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\n\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\n\n/**\n * The default implementation of `Error.prepareStackTrace` with simple\n * concatenation of stack frames.\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n */\nfunction defaultPrepareStackTrace(error\x2C trace) {\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n}\n\nfunction setInternalPrepareStackTrace(callback) {\n  internalPrepareStackTrace = callback;\n}\n\n/**\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\n * of error objects created in a VM Context will always invoke the\n * prepareStackTraceCallback of the principal realm.\n * @param {object} globalThis The global object of the realm that the error was\n *   created in. When the error object is created in a VM Context\x2C this is the\n *   global object of that VM Context.\n * @param {object} error The error object.\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n * @returns {string}\n */\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\n  // internal implementation.\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\n/**\n * The default Error.prepareStackTrace implementation.\n */\nfunction ErrorPrepareStackTrace(error\x2C trace) {\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\n  if (innerError && outerError && innerError !== outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    let err;\n    if (isErrorStackTraceLimitWritable()) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n      Error.stackTraceLimit = limit;\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\n    } else {\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n    }\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n};\n\nclass NodeAggregateError extends AggregateError {\n  constructor(errors\x2C message) {\n    super(new SafeArrayIterator(errors)\x2C message);\n    this.code = errors[0]?.code;\n  }\n\n  get [kIsNodeError]() {\n    return true;\n  }\n\n  get ['constructor']() {\n    return AggregateError;\n  }\n}\n\nconst assert = require('internal/assert');\n\n// Lazily loaded\nlet util;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\n    return false;\n  }\n\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    super();\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\x2C\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\n// This is a special error type that is only used for the E function.\nclass HideStackFramesError extends Error {\n}\n\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\n  class HideStackFramesError extends Base {\n    constructor(...args) {\n      if (isErrorStackTraceLimitWritable()) {\n        const limit = Error.stackTraceLimit;\n        Error.stackTraceLimit = 0;\n        super(...args);\n        Error.stackTraceLimit = limit;\n      } else {\n        super(...args);\n      }\n    }\n\n    // This is a workaround for wpt tests that expect that the error\n    // constructor has a `name` property of the base class.\n    get ['constructor']() {\n      return clazz;\n    }\n  }\n\n  return HideStackFramesError;\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  const msg = messages.get(key);\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\n\n  switch (expectedLength) {\n    case 0: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === 0\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n          super(msg);\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    case -1: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          super();\n          ObjectDefineProperty(this\x2C 'message'\x2C {\n            __proto__: null\x2C\n            value: getMessage(key\x2C args\x2C this)\x2C\n            enumerable: false\x2C\n            writable: true\x2C\n            configurable: true\x2C\n          });\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    default: {\n\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === expectedLength\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n\n          ArrayPrototypeUnshift(args\x2C msg);\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n  }\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  function wrappedFn(...args) {\n    try {\n      return ReflectApply(fn\x2C this\x2C args);\n    } catch (error) {\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\n      throw error;\n    }\n  }\n  wrappedFn.withoutStackTrace = fn;\n  return wrappedFn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n\n  const ErrClass = def === SystemError ?\n    makeSystemErrorWithCode(sym) :\n    makeNodeErrorWithCode(def\x2C sym);\n\n  if (otherClasses.length !== 0) {\n    if (otherClasses.includes(HideStackFramesError)) {\n      if (otherClasses.length !== 1) {\n        otherClasses.forEach((clazz) => {\n          if (clazz !== HideStackFramesError) {\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\n          }\n        });\n      }\n    } else {\n      otherClasses.forEach((clazz) => {\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n      });\n    }\n  }\n\n  if (otherClasses.includes(HideStackFramesError)) {\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\n  }\n\n  codes[sym] = ErrClass;\n}\n\nfunction getExpectedArgumentLength(msg) {\n  let expectedLength = 0;\n  const regex = /%[dfijoOs]/g;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  return expectedLength;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\x2C\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength = getExpectedArgumentLength(msg);\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\x2C\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n */\nclass UVException extends Error {\n  /**\n   * @param {object} ctx\n   */\n  constructor(ctx) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n    let path;\n    let dest;\n    if (ctx.path) {\n      path = ctx.path.toString();\n      message += ` '${path}'`;\n    }\n    if (ctx.dest) {\n      dest = ctx.dest.toString();\n      message += ` -> '${dest}'`;\n    }\n\n    super(message);\n\n    for (const prop of ObjectKeys(ctx)) {\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\n        continue;\n      }\n      this[prop] = ctx[prop];\n    }\n\n    this.code = code;\n    if (path) {\n      this.path = path;\n    }\n    if (dest) {\n      this.dest = dest;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n */\nclass UVExceptionWithHostPort extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} address\n   * @param {number} [port]\n   */\n  constructor(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    super(`${message}${details}`);\n\n    this.code = code;\n    this.errno = err;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This used to be util._errnoException().\n */\nclass ErrnoException extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} [original] err\n   */\n  constructor(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    super(message);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nclass ExceptionWithHostPort extends Error {\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    super(`${syscall} ${code}${details}`);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass DNSException extends Error {\n  /**\n   * @param {number|string} code - A libuv error number or a c-ares error code\n   * @param {string} syscall\n   * @param {string} [hostname]\n   */\n  constructor(code\x2C syscall\x2C hostname) {\n    let errno;\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n    // c-ares error code.\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n    // make them available in a property that's not error.errno (since they\n    // can be in conflict with libuv error codes). Also make sure\n    // util.getSystemErrorName() can understand them when an being informed that\n    // the number is a c-ares error code.\n    if (typeof code === 'number') {\n      errno = code;\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n      // long enough that it's not practical to remove it.\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n        code = 'ENOTFOUND'; // Fabricated error name.\n      } else {\n        code = lazyInternalUtil().getSystemErrorName(code);\n      }\n    }\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\n    this.errno = errno;\n    this.code = code;\n    this.syscall = syscall;\n    if (hostname) {\n      this.hostname = hostname;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass ConnResetException extends Error {\n  constructor(msg) {\n    super(msg);\n    this.code = 'ECONNRESET';\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (isWindows) {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\x2C\n      }\x2C\n    } = lazyInternalUtilInspect();\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\n      });\n    } catch {\n      return originalStack;\n    }\n  }\x2C\n};\n\nconst {\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n// Ensures the printed error line is from user code.\nfunction setArrowMessage(err\x2C arrowMessage) {\n  err[arrow_message_private_symbol] = arrowMessage;\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\x2C\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  }\n\n  const type = typeof value;\n\n  switch (type) {\n    case 'bigint':\n      return `type bigint (${value}n)`;\n    case 'number':\n      if (value === 0) {\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\n      } else if (value !== value) { // eslint-disable-line no-self-compare\n        return 'type number (NaN)';\n      } else if (value === Infinity) {\n        return 'type number (Infinity)';\n      } else if (value === -Infinity) {\n        return 'type number (-Infinity)';\n      }\n      return `type number (${value})`;\n    case 'boolean':\n      return value ? 'type boolean (true)' : 'type boolean (false)';\n    case 'symbol':\n      return `type symbol (${String(value)})`;\n    case 'function':\n      return `function ${value.name}`;\n    case 'object':\n      if (value.constructor && 'name' in value.constructor) {\n        return `an instance of ${value.constructor.name}`;\n      }\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n    case 'string':\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\n        return `type string ('${value}')`;\n      }\n      return `type string (${JSONStringify(value)})`;\n    default:\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\n      if (value.length > 28) {\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\n      }\n\n      return `type ${type} (${value})`;\n  }\n}\n\n/**\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n * @param {string[]} array An array of strings.\n * @param {string} [type] The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array\x2C type = 'and') {\n  switch (array.length) {\n    case 0: return '';\n    case 1: return `${array[0]}`;\n    case 2: return `${array[0]} ${type} ${array[1]}`;\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\n    default:\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\n  }\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  NodeAggregateError\x2C\n  codes\x2C\n  ConnResetException\x2C\n  DNSException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  formatList\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  defaultPrepareStackTrace\x2C\n  setInternalPrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTraceCallback\x2C\n  ErrorPrepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  UVException\x2C\n  UVExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_ACCESS_DENIED'\x2C\n  function(msg\x2C permission = ''\x2C resource = '') {\n    this.permission = permission;\n    this.resource = resource;\n    return msg;\n  }\x2C\n  Error);\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error\x2C HideStackFramesError);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\n  Error); // Switch to TypeError. The current implementation does not seem right\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\n  'ServerResponse has an already assigned socket'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_MISSING'\x2C\n  'Module "%s" needs an import attribute of "%s: %s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        msg += `one of ${formatList(other\x2C 'or')}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\n}\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_TYPESCRIPT_SYNTAX'\x2C '%s'\x2C SyntaxError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\n  this.input = input;\n\n  if (base != null) {\n    this.base = base;\n  }\n\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\x2C\n);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\x2C\n    );\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\n  if (exactUrl) {\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\n  }\n  return `Cannot find ${\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NOT_IN_SINGLE_EXECUTABLE_APPLICATION'\x2C\n  'Operation cannot be invoked when not in a single-executable application'\x2C Error);\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_NO_TYPESCRIPT'\x2C\n  'Node.js is not compiled with TypeScript support'\x2C Error);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError\x2C HideStackFramesError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_QUIC_CONNECTION_FAILED'\x2C 'QUIC connection failed'\x2C Error);\nE('ERR_QUIC_ENDPOINT_CLOSED'\x2C 'QUIC endpoint closed: %s (%d)'\x2C Error);\nE('ERR_QUIC_OPEN_STREAM_FAILED'\x2C 'Failed to open QUIC stream'\x2C Error);\nE('ERR_REQUIRE_ASYNC_MODULE'\x2C 'require() cannot be used on an ESM ' +\n  'graph with top-level await. Use import() instead. To see where the' +\n  ' top-level await comes from\x2C use --experimental-print-required-tla.'\x2C Error);\nE('ERR_REQUIRE_CYCLE_MODULE'\x2C '%s'\x2C Error);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SINGLE_EXECUTABLE_APPLICATION_ASSET_NOT_FOUND'\x2C\n  'Cannot find asset %s for the single executable application'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\n}\x2C RangeError\x2C HideStackFramesError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\n  'Socket closed before the connection was established'\x2C\n  Error);\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\n  'Socket connection timeout'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SOURCE_MAP_CORRUPT'\x2C `The source map for '%s' does not exist or is corrupt.`\x2C Error);\nE('ERR_SOURCE_MAP_MISSING_SOURCE'\x2C `Cannot find '%s' imported from the source map for '%s'`\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\n  hideInternalStackFrames(this);\n  this.cause = tokenCausedError;\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\n  return errorMsg + errorDetails;\n}\x2C SyntaxError);\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\n  hideInternalStackFrames(this);\n  return errorMsg;\n}\x2C Error);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\n         "The 'failureType' argument must be of type string or symbol.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\n  return `ALPN callback returned a value (${\n    value\n  }) that did not match any of the client's offered protocols (${\n    protocols.join('\x2C ')\n  })`;\n}\x2C TypeError);\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\n  TypeError);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\n  return `Directory import '${path}' is not supported ` +\n    `resolving ES modules imported from ${base}`;\n}\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\nE('ERR_UNSUPPORTED_NODE_MODULES_TYPE_STRIPPING'\x2C\n  'Stripping types is currently unsupported for files under node_modules\x2C for "%s"'\x2C\n  Error);\nE('ERR_UNSUPPORTED_RESOLVE_REQUEST'\x2C\n  'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.'\x2C\n  TypeError);\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\n  TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_MESSAGING_ERRORED'\x2C 'The destination thread threw an error while processing the message'\x2C Error);\nE('ERR_WORKER_MESSAGING_FAILED'\x2C 'Cannot find the destination thread or listener'\x2C Error);\nE('ERR_WORKER_MESSAGING_SAME_THREAD'\x2C 'Cannot sent a message to the same thread'\x2C Error);\nE('ERR_WORKER_MESSAGING_TIMEOUT'\x2C 'Sending a message to another thread timed out'\x2C Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\n
code-source-info,0x108609680,7,14729,14917,,,
tick,0x19d62aae4,27167,0,0x0,0,0x1f5524e43933,0x1f5524e464df,0x107c6ff47f7e,0x107c6ff47978,0x107c6ff47730,0x32d2c6e812d5
tick,0x19d5f1aa4,27167,0,0x0,0,0x1f5524e43933,0x1f5524e464df,0x107c6ff47f7e,0x107c6ff47978,0x107c6ff47730,0x32d2c6e812d5
tick,0x19d5ee600,27167,0,0x0,0,0x1f5524e43933,0x1f5524e464df,0x107c6ff47f7e,0x107c6ff47978,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,27209,0x108609940,312, node:internal/validators:161:40,0x76180f13ba0,^
script-source,12,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\x2C\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\x2C\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nconst validateString = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n});\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n});\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nconst validateBoolean = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n});\n\nconst kValidateObjectNone = 0;\nconst kValidateObjectAllowNullable = 1 << 0;\nconst kValidateObjectAllowArray = 1 << 1;\nconst kValidateObjectAllowFunction = 1 << 2;\nconst kValidateObjectAllowObjects = kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\nconst kValidateObjectAllowObjectsAndNull = kValidateObjectAllowNullable |\n  kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {number} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = kValidateObjectNone) => {\n    if (options === kValidateObjectNone) {\n      if (value === null || ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      if (typeof value !== 'object') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    } else {\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\n\n      if (throwOnNullable && value === null) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\n\n      if (throwOnArray && ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\n      const typeofValue = typeof value;\n\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    }\n  });\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of "dictionary" here\x2C which means any value\n *                                whose Type is either Undefined\x2C Null\x2C or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames(\n  (value\x2C name) => {\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nconst validateStringArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateString here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (typeof value[i] !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateBoolean here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (value[i] !== true && value[i] !== false) {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateAbortSignalArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is AbortSignal[]}\n */\n\n/** @type {validateAbortSignalArray} */\nfunction validateAbortSignalArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    const signal = value[i];\n    const indexedName = `${name}[${i}]`;\n    if (signal == null) {\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\n    }\n    validateAbortSignal(signal\x2C indexedName);\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n});\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n});\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n});\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\n\n/**\n * @param {any} value\n * @param {string} name\n */\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\n  if (\n    typeof value === 'undefined' ||\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\n  ) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name\x2C\n      value\x2C\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n    );\n  }\n});\n\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\n  }\n});\n\n/**\n * @param {any} hints\n * @return {string}\n */\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\n    return hints;\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length;\n    let result = '';\n\n    if (hintsLength === 0) {\n      return result;\n    }\n\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i];\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\n      result += link;\n\n      if (i !== hintsLength - 1) {\n        result += '\x2C ';\n      }\n    }\n\n    return result;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints'\x2C\n    hints\x2C\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n  );\n});\n\n// 1. Returns false for undefined and NaN\n// 2. Returns true for finite numbers\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\nconst validateFiniteNumber = hideStackFrames((number\x2C name) => {\n  // Common case\n  if (number === undefined) {\n    return false;\n  }\n\n  if (NumberIsFinite(number)) {\n    return true; // Is a valid number\n  }\n\n  if (NumberIsNaN(number)) {\n    return false;\n  }\n\n  validateNumber(number\x2C name);\n\n  // Infinite numbers\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\n});\n\n// 1. Returns def for number when it's undefined or NaN\n// 2. Returns number for finite numbers >= lower and <= upper\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\nconst checkRangesOrGetDefault = hideStackFrames(\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\n    if (!validateFiniteNumber(number\x2C name)) {\n      return def;\n    }\n    if (number < lower || number > upper) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${lower} and <= ${upper}`\x2C number);\n    }\n    return number;\n  }\x2C\n);\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateStringArray\x2C\n  validateBooleanArray\x2C\n  validateAbortSignalArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateDictionary\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  kValidateObjectNone\x2C\n  kValidateObjectAllowNullable\x2C\n  kValidateObjectAllowArray\x2C\n  kValidateObjectAllowFunction\x2C\n  kValidateObjectAllowObjects\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n  validateLinkHeaderValue\x2C\n  validateInternalField\x2C\n  validateFiniteNumber\x2C\n  checkRangesOrGetDefault\x2C\n};\n
code-source-info,0x108609940,12,4381,4493,,,
code-creation,JS,10,27959,0x108609aa0,144,isPosixPathSeparator node:path:67:30,0x36812ca43d78,^
code-source-info,0x108609aa0,35,2072,2120,,,
tick,0x101c1a260,28375,0,0x0,0,0x108608828,0x1f5524e464df,0x107c6ff42931,0x1f5524e7c9ce,0x107c6ff4a5c0,0x107c6ff47d05,0x107c6ff47a6e,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,28417,0x108609b60,1784,resolve node:path:1162:10,0x36812ca44de8,^
code-source-info,0x108609b60,35,35775,36872,,,
code-creation,JS,10,28417,0x10860a280,320,getCLIOptionsFromBinding node:internal/options:19:34,0x76180f19e70,^
script-source,14,node:internal/options,'use strict';\n\nconst {\n  getCLIOptionsValues\x2C\n  getCLIOptionsInfo\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsDict;\nlet cliInfo;\nlet embedderOptions;\n\n// getCLIOptionsValues() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  return optionsDict ??= getCLIOptionsValues();\n}\n\nfunction getCLIOptionsInfoFromBinding() {\n  return cliInfo ??= getCLIOptionsInfo();\n}\n\nfunction getEmbedderOptions() {\n  return embedderOptions ??= getEmbedderOptionsFromBinding();\n}\n\nfunction refreshOptions() {\n  optionsDict = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  return getCLIOptionsFromBinding()[optionName];\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  getCLIOptionsInfo: getCLIOptionsInfoFromBinding\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\x2C\n};\n
code-source-info,0x10860a280,14,528,582,,,
code-creation,JS,10,28500,0x10860a3e0,120,getOptionValue node:internal/options:35:24,0x76180f1a230,^
code-source-info,0x10860a3e0,14,849,914,,,
code-creation,JS,10,28584,0x10860a480,488,addReadOnlyProcessAlias node:internal/process/pre_execution:280:33,0x340e318042e8,^
script-source,67,node:internal/process/pre_execution,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetFullYear\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  String\x2C\n  Symbol\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  refreshOptions\x2C\n  getEmbedderOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  defineReplaceableLazyAttribute\x2C\n  setupCoverageHooks\x2C\n  emitExperimentalWarning\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n  deprecate\x2C\n} = require('internal/util');\n\nconst {\n  ERR_INVALID_THIS\x2C\n  ERR_NO_CRYPTO\x2C\n  ERR_MISSING_OPTION\x2C\n  ERR_ACCESS_DENIED\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n  runDeserializeCallbacks\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\n  return prepareExecution({\n    expandArgv1\x2C\n    initializeModules\x2C\n    isMainThread: true\x2C\n  });\n}\n\nfunction prepareWorkerThreadExecution() {\n  prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: false\x2C\n    isMainThread: false\x2C\n  });\n}\n\nfunction prepareShadowRealmExecution() {\n  // Patch the process object with legacy properties and normalizations.\n  // Do not expand argv1 as it is not available in ShadowRealm.\n  patchProcessObject(false);\n  setupDebugEnv();\n\n  // Disable custom loaders in ShadowRealm.\n  setupUserModules(true);\n  const {\n    privateSymbols: {\n      host_defined_option_symbol\x2C\n    }\x2C\n  } = internalBinding('util');\n  const {\n    vm_dynamic_import_default_internal\x2C\n  } = internalBinding('symbols');\n\n  // For ShadowRealm.prototype.importValue()\x2C the referrer name is\n  // always null\x2C so the native ImportModuleDynamically() callback would\n  // always fallback to look up the host-defined option from the\n  // global object using host_defined_option_symbol. Using\n  // vm_dynamic_import_default_internal as the host-defined option\n  // instructs the JS-land importModuleDynamicallyCallback() to\n  // proxy the request to defaultImportModuleDynamically().\n  globalThis[host_defined_option_symbol] =\n    vm_dynamic_import_default_internal;\n}\n\nfunction prepareExecution(options) {\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\n\n  refreshRuntimeOptions();\n  reconnectZeroFillToggle();\n\n  // Patch the process object and get the resolved main entry point.\n  const mainEntry = patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupInspectorHooks();\n  setupNetworkInspection();\n  setupNavigator();\n  setupWarningHandler();\n  setupUndici();\n  setupWebCrypto();\n  setupSQLite();\n  setupWebStorage();\n  setupCustomEvent();\n  setupEventsource();\n  setupCodeCoverage();\n  setupDebugEnv();\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n\n  // Load permission system API\n  initializePermission();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n\n  require('internal/dns/utils').initializeDns();\n\n  setupSymbolDisposePolyfill();\n\n  if (isMainThread) {\n    assert(internalBinding('worker').isMainThread);\n    // Worker threads will get the manifest in the message handler.\n\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n    setupStacktracePrinterOnSigint();\n    initializeReportSignalHandlers();  // Main-thread-only.\n    initializeHeapSnapshotSignalHandlers();\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n    // spawned by our child_process module\x2C then initialize IPC.\n    // This attaches some internal event listeners and creates:\n    // process.send()\x2C process.channel\x2C process.connected\x2C\n    // process.disconnect().\n    setupChildProcessIpcChannel();\n    // If this is a worker in cluster mode\x2C start up the communication\n    // channel. This needs to be done before any user code gets executed\n    // (including preload modules).\n    initializeClusterIPC();\n\n    // TODO(joyeecheung): do this for worker threads as well.\n    runDeserializeCallbacks();\n  } else {\n    assert(!internalBinding('worker').isMainThread);\n    // The setup should be called in LOAD_SCRIPT message handler.\n    assert(!initializeModules);\n  }\n\n  if (initializeModules) {\n    setupUserModules();\n  }\n\n  return mainEntry;\n}\n\nfunction setupSymbolDisposePolyfill() {\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.dispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolDispose\x2C\n      writable: false\x2C\n    });\n  }\n\n  // eslint-disable-next-line node-core/prefer-primordials\n  if (typeof Symbol.asyncDispose !== 'symbol') {\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\n      __proto__: null\x2C\n      configurable: false\x2C\n      enumerable: false\x2C\n      value: SymbolAsyncDispose\x2C\n      writable: false\x2C\n    });\n  }\n}\n\nfunction setupUserModules(forceDefaultLoader = false) {\n  initializeCJSLoader();\n  initializeESMLoader(forceDefaultLoader);\n  const {\n    hasStartedUserCJSExecution\x2C\n    hasStartedUserESMExecution\x2C\n  } = require('internal/modules/helpers');\n  assert(!hasStartedUserCJSExecution());\n  assert(!hasStartedUserESMExecution());\n  if (getEmbedderOptions().hasEmbedderPreload) {\n    runEmbedderPreload();\n  }\n  // Do not enable preload modules if custom loaders are disabled.\n  // For example\x2C loader workers are responsible for doing this themselves.\n  // And preload modules are not supported in ShadowRealm as well.\n  if (!forceDefaultLoader) {\n    loadPreloadModules();\n  }\n  // Need to be done after --require setup.\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\n/**\n * Patch the process object with legacy properties and normalizations.\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\n * the main entry point.\n */\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: isBuildingSnapshot()\x2C\n    value: process.argv[0]\x2C\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  /** @type {string} */\n  let mainEntry;\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\n  // the entry point.\n  if (expandArgv1 && process.argv[1] && process.argv[1][0] !== '-') {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      mainEntry = path.resolve(process.argv[1]);\n      process.argv[1] = mainEntry;\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n\n  return mainEntry;\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\x2C\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\x2C\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/\n// https://websockets.spec.whatwg.org/\nfunction setupUndici() {\n  if (getOptionValue('--no-experimental-fetch')) {\n    delete globalThis.fetch;\n    delete globalThis.FormData;\n    delete globalThis.Headers;\n    delete globalThis.Request;\n    delete globalThis.Response;\n  }\n\n  if (getOptionValue('--no-experimental-websocket')) {\n    delete globalThis.WebSocket;\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/server-sent-events.html\nfunction setupEventsource() {\n  if (!getOptionValue('--experimental-eventsource')) {\n    delete globalThis.EventSource;\n  }\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupNavigator() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-navigator')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/system-state.html#the-navigator-object\n  exposeLazyInterfaces(globalThis\x2C 'internal/navigator'\x2C ['Navigator']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/navigator'\x2C ['navigator']\x2C false);\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-webcrypto')) {\n    return;\n  }\n\n  if (internalBinding('config').hasOpenSSL) {\n    defineReplaceableLazyAttribute(\n      globalThis\x2C\n      'internal/crypto/webcrypto'\x2C\n      ['crypto']\x2C\n      false\x2C\n      function cryptoThisCheck() {\n        if (this !== globalThis && this != null)\n          throw new ERR_INVALID_THIS(\n            'nullish or must be the global object');\n      }\x2C\n    );\n    exposeLazyInterfaces(\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\n    );\n  } else {\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                           get crypto() {\n                             throw new ERR_NO_CRYPTO();\n                           }\x2C\n                         }\x2C 'crypto') });\n\n  }\n}\n\nfunction setupSQLite() {\n  if (!getOptionValue('--experimental-sqlite')) {\n    return;\n  }\n\n  const { BuiltinModule } = require('internal/bootstrap/realm');\n  BuiltinModule.allowRequireByUsers('sqlite');\n}\n\nfunction setupWebStorage() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      !getOptionValue('--experimental-webstorage')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/webstorage.html#webstorage\n  exposeLazyInterfaces(globalThis\x2C 'internal/webstorage'\x2C ['Storage']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/webstorage'\x2C [\n    'localStorage'\x2C 'sessionStorage'\x2C\n  ]);\n}\n\nfunction setupCodeCoverage() {\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd. Don't do anything if the\n  // --experimental-test-coverage flag is present\x2C as the test runner will\n  // handle coverage.\n  if (process.env.NODE_V8_COVERAGE &&\n      !getOptionValue('--experimental-test-coverage')) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      const { report } = require('internal/process/report');\n      return report;\n    }\x2C\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  if (getOptionValue('--report-on-signal')) {\n    const { addSignalHandler } = require('internal/process/report');\n    addSignalHandler();\n  }\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\n    writeHeapSnapshot(heapSnapshotFilename);\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\nfunction setupNetworkInspection() {\n  if (internalBinding('config').hasInspector && getOptionValue('--experimental-network-inspection')) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_network_tracking');\n    internalBinding('inspector').setupNetworkTracking(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\x2C\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePermission() {\n  const experimentalPermission = getOptionValue('--experimental-permission');\n  if (experimentalPermission) {\n    process.binding = function binding(_module) {\n      throw new ERR_ACCESS_DENIED('process.binding');\n    };\n    // Guarantee path module isn't monkey-patched to bypass permission model\n    ObjectFreeze(require('path'));\n    emitExperimentalWarning('Permission');\n    const { has } = require('internal/process/permission');\n    const warnFlags = [\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    for (const flag of warnFlags) {\n      if (getOptionValue(flag)) {\n        process.emitWarning(\n          `The flag ${flag} must be used with extreme caution. ` +\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\n      }\n    }\n    const warnCommaFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n    ];\n    for (const flag of warnCommaFlags) {\n      const value = getOptionValue(flag);\n      if (value.length === 1 && value[0].includes('\x2C')) {\n        process.emitWarning(\n          `The ${flag} CLI flag has changed. ` +\n        'Passing a comma-separated list of paths is no longer valid. ' +\n        'Documentation can be found at ' +\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\n          'Warning'\x2C\n        );\n      }\n    }\n\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: {\n        has\x2C\n      }\x2C\n    });\n  } else {\n    const availablePermissionFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\n      const value = getOptionValue(flag);\n      if (value.length) {\n        throw new ERR_MISSING_OPTION('--experimental-permission');\n      }\n    });\n  }\n}\n\nfunction initializeCJSLoader() {\n  const { initializeCJS } = require('internal/modules/cjs/loader');\n  initializeCJS();\n}\n\nfunction initializeESMLoader(forceDefaultLoader) {\n  const { initializeESM } = require('internal/modules/esm/utils');\n  initializeESM(forceDefaultLoader);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const {\n    setSourceMapsEnabled\x2C\n  } = require('internal/source_map/source_map_cache');\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    emitExperimentalWarning('Frozen intristics');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction runEmbedderPreload() {\n  internalBinding('mksnapshot').runEmbedderPreload(process\x2C require);\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\x2C\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\n// Sequence number for diagnostic filenames\nlet sequenceNumOfheapSnapshot = 0;\n\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\nfunction getHeapSnapshotFilename(diagnosticDir) {\n  if (!diagnosticDir) return undefined;\n\n  const date = new Date();\n\n  const year = DatePrototypeGetFullYear(date);\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\n\n  const dateString = `${year}${month}${day}`;\n  const timeString = `${hours}${minutes}${seconds}`;\n  const pid = process.pid;\n  const threadId = internalBinding('worker').threadId;\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\n\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\n}\n\nmodule.exports = {\n  setupUserModules\x2C\n  prepareMainThreadExecution\x2C\n  prepareWorkerThreadExecution\x2C\n  prepareShadowRealmExecution\x2C\n  markBootstrapComplete\x2C\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n};\n
code-source-info,0x10860a480,67,8863,9112,,,
tick,0x1016affbc,29625,0,0x0,0,0x1f5524e4649a,0x107c6ff42989,0x1f5524e7c9ce,0x107c6ff4a5c0,0x107c6ff47d05,0x107c6ff47a6e,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,29917,0x10860a6a0,168,exposeLazyInterfaces node:internal/util:687:30,0x76180f18cc0,^
script-source,13,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolReplace\x2C\n  SymbolSplit\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_NO_TYPESCRIPT\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  overrideStackTrace\x2C\n  uvErrmapGet\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  guessHandleType: _guessHandleType\x2C\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n    decorated_private_symbol\x2C\n  }\x2C\n  sleep: _sleep\x2C\n} = internalBinding('util');\nconst { isNativeError\x2C isPromise } = internalBinding('types');\nconst { getOptionValue } = require('internal/options');\nconst { encodings } = internalBinding('string_decoder');\n\nconst noCrypto = !process.versions.openssl;\nconst noTypeScript = !process.versions.amaro;\n\nconst isWindows = process.platform === 'win32';\nconst isMacOS = process.platform === 'darwin';\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\nfunction getDeprecationWarningEmitter(\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  shouldEmitWarning = () => true\x2C\n) {\n  let warned = false;\n  return function() {\n    if (!warned && shouldEmitWarning()) {\n      warned = true;\n      if (code === 'ExperimentalWarning') {\n        process.emitWarning(msg\x2C code\x2C deprecated);\n      } else if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          const emitWarning = useEmitSync ?\n            require('internal/process/warning').emitWarningSync :\n            process.emitWarning;\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n  };\n}\n\nfunction isPendingDeprecation() {\n  return getOptionValue('--pending-deprecation') &&\n    !getOptionValue('--no-deprecation');\n}\n\n// Internal deprecator for pending --pending-deprecation. This can be invoked\n// at snapshot building time as the warning permission is only queried at\n// run time.\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\n  );\n  function deprecated(...args) {\n    emitDeprecationWarning();\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n  return deprecated;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  );\n\n  function deprecated(...args) {\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\n    if (!process.noDeprecation) {\n      emitDeprecationWarning();\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\n    return;\n\n  const arrow = err[arrow_message_private_symbol];\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    err[decorated_private_symbol] = true;\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\nfunction assertTypeScript() {\n  if (noTypeScript)\n    throw new ERR_NO_TYPESCRIPT();\n}\n\n/**\n * Move the "slow cases" to a separate function to make sure this function gets\n * inlined properly. That prioritizes the common case.\n * @param {unknown} enc\n * @returns {string | undefined} Returns undefined if there is no match.\n */\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n      StringPrototypeToLowerCase(enc) === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n      StringPrototypeToLowerCase(enc) === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\n/**\n * @param {string} feature Feature name used in the warning message\n * @param {string} messagePrefix Prefix of the warning message\n * @param {string} code See documentation of process.emitWarning\n * @param {string} ctor See documentation of process.emitWarning\n */\nfunction emitExperimentalWarning(feature\x2C messagePrefix\x2C code\x2C ctor) {\n  if (experimentalWarnings.has(feature)) return;\n  experimentalWarnings.add(feature);\n  let msg = `${feature} is an experimental feature and might change at any time`;\n  if (messagePrefix) {\n    msg = messagePrefix + msg;\n  }\n  process.emitWarning(msg\x2C 'ExperimentalWarning'\x2C code\x2C ctor);\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = { __proto__: null };\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nlet cachedURL;\nlet cachedCWD;\n\n/**\n * Get the current working directory while accounting for the possibility that it has been deleted.\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\n */\nfunction getCWDURL() {\n  const { sep } = require('path');\n  const { pathToFileURL } = require('internal/url');\n\n  let cwd;\n\n  try {\n    // The implementation of `process.cwd()` already uses proper cache when it can.\n    // It's a relatively cheap call performance-wise for the most common use case.\n    cwd = process.cwd();\n  } catch {\n    cachedURL ??= pathToFileURL(sep);\n  }\n\n  if (cwd != null && cwd !== cachedCWD) {\n    cachedURL = pathToFileURL(cwd + sep);\n    cachedCWD = cwd;\n  }\n\n  return cachedURL;\n}\n\nfunction getSystemErrorMessage(err) {\n  return lazyUv().getErrorMessage(err);\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      if (isPromise(ReflectApply(original\x2C this\x2C args))) {\n        process.emitWarning('Calling promisify on a function that returns a Promise is likely a mistake.'\x2C\n                            'DeprecationWarning'\x2C 'DEP0174');\n      }\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(?:.*)[\\\\/]node_modules[\\\\/]/;\n\nfunction isUnderNodeModules(filename) {\n  return filename && (RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null);\n}\n\nlet getStructuredStackImpl;\n\nfunction lazyGetStructuredStack() {\n  if (getStructuredStackImpl === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\n    // and module mocking\x2C the perf implications should be okay.\n    getStructuredStackImpl = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  return getStructuredStackImpl;\n}\n\nfunction getStructuredStack() {\n  const getStructuredStackImpl = lazyGetStructuredStack();\n\n  return getStructuredStackImpl();\n}\n\nfunction once(callback\x2C { preserveReturnValue = false } = kEmptyObject) {\n  let called = false;\n  let returnValue;\n  return function(...args) {\n    if (called) return returnValue;\n    called = true;\n    const result = ReflectApply(callback\x2C this\x2C args);\n    returnValue = preserveReturnValue ? result : undefined;\n    return result;\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-namespaces\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: namespaceObject\x2C\n  });\n}\n\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: getter\x2C\n    set: setter\x2C\n  });\n}\n\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\n  const descriptors = { __proto__: null };\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let lazyLoadedValue;\n    function set(value) {\n      ObjectDefineProperty(target\x2C key\x2C {\n        __proto__: null\x2C\n        writable: true\x2C\n        value\x2C\n      });\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n    function get() {\n      mod ??= require(id);\n      if (lazyLoadedValue === undefined) {\n        lazyLoadedValue = mod[key];\n        set(lazyLoadedValue);\n      }\n      return lazyLoadedValue;\n    }\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n    descriptors[key] = {\n      __proto__: null\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      get\x2C\n      set\x2C\n    };\n  }\n  ObjectDefineProperties(target\x2C descriptors);\n}\n\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let value;\n    let setterCalled = false;\n\n    function get() {\n      if (check !== undefined) {\n        FunctionPrototypeCall(check\x2C this);\n      }\n      if (setterCalled) {\n        return value;\n      }\n      mod ??= require(id);\n      value ??= mod[key];\n      return value;\n    }\n\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n\n    function set(val) {\n      setterCalled = true;\n      value = val;\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n\n    ObjectDefineProperty(target\x2C key\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      get\x2C\n      set: writable ? set : undefined\x2C\n    });\n  }\n}\n\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = (message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const ex = new _DOMException(message\x2C name);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\n    return ex;\n  }\n  return new _DOMException(message\x2C name);\n\n};\n\nconst kEnumerableProperty = { __proto__: null };\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = { __proto__: null };\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nlet internalGlobal;\nfunction getInternalGlobal() {\n  if (internalGlobal == null) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\n  }\n  return internalGlobal;\n}\n\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\n}\n\nconst crossRealmRegexes = new SafeWeakMap();\nfunction getCrossRealmRegex(regex) {\n  const cached = crossRealmRegexes.get(regex);\n  if (cached) return cached;\n\n  let flagString = '';\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\n\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  const crossRealmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\n  crossRealmRegexes.set(regex\x2C crossRealmRegex);\n  return crossRealmRegex;\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\n  return getCrossRealmRegex(regex)[SymbolReplace](string\x2C replacement);\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\n  return getCrossRealmRegex(regex)[SymbolSplit](string\x2C limit);\n}\n\n/**\n * Helper function to lazy-load an initialize-once value.\n * @template T Return value of initializer\n * @param {()=>T} initializer Initializer of the lazily loaded value.\n * @returns {()=>T}\n */\nfunction getLazy(initializer) {\n  let value;\n  let initialized = false;\n  return function() {\n    if (initialized === false) {\n      value = initializer();\n      initialized = true;\n    }\n    return value;\n  };\n}\n\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage objects to a specified directory.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\n\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\nfunction guessHandleType(fd) {\n  const type = _guessHandleType(fd);\n  return handleTypes[type];\n}\n\nclass WeakReference {\n  #weak = null;\n  // eslint-disable-next-line no-unused-private-class-members\n  #strong = null;\n  #refCount = 0;\n  constructor(object) {\n    this.#weak = new SafeWeakRef(object);\n  }\n\n  incRef() {\n    this.#refCount++;\n    if (this.#refCount === 1) {\n      const derefed = this.#weak.deref();\n      if (derefed !== undefined) {\n        this.#strong = derefed;\n      }\n    }\n    return this.#refCount;\n  }\n\n  decRef() {\n    this.#refCount--;\n    if (this.#refCount === 0) {\n      this.#strong = null;\n    }\n    return this.#refCount;\n  }\n\n  get() {\n    return this.#weak.deref();\n  }\n}\n\nconst encodingsMap = { __proto__: null };\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nmodule.exports = {\n  getLazy\x2C\n  assertCrypto\x2C\n  assertTypeScript\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  encodingsMap\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  exposeNamespace\x2C\n  exposeGetterAndSetter\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getCWDURL\x2C\n  getInternalGlobal\x2C\n  getStructuredStack\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  getSystemErrorMessage\x2C\n  guessHandleType\x2C\n  isError\x2C\n  isUnderNodeModules\x2C\n  isMacOS\x2C\n  isWindows\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\n  sleep\x2C\n  spliceOne\x2C\n  setupCoverageHooks\x2C\n  removeColors\x2C\n\n  // Define Symbol.dispose and Symbol.asyncDispose\n  // Until these are defined by the environment.\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in primordials.\n  // eslint-disable-next-line node-core/prefer-primordials\n  SymbolDispose: Symbol.dispose || SymbolFor('nodejs.dispose')\x2C\n  // eslint-disable-next-line node-core/prefer-primordials\n  SymbolAsyncDispose: Symbol.asyncDispose || SymbolFor('nodejs.asyncDispose')\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n  pendingDeprecate\x2C\n  WeakReference\x2C\n};\n
code-source-info,0x10860a6a0,13,18971,19042,,,
tick,0x19d5f1aa4,31042,0,0x0,0,0x1f5524e4649a,0x107c6ff42989,0x1f5524e7c9ce,0x107c6ff4a5c0,0x107c6ff47d05,0x107c6ff47a6e,0x107c6ff47730,0x32d2c6e812d5
code-creation,JS,10,31042,0x10860a780,2616,defineLazyProperties node:internal/util:604:30,0x76180f18518,^
code-source-info,0x10860a780,13,17134,18038,,,
code-creation,JS,10,31084,0x10860b1e0,136,next node:internal/per_context/primordials:331:9,0x315d24f7f2d0,^
script-source,3,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\x2C\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\x2C\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'Atomics'\x2C\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectGet\x2C\n  ReflectSet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n\n/**\n * Creates a class that can be safely iterated over.\n *\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\n * `primordials` object\x2C it's important to use const references to the\n * primordials that they use.\n * @template {Iterable} T\n * @template {*} TReturn\n * @template {*} TNext\n * @param {(self: T) => IterableIterator<T>} factory\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\n */\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\x2C\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\x2C\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\x2C\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\x2C\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\x2C\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {(() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\x2C\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\n    )\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    const onFulfilled = () => {\n      if (--pendingPromises === 0) {\n        resolve();\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\n  let pendingPromises = promises.length;\n  if (pendingPromises === 0) resolve();\n  const onSettle = () => {\n    if (--pendingPromises === 0) resolve();\n  };\n  for (let i = 0; i < promises.length; i++) {\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\n  }\n});\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\n/**\n * @param {RegExp} pattern\n * @returns {RegExp}\n */\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\x2C\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\n/**\n * @param {string} str\n * @param {RegExp} regexp\n * @returns {number}\n */\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x10860b1e0,3,9242,9287,,,
code-creation,JS,10,32000,0x10860b2a0,376,SafeSet node:internal/per_context/primordials:422:16,0x315d24f7fa68,^
code-source-info,0x10860b2a0,3,11967,11984,,,
tick,0x1013bfe64,32125,0,0x0,0,0x101bf6c60,0x1f5524e7d8c5,0x1f5524e7decf,0x107c6ff4b562,0x107c6ff4bd0f,0x32d2c6e8132b
code-creation,Eval,9,32917,0x32d2c6e81d20,5, node:internal/util/colors:1:1,0x2f7916669ab8,~
script-source,74,node:internal/util/colors,'use strict';\n\nlet internalTTy;\nfunction lazyInternalTTY() {\n  internalTTy ??= require('internal/tty');\n  return internalTTy;\n}\n\nmodule.exports = {\n  blue: ''\x2C\n  green: ''\x2C\n  white: ''\x2C\n  red: ''\x2C\n  gray: ''\x2C\n  clear: ''\x2C\n  reset: ''\x2C\n  hasColors: false\x2C\n  shouldColorize(stream) {\n    if (process.env.FORCE_COLOR !== undefined) {\n      return lazyInternalTTY().getColorDepth() > 2;\n    }\n    return stream?.isTTY && (\n      typeof stream.getColorDepth === 'function' ?\n        stream.getColorDepth() > 2 : true);\n  }\x2C\n  refresh() {\n    if (process.stderr.isTTY) {\n      const hasColors = module.exports.shouldColorize(process.stderr);\n      module.exports.blue = hasColors ? '\\u001b[34m' : '';\n      module.exports.green = hasColors ? '\\u001b[32m' : '';\n      module.exports.white = hasColors ? '\\u001b[39m' : '';\n      module.exports.yellow = hasColors ? '\\u001b[33m' : '';\n      module.exports.red = hasColors ? '\\u001b[31m' : '';\n      module.exports.gray = hasColors ? '\\u001b[90m' : '';\n      module.exports.clear = hasColors ? '\\u001bc' : '';\n      module.exports.reset = hasColors ? '\\u001b[0m' : '';\n      module.exports.hasColors = hasColors;\n    }\n  }\x2C\n};\n\nmodule.exports.refresh();\n
code-source-info,0x32d2c6e81d20,74,0,1194,C0O0C4O1194,,
code-creation,JS,9,33000,0x32d2c6e81dd0,78, node:internal/util/colors:1:1,0x2f7916669bd0,~
code-source-info,0x32d2c6e81dd0,74,0,1194,C0O0C26O19C27O19C29O129C37O257C45O521C55O144C59O1168C62O1175C67O1183C72O1183C77O1193,,
code-creation,JS,9,33084,0x32d2c6e81f50,233,refresh node:internal/util/colors:26:10,0x2f7916669ce8,~
code-source-info,0x32d2c6e81f50,74,528,1162,C0O537C3O549C8O556C14O589C17O596C22O604C30O627C35O604C41O642C44O649C51O664C59O662C63O701C66O708C73O724C81O722C85O761C88O768C95O784C103O782C107O821C110O828C117O845C125O843C129O882C132O889C139O903C147O901C151O940C154O947C161O962C169O960C173O999C176O1006C183O1022C191O1020C195O1056C198O1063C205O1079C213O1077C217O1115C220O1122C227O1140C232O1161,,
tick,0x101713ba0,33417,0,0x0,2,0x1086090bc,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,34000,0x32d2c6e82110,5, node:net:1:1,0x2f79166711a0,~
script-source,75,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  kReinitializeHandle\x2C\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\x2C\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\x2C\n  UV_ECANCELED\x2C\n  UV_ETIMEDOUT\x2C\n} = internalBinding('uv');\nconst { convertIpv6StringToBuffer } = internalBinding('cares_wrap');\n\nconst { Buffer } = require('buffer');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\x2C\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\x2C\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n} = require('internal/stream_base_commons');\nconst {\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  NodeAggregateError\x2C\n  UVExceptionWithHostPort\x2C\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst {\n  guessHandleType\x2C\n  isWindows\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst { getOptionValue } = require('internal/options');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\nlet autoSelectFamilyAttemptTimeoutDefault = getOptionValue('--network-family-autoselection-attempt-timeout');\n\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst noop = () => {};\n\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\n\nconst dc = require('diagnostics_channel');\nconst netClientSocketChannel = dc.channel('net.client.socket');\nconst netServerSocketChannel = dc.channel('net.server.socket');\nconst netServerListen = dc.tracingChannel('net.server.listen');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\n\nfunction getFlags(options) {\n  let flags = 0;\n  if (options.ipv6Only === true) {\n    flags |= TCPConstants.UV_TCP_IPV6ONLY;\n  }\n  if (options.reusePort === true) {\n    flags |= TCPConstants.UV_TCP_REUSEPORT;\n  }\n  return flags;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (netClientSocketChannel.hasSubscribers) {\n    netClientSocketChannel.publish({\n      socket\x2C\n    });\n  }\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\nfunction getDefaultAutoSelectFamily() {\n  return autoSelectFamilyDefault;\n}\n\nfunction setDefaultAutoSelectFamily(value) {\n  validateBoolean(value\x2C 'value');\n  autoSelectFamilyDefault = value;\n}\n\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\n  return autoSelectFamilyAttemptTimeoutDefault;\n}\n\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\n  validateInt32(value\x2C 'value'\x2C 1);\n\n  if (value < 10) {\n    value = 10;\n  }\n\n  autoSelectFamilyAttemptTimeoutDefault = value;\n}\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\n  if (self._handle) {\n    self._handle.close(() => {\n      debug('emit close');\n      self.emit('close'\x2C isException);\n      if (isCleanupPending) {\n        self._handle.onread = noop;\n        self._handle = null;\n        self._sockname = null;\n      }\n    });\n  }\n}\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\x2C\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\x2C\n    );\n  }\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n  this._closeAfterHandlingError = false;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw new ErrnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        __proto__: null\x2C\n        value: 0\x2C writable: true\x2C\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  this[kSetNoDelay] = Boolean(options.noDelay);\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  if (options.signal) {\n    addClientAbortSignalOption(this\x2C options);\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.connecting) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  const er = genericNodeError(\n    'This socket has been ended by the other party'\x2C\n    { code: 'EPIPE' }\x2C\n  );\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  // Backwards compatibility: assume true when `enable` is omitted\n  enable = Boolean(enable === undefined ? true : enable);\n\n  if (!this._handle) {\n    this[kSetNoDelay] = enable;\n    return this;\n  }\n\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = enable;\n    this._handle.setNoDelay(enable);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\n  enable = Boolean(enable);\n  const initialDelay = ~~(initialDelayMsecs / 1000);\n\n  if (!this._handle) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    return this;\n  }\n\n  if (!this._handle.setKeepAlive) {\n    return this;\n  }\n\n  if (enable !== this[kSetKeepAlive] ||\n      (\n        enable &&\n        this[kSetKeepAliveInitialDelay] !== initialDelay\n      )\n  ) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    this._handle.setKeepAlive(enable\x2C initialDelay);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.connecting;\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this._unrefTimer;\n  }\x2C\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(new ErrnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug(\n    '_read - n'\x2C n\x2C\n    'isConnecting?'\x2C !!this.connecting\x2C\n    'hasHandle?'\x2C !!this._handle\x2C\n  );\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  return this;\n};\n\nSocket.prototype.resetAndDestroy = function() {\n  if (this._handle) {\n    if (!(this._handle instanceof TCP))\n      throw new ERR_INVALID_HANDLE_TYPE();\n    if (this.connecting) {\n      debug('reset wait for connection');\n      this.once('connect'\x2C () => this._reset());\n    } else {\n      this._reset();\n    }\n  } else {\n    this.destroy(new ERR_SOCKET_CLOSED());\n  }\n  return this;\n};\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle?.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(new ErrnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    if (this.resetAndClosing) {\n      this.resetAndClosing = false;\n      const err = this._handle.reset(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n      if (err)\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\n    } else if (this._closeAfterHandlingError) {\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\n      // accessible when an `error` event is handled in the `next tick queue`.\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\n    } else {\n      closeSocketHandle(this\x2C isException);\n    }\n\n    if (!this._closeAfterHandlingError) {\n      this._handle.onread = noop;\n      this._handle = null;\n      this._sockname = null;\n    }\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._reset = function() {\n  debug('reset connection');\n  this.resetAndClosing = true;\n  return this.destroy();\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    const out = {};\n    const err = this._handle.getpeername(out);\n    if (err) return out;\n    this._peername = out;\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\x2C\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\nprotoGetter('localFamily'\x2C function localFamily() {\n  return this._getsockname().family;\n});\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this.off('close'\x2C onClose);\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    function onClose() {\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\n    }\n    this.once('close'\x2C onClose);\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress ||= DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress ||= DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  if (addressType === 6 || addressType === 4) {\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n    req.addressType = addressType;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\n  }\n}\n\n\nfunction internalConnectMultiple(context\x2C canceled) {\n  clearTimeout(context[kTimeout]);\n  const self = context.socket;\n\n  // We were requested to abort. Stop all operations\n  if (self._aborted) {\n    return;\n  }\n\n  // All connections have been tried without success\x2C destroy with error\n  if (canceled || context.current === context.addresses.length) {\n    if (context.errors.length === 0) {\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\n      return;\n    }\n\n    self.destroy(new NodeAggregateError(context.errors));\n    return;\n  }\n\n  assert(self.connecting);\n\n  const current = context.current++;\n\n  if (current > 0) {\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\n  }\n\n  const { localPort\x2C port\x2C flags } = context;\n  const { address\x2C family: addressType } = context.addresses[current];\n  let localAddress;\n  let err;\n\n  if (localPort) {\n    if (addressType === 4) {\n      localAddress = DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\n      internalConnectMultiple(context);\n      return;\n    }\n  }\n\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  const req = new TCPConnectWrap();\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\n  req.address = address;\n  req.port = port;\n  req.localAddress = localAddress;\n  req.localPort = localPort;\n  req.addressType = addressType;\n\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\n\n  if (addressType === 4) {\n    err = self._handle.connect(req\x2C address\x2C port);\n  } else {\n    err = self._handle.connect6(req\x2C address\x2C port);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\n    internalConnectMultiple(context);\n    return;\n  }\n\n  if (current < context.addresses.length - 1) {\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\n\n    // If the attempt has not returned an error\x2C start the connection timer\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\n  }\n}\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  // If the parent is already connecting\x2C do not attempt to connect again\n  if (this._parent?.connecting) {\n    return this;\n  }\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\n  this._handle?.close();\n\n  this._handle = handle;\n  this._handle[owner_symbol] = this;\n\n  initSocketHandle(this);\n};\n\nfunction socketToDnsFamily(family) {\n  switch (family) {\n    case 'IPv4':\n      return 4;\n    case 'IPv6':\n      return 6;\n  }\n\n  return family;\n}\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (typeof port !== 'undefined') {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n\n  if (autoSelectFamily != null) {\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\n  } else {\n    autoSelectFamily = autoSelectFamilyDefault;\n  }\n\n  if (autoSelectFamilyAttemptTimeout != null) {\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\n\n    if (autoSelectFamilyAttemptTimeout < 10) {\n      autoSelectFamilyAttemptTimeout = 10;\n    }\n  } else {\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\n  }\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n    });\n    return;\n  }\n\n  if (options.lookup != null)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: socketToDnsFamily(options.family)\x2C\n    hints: options.hints || 0\x2C\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\n    debug('connect: autodetecting');\n\n    dnsopts.all = true;\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n      lookupAndConnectMultiple(\n        self\x2C\n        async_id_symbol\x2C\n        lookup\x2C\n        host\x2C\n        options\x2C\n        dnsopts\x2C\n        port\x2C\n        localAddress\x2C\n        localPort\x2C\n        autoSelectFamilyAttemptTimeout\x2C\n      );\n    });\n\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (!isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n      }\n    });\n  });\n}\n\nfunction lookupAndConnectMultiple(\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\n) {\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) {\n        return;\n      } else if (err) {\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\n\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n        return;\n      }\n\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\n      // The first valid address determines which group has preference on the\n      // alternate family sorting which happens later.\n      const validAddresses = [[]\x2C []];\n      const validIps = [[]\x2C []];\n      let destinations;\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\n        const address = addresses[i];\n        const { address: ip\x2C family: addressType } = address;\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n        // It's possible we were destroyed while looking this up.\n        if (!self.connecting) {\n          return;\n        }\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\n          destinations ||= addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\n\n          const destination = destinations[addressType];\n\n          // Only try an address once\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\n            ArrayPrototypePush(validIps[destination]\x2C ip);\n          }\n        }\n      }\n\n\n      // When no AAAA or A records are available\x2C fail on the first one\n      if (!validAddresses[0].length && !validAddresses[1].length) {\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\n\n        if (!isIP(firstIp)) {\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\n                                               options.host\x2C\n                                               options.port);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        }\n\n        return;\n      }\n\n      // Sort addresses alternating families\n      const toAttempt = [];\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\n        if (i in validAddresses[0]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\n        }\n        if (i in validAddresses[1]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\n        }\n      }\n\n      if (toAttempt.length === 1) {\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\n        const { address: ip\x2C family: addressType } = toAttempt[0];\n\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C\n          ip\x2C\n          port\x2C\n          addressType\x2C\n          localAddress\x2C\n          localPort\x2C\n        );\n\n        return;\n      }\n\n      self.autoSelectFamilyAttemptedAddresses = [];\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\n\n      const context = {\n        socket: self\x2C\n        addresses: toAttempt\x2C\n        current: 0\x2C\n        port\x2C\n        localPort\x2C\n        timeout\x2C\n        [kTimeout]: null\x2C\n        errors: []\x2C\n      };\n\n      self._unrefTimer();\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\n    });\n  });\n}\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  const self = handle[owner_symbol];\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\n      self._handle.setNoDelay(true);\n    }\n\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\n    }\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\n    }\n  } else {\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = new ExceptionWithHostPort(status\x2C\n                                         'connect'\x2C\n                                         req.address\x2C\n                                         req.port\x2C\n                                         details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n    self.destroy(ex);\n  }\n}\n\nfunction addClientAbortSignalOption(self\x2C options) {\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  let disposable;\n\n  function onAbort() {\n    disposable?.[SymbolDispose]();\n    self._aborted = true;\n  }\n\n  if (signal.aborted) {\n    process.nextTick(onAbort);\n  } else {\n    process.nextTick(() => {\n      disposable = addAbortListener(signal\x2C onAbort);\n    });\n  }\n}\n\nfunction createConnectionError(req\x2C status) {\n  let details;\n\n  if (req.localAddress && req.localPort) {\n    details = req.localAddress + ':' + req.localPort;\n  }\n\n  const ex = new ExceptionWithHostPort(status\x2C\n                                       'connect'\x2C\n                                       req.address\x2C\n                                       req.port\x2C\n                                       details);\n  if (details) {\n    ex.localAddress = req.localAddress;\n    ex.localPort = req.localPort;\n  }\n\n  return ex;\n}\n\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\n\n  // Make sure another connection is not spawned\n  clearTimeout(context[kTimeout]);\n\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\n  if (status === 0 && current !== context.current - 1) {\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\n    handle.close();\n    return;\n  }\n\n  const self = context.socket;\n\n  // Some error occurred\x2C add to the list of exceptions\n  if (status !== 0) {\n    const ex = createConnectionError(req\x2C status);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n\n    // Try the next address\x2C unless we were aborted\n    if (context.socket.connecting) {\n      internalConnectMultiple(context\x2C status === UV_ECANCELED);\n    }\n\n    return;\n  }\n\n  if (hasObserver('net')) {\n    startPerf(\n      self\x2C\n      kPerfHooksNetConnectContext\x2C\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\n    );\n  }\n\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\n}\n\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\n  context.socket.emit('connectionAttemptTimeout'\x2C req.address\x2C req.port\x2C req.addressType);\n\n  req.oncomplete = undefined;\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\n  handle.close();\n\n  // Try the next address\x2C unless we were aborted\n  if (context.socket.connecting) {\n    internalConnectMultiple(context);\n  }\n}\n\nfunction addServerAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    const disposable = addAbortListener(signal\x2C onAborted);\n    self.once('close'\x2C disposable[SymbolDispose]);\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = kEmptyObject;\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\n    validateNumber(\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n  if (typeof options.highWaterMark !== 'undefined') {\n    validateNumber(\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\n    );\n\n    if (options.highWaterMark < 0) {\n      options.highWaterMark = getDefaultHighWaterMark();\n    }\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n  this._listeningId = 1;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n  this.noDelay = Boolean(options.noDelay);\n  this.keepAlive = Boolean(options.keepAlive);\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port\x2C undefined\x2C undefined\x2C flags);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port\x2C flags);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n\n      if (netServerListen.hasSubscribers) {\n        netServerListen.error.publish({ server: this\x2C error });\n      }\n\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n\n    if (netServerListen.hasSubscribers) {\n      netServerListen.error.publish({ server: this\x2C error: ex });\n    }\n\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncEnd.publish({ server: this });\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n    backlog\x2C\n    ...options\x2C\n  };\n  const listeningId = server._listeningId;\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n  function listenOnPrimaryHandle(err\x2C handle) {\n    if (listeningId !== server._listeningId) {\n      handle.close();\n      return;\n    }\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n    // If there was a handle\x2C just close it to avoid fd leak\n    // but it doesn't look like that's going to happen right now\n    if (server._handle) {\n      server._handle.close();\n    }\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncStart.publish({ server: this\x2C options });\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options);\n  //  Refresh the id to make the previous call invalid\n  this._listeningId++;\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs\x2C undefined\x2C true);\n    return this;\n  }\n  addServerAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (typeof options.port === 'undefined' && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    if (options.reusePort === true) {\n      options.exclusive = true;\n    }\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive\x2C flags);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    // We can not call fchmod on abstract unix socket\n    if (options.path[0] === '\\0' &&\n        (options.readableAll || options.writableAll)) {\n      const msg = 'can not set readableAll or writableAllt to true when path is abstract unix socket';\n      throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C msg);\n    }\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C\n                    pipeName\x2C\n                    -1\x2C\n                    -1\x2C\n                    backlog\x2C\n                    undefined\x2C\n                    options.exclusive\x2C\n                    undefined\x2C\n                    {\n                      readableAll: options.readableAll\x2C\n                      writableAll: options.writableAll\x2C\n                    });\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction isIpv6LinkLocal(ip) {\n  if (!isIPv6(ip)) { return false; }\n\n  const ipv6Buffer = convertIpv6StringToBuffer(ip);\n  const firstByte = ipv6Buffer[0];  // The first 8 bits\n  const secondByte = ipv6Buffer[1]; // The next 8 bits\n\n  // The link-local prefix is `1111111010`\x2C which in hexadecimal is `fe80`\n  // First 8 bits (firstByte) should be `11111110` (0xfe)\n  // The next 2 bits of the second byte should be `10` (0x80)\n\n  const isFirstByteCorrect = (firstByte === 0xfe); // 0b11111110 == 0xfe\n  const isSecondByteCorrect = (secondByte & 0xc0) === 0x80; // 0b10xxxxxx == 0x80\n\n  return isFirstByteCorrect && isSecondByteCorrect;\n}\n\nfunction filterOnlyValidAddress(addresses) {\n  // Return the first non IPV6 link-local address if present\n  for (const address of addresses) {\n    if (!isIpv6LinkLocal(address.address)) {\n      return address;\n    }\n  }\n\n  // Otherwise return the first address\n  return addresses[0];\n}\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C\n                         exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  const listeningId = self._listeningId;\n\n  dns.lookup(address\x2C { all: true }\x2C (err\x2C addresses) => {\n    if (listeningId !== self._listeningId) {\n      return;\n    }\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      const validAddress = filterOnlyValidAddress(addresses);\n      const family = validAddress?.family || 4;\n\n      listenInCluster(self\x2C validAddress.address\x2C port\x2C family\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n});\n\nServer.prototype.address = function() {\n  if (this._handle?.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw new ErrnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections != null && self._connections >= self.maxConnections) {\n    if (clientHandle.getsockname || clientHandle.getpeername) {\n      const data = { __proto__: null };\n      if (clientHandle.getsockname) {\n        const localInfo = { __proto__: null };\n        clientHandle.getsockname(localInfo);\n        data.localAddress = localInfo.address;\n        data.localPort = localInfo.port;\n        data.localFamily = localInfo.family;\n      }\n      if (clientHandle.getpeername) {\n        const remoteInfo = { __proto__: null };\n        clientHandle.getpeername(remoteInfo);\n        data.remoteAddress = remoteInfo.address;\n        data.remotePort = remoteInfo.port;\n        data.remoteFamily = remoteInfo.family;\n      }\n      self.emit('drop'\x2C data);\n    } else {\n      self.emit('drop');\n    }\n    clientHandle.close();\n    return;\n  }\n\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\x2C\n    readableHighWaterMark: self.highWaterMark\x2C\n    writableHighWaterMark: self.highWaterMark\x2C\n  });\n\n  if (self.noDelay && clientHandle.setNoDelay) {\n    socket[kSetNoDelay] = true;\n    clientHandle.setNoDelay(true);\n  }\n  if (self.keepAlive && clientHandle.setKeepAlive) {\n    socket[kSetKeepAlive] = true;\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\n  }\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n  self.emit('connection'\x2C socket);\n  if (netServerSocketChannel.hasSubscribers) {\n    netServerSocketChannel.publish({\n      socket\x2C\n    });\n  }\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  this._listeningId++;\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype[SymbolAsyncDispose] = async function() {\n  if (!this._handle) {\n    return;\n  }\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\x2C\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nlet _setSimultaneousAccepts;\nlet warnSimultaneousAccepts = true;\n\nif (isWindows) {\n  let simultaneousAccepts;\n\n  _setSimultaneousAccepts = function(handle) {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n    if (handle === undefined) {\n      return;\n    }\n\n    if (simultaneousAccepts === undefined) {\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\n                             process.env.NODE_MANY_ACCEPTS !== '0');\n    }\n\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\n      handle._simultaneousAccepts = simultaneousAccepts;\n    }\n  };\n} else {\n  _setSimultaneousAccepts = function() {\n    if (warnSimultaneousAccepts) {\n      process.emitWarning(\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\n        'DeprecationWarning'\x2C 'DEP0121');\n      warnSimultaneousAccepts = false;\n    }\n  };\n}\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  _setSimultaneousAccepts\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n  getDefaultAutoSelectFamily\x2C\n  setDefaultAutoSelectFamily\x2C\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\n};\n
code-source-info,0x32d2c6e82110,75,0,69601,C0O0C4O69601,,
code-creation,JS,9,36917,0x32d2c6e82b48,3741, node:net:1:1,0x2f7916672748,~
code-source-info,0x32d2c6e82b
tick,0x19d5393fc,37084,0,0x0,3,0x1086090bc,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
tick,0x1012301e4,37125,0,0x0,3,0x1086090bc,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
tick,0x1017d74d8,37167,0,0x0,0,0x1086090bc,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,37417,0x32d2c6e83e20,5, node:stream:1:1,0x2f7916676f68,~
script-source,76,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst {\n  streamReturningOperators\x2C\n  promiseReturningOperators\x2C\n} = require('internal/streams/operators');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\nconst compose = require('internal/streams/compose');\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\nconst { pipeline } = require('internal/streams/pipeline');\nconst { destroyer } = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\nconst utils = require('internal/streams/utils');\nconst { isArrayBufferView\x2C isUint8Array } = require('internal/util/types');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\n\nStream.isDestroyed = utils.isDestroyed;\nStream.isDisturbed = utils.isDisturbed;\nStream.isErrored = utils.isErrored;\nStream.isReadable = utils.isReadable;\nStream.isWritable = utils.isWritable;\n\nStream.Readable = require('internal/streams/readable');\nconst streamKeys = ObjectKeys(streamReturningOperators);\nfor (let i = 0; i < streamKeys.length; i++) {\n  const key = streamKeys[i];\n  const op = streamReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nconst promiseKeys = ObjectKeys(promiseReturningOperators);\nfor (let i = 0; i < promiseKeys.length; i++) {\n  const key = promiseKeys[i];\n  const op = promiseReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return ReflectApply(op\x2C this\x2C args);\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.duplexPair = require('internal/streams/duplexpair');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\x2C\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\x2C\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\x2C\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isArrayBufferView = isArrayBufferView;\nStream._isUint8Array = isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0x32d2c6e83e20,76,0,5095,C0O0C4O5095,,
code-creation,JS,9,37625,0x32d2c6e84108,1023, node:stream:1:1,0x2f79166770f0,~
code-source-info,0x32d2c6e
code-creation,Eval,9,37917,0x32d2c6e84708,5, node:internal/streams/operators:1:1,0x2f7916678948,~
script-source,77,node:internal/streams/operators,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateAbortSignal\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\nconst { finished } = require('internal/streams/end-of-stream');\nconst staticCompose = require('internal/streams/compose');\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\n\nconst kEmpty = Symbol('kEmpty');\nconst kEof = Symbol('kEof');\n\nfunction compose(stream\x2C options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\n  }\n\n  const composedStream = staticCompose(this\x2C stream);\n\n  if (options?.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(\n      options.signal\x2C\n      composedStream\x2C\n    );\n  }\n\n  return composedStream;\n}\n\nfunction map(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let concurrency = 1;\n  if (options?.concurrency != null) {\n    concurrency = MathFloor(options.concurrency);\n  }\n\n  let highWaterMark = concurrency - 1;\n  if (options?.highWaterMark != null) {\n    highWaterMark = MathFloor(options.highWaterMark);\n  }\n\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\n\n  highWaterMark += concurrency;\n\n  return async function* map() {\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\n    const stream = this;\n    const queue = [];\n    const signalOpt = { signal };\n\n    let next;\n    let resume;\n    let done = false;\n    let cnt = 0;\n\n    function onCatch() {\n      done = true;\n      afterItemProcessed();\n    }\n\n    function afterItemProcessed() {\n      cnt -= 1;\n      maybeResume();\n    }\n\n    function maybeResume() {\n      if (\n        resume &&\n        !done &&\n        cnt < concurrency &&\n        queue.length < highWaterMark\n      ) {\n        resume();\n        resume = null;\n      }\n    }\n\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          if (done) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          try {\n            val = fn(val\x2C signalOpt);\n\n            if (val === kEmpty) {\n              continue;\n            }\n\n            val = PromiseResolve(val);\n          } catch (err) {\n            val = PromiseReject(err);\n          }\n\n          cnt += 1;\n\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n\n          queue.push(val);\n          if (next) {\n            next();\n            next = null;\n          }\n\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\n            await new Promise((resolve) => {\n              resume = resolve;\n            });\n          }\n        }\n        queue.push(kEof);\n      } catch (err) {\n        const val = PromiseReject(err);\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n        queue.push(val);\n      } finally {\n        done = true;\n        if (next) {\n          next();\n          next = null;\n        }\n      }\n    }\n\n    pump();\n\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0];\n\n          if (val === kEof) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          if (val !== kEmpty) {\n            yield val;\n          }\n\n          queue.shift();\n          maybeResume();\n        }\n\n        await new Promise((resolve) => {\n          next = resolve;\n        });\n      }\n    } finally {\n      done = true;\n      if (resume) {\n        resume();\n        resume = null;\n      }\n    }\n  }.call(this);\n}\n\nasync function some(fn\x2C options = undefined) {\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\n    return true;\n  }\n  return false;\n}\n\nasync function every(fn\x2C options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(this\x2C async (...args) => {\n    return !(await fn(...args));\n  }\x2C options));\n}\n\nasync function find(fn\x2C options) {\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\n    return result;\n  }\n  return undefined;\n}\n\nasync function forEach(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function forEachFn(value\x2C options) {\n    await fn(value\x2C options);\n    return kEmpty;\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\n}\n\nfunction filter(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function filterFn(value\x2C options) {\n    if (await fn(value\x2C options)) {\n      return value;\n    }\n    return kEmpty;\n  }\n  return map.call(this\x2C filterFn\x2C options);\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce');\n    this.message = 'Reduce of an empty stream requires an initial value';\n  }\n}\n\nasync function reduce(reducer\x2C initialValue\x2C options) {\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let hasInitialValue = arguments.length > 1;\n  if (options?.signal?.aborted) {\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\n    this.once('error'\x2C () => {}); // The error is already propagated\n    await finished(this.destroy(err));\n    throw err;\n  }\n  const ac = new AbortController();\n  const signal = ac.signal;\n  if (options?.signal) {\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\n  }\n  let gotAnyItemFromStream = false;\n  try {\n    for await (const value of this) {\n      gotAnyItemFromStream = true;\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (!hasInitialValue) {\n        initialValue = value;\n        hasInitialValue = true;\n      } else {\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs();\n    }\n  } finally {\n    ac.abort();\n  }\n  return initialValue;\n}\n\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  const result = [];\n  for await (const val of this) {\n    if (options?.signal?.aborted) {\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\n    }\n    ArrayPrototypePush(result\x2C val);\n  }\n  return result;\n}\n\nfunction flatMap(fn\x2C options) {\n  const values = map.call(this\x2C fn\x2C options);\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val;\n    }\n  }.call(this);\n}\n\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number);\n  if (NumberIsNaN(number)) {\n    return 0;\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\n  }\n  return number;\n}\n\nfunction drop(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* drop() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- <= 0) {\n        yield val;\n      }\n    }\n  }.call(this);\n}\n\nfunction take(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* take() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- > 0) {\n        yield val;\n      }\n\n      // Don't get another item from iterator in case we reached the end\n      if (number <= 0) {\n        return;\n      }\n    }\n  }.call(this);\n}\n\nmodule.exports.streamReturningOperators = {\n  drop\x2C\n  filter\x2C\n  flatMap\x2C\n  map\x2C\n  take\x2C\n  compose\x2C\n};\n\nmodule.exports.promiseReturningOperators = {\n  every\x2C\n  forEach\x2C\n  reduce\x2C\n  toArray\x2C\n  some\x2C\n  find\x2C\n};\n
code-source-info,0x32d2c6e84708,77,0,10140,C0O0C4O10140,,
code-creation,JS,9,38375,0x32d2c6e849a8,529, node:internal/streams/operators:1:1,0x2f7916678c10,~
code-source-info,0x32d2c6e849a8,77,0,10140,C0O0C158O25C164O47C170O58C176O71C182O81C188O96C194O107C200O131C206O148C212O166C217O233C220O233C225O200C231O217C237O411C240O411C245O282C251O303C256O309C262O335C268O362C273O384C279O511C282O511C287O449C293O472C299O491C305O592C308O592C313O551C319O565C325O647C328O647C333O634C339O712C342O712C346O712C348O789C351O789C356O759C362O872C365O872C370O843C376O855C382O923C385O923C389O923C391O954C394O954C398O954C400O6176C421O6136C423O9939C435O9978C441O9986C447O9996C453O10007C459O10014C465O10022C471O9972C475O10042C487O10082C493O10091C499O10102C505O10112C511O10123C517O10131C523O10076C528O10139,,
tick,0x1017da494,38459,0,0x0,0,0x1086090bc,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,38709,0x32d2c6e84cd0,5, node:internal/abort_controller:1:1,0x2f791667ada0,~
script-source,78,node:internal/abort_controller,'use strict';\n\n// Modeled very closely on the AbortController implementation\n// in https://github.com/mysticatea/abort-controller (MIT license)\n\nconst {\n  ArrayPrototypePush\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseResolve\x2C\n  PromiseWithResolvers\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakRef\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  defineEventHandler\x2C\n  EventTarget\x2C\n  Event\x2C\n  kTrustEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n  kResistStopPropagation\x2C\n  kWeakHandler\x2C\n} = require('internal/event_target');\nconst {\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  converters\x2C\n  createSequenceConverter\x2C\n} = require('internal/webidl');\n\nconst {\n  validateAbortSignal\x2C\n  validateAbortSignalArray\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  kValidateObjectAllowObjects\x2C\n} = require('internal/validators');\n\nconst {\n  DOMException\x2C\n} = internalBinding('messaging');\n\nconst {\n  clearTimeout\x2C\n  setTimeout\x2C\n} = require('timers');\nconst assert = require('internal/assert');\n\nconst {\n  kDeserialize\x2C\n  kTransfer\x2C\n  kTransferList\x2C\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nlet _MessageChannel;\n\nconst kDontThrowSymbol = Symbol('kDontThrowSymbol');\n\n// Loading the MessageChannel and markTransferable have to be done lazily\n// because otherwise we'll end up with a require cycle that ends up with\n// an incomplete initialization of abort_controller.\n\nfunction lazyMessageChannel() {\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\n  return new _MessageChannel();\n}\n\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\nconst dependantSignalsCleanupRegistry = new SafeFinalizationRegistry((signalWeakRef) => {\n  const signal = signalWeakRef.deref();\n  if (signal === undefined) {\n    return;\n  }\n  signal[kDependantSignals].forEach((ref) => {\n    if (ref.deref() === undefined) {\n      signal[kDependantSignals].delete(ref);\n    }\n  });\n});\nconst gcPersistentSignals = new SafeSet();\n\nconst kAborted = Symbol('kAborted');\nconst kReason = Symbol('kReason');\nconst kCloneData = Symbol('kCloneData');\nconst kTimeout = Symbol('kTimeout');\nconst kMakeTransferable = Symbol('kMakeTransferable');\nconst kComposite = Symbol('kComposite');\nconst kSourceSignals = Symbol('kSourceSignals');\nconst kDependantSignals = Symbol('kDependantSignals');\n\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\n  if (depth < 0)\n    return self;\n\n  const opts = ObjectAssign({}\x2C options\x2C {\n    depth: options.depth === null ? null : options.depth - 1\x2C\n  });\n\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\n}\n\nfunction validateThisAbortSignal(obj) {\n  if (obj?.[kAborted] === undefined)\n    throw new ERR_INVALID_THIS('AbortSignal');\n}\n\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\n// presence of the timer alone to keep the AbortSignal from being garbage\n// collected if it otherwise no longer accessible. We also don't want the\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\n// the AbortSignal in a WeakRef and have the setTimeout callback close\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\n// the created timer object. Separately\x2C we add the signal to a\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\n  const timeout = setTimeout(() => {\n    const signal = weakRef.deref();\n    if (signal !== undefined) {\n      gcPersistentSignals.delete(signal);\n      abortSignal(\n        signal\x2C\n        new DOMException(\n          'The operation was aborted due to timeout'\x2C\n          'TimeoutError'));\n    }\n  }\x2C delay);\n  timeout.unref();\n  return timeout;\n}\n\nclass AbortSignal extends EventTarget {\n\n  /**\n   * @param {symbol | undefined} dontThrowSymbol\n   * @param {{\n   *   aborted? : boolean\x2C\n   *   reason? : any\x2C\n   *   transferable? : boolean\x2C\n   *   composite? : boolean\x2C\n   * }} [init]\n   * @private\n   */\n  constructor(dontThrowSymbol = undefined\x2C init = kEmptyObject) {\n    if (dontThrowSymbol !== kDontThrowSymbol) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    super();\n\n    const {\n      aborted = false\x2C\n      reason = undefined\x2C\n      transferable = false\x2C\n      composite = false\x2C\n    } = init;\n    this[kAborted] = aborted;\n    this[kReason] = reason;\n    this[kComposite] = composite;\n    if (transferable) {\n      markTransferMode(this\x2C false\x2C true);\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get aborted() {\n    validateThisAbortSignal(this);\n    return !!this[kAborted];\n  }\n\n  /**\n   * @type {any}\n   */\n  get reason() {\n    validateThisAbortSignal(this);\n    return this[kReason];\n  }\n\n  throwIfAborted() {\n    validateThisAbortSignal(this);\n    if (this[kAborted]) {\n      throw this[kReason];\n    }\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      aborted: this.aborted\x2C\n    }\x2C depth\x2C options);\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {AbortSignal}\n   */\n  static abort(\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    return new AbortSignal(kDontThrowSymbol\x2C { aborted: true\x2C reason });\n  }\n\n  /**\n   * @param {number} delay\n   * @returns {AbortSignal}\n   */\n  static timeout(delay) {\n    validateUint32(delay\x2C 'delay'\x2C false);\n    const signal = new AbortSignal(kDontThrowSymbol);\n    signal[kTimeout] = true;\n    clearTimeoutRegistry.register(\n      signal\x2C\n      setWeakAbortSignalTimeout(new SafeWeakRef(signal)\x2C delay));\n    return signal;\n  }\n\n  /**\n   * @param {AbortSignal[]} signals\n   * @returns {AbortSignal}\n   */\n  static any(signals) {\n    const signalsArray = createSequenceConverter(\n      converters.any\x2C\n    )(signals);\n\n    validateAbortSignalArray(signalsArray\x2C 'signals');\n    const resultSignal = new AbortSignal(kDontThrowSymbol\x2C { composite: true });\n    if (!signalsArray.length) {\n      return resultSignal;\n    }\n    const resultSignalWeakRef = new SafeWeakRef(resultSignal);\n    resultSignal[kSourceSignals] = new SafeSet();\n    for (let i = 0; i < signalsArray.length; i++) {\n      const signal = signalsArray[i];\n      if (signal.aborted) {\n        abortSignal(resultSignal\x2C signal.reason);\n        return resultSignal;\n      }\n      signal[kDependantSignals] ??= new SafeSet();\n      if (!signal[kComposite]) {\n        const signalWeakRef = new SafeWeakRef(signal);\n        resultSignal[kSourceSignals].add(signalWeakRef);\n        signal[kDependantSignals].add(resultSignalWeakRef);\n        dependantSignalsCleanupRegistry.register(resultSignal\x2C signalWeakRef);\n      } else if (!signal[kSourceSignals]) {\n        continue;\n      } else {\n        for (const sourceSignalWeakRef of signal[kSourceSignals]) {\n          const sourceSignal = sourceSignalWeakRef.deref();\n          if (!sourceSignal) {\n            continue;\n          }\n          assert(!sourceSignal.aborted);\n          assert(!sourceSignal[kComposite]);\n\n          if (resultSignal[kSourceSignals].has(sourceSignalWeakRef)) {\n            continue;\n          }\n          resultSignal[kSourceSignals].add(sourceSignalWeakRef);\n          sourceSignal[kDependantSignals].add(resultSignalWeakRef);\n          dependantSignalsCleanupRegistry.register(resultSignal\x2C sourceSignalWeakRef);\n        }\n      }\n    }\n    return resultSignal;\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal &&\n        type === 'abort' &&\n        !this.aborted &&\n        !weak &&\n        size === 1) {\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\n      // listener\x2C then we don't want it to be gc'd while the listener\n      // is attached and the timer still hasn't fired. So\x2C we retain a\n      // strong ref that is held for as long as the listener is registered.\n      gcPersistentSignals.add(this);\n    }\n  }\n\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\n      gcPersistentSignals.delete(this);\n    }\n  }\n\n  [kTransfer]() {\n    validateThisAbortSignal(this);\n    const aborted = this.aborted;\n    if (aborted) {\n      const reason = this.reason;\n      return {\n        data: { aborted\x2C reason }\x2C\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n      };\n    }\n\n    const { port1\x2C port2 } = this[kCloneData];\n    this[kCloneData] = undefined;\n\n    this.addEventListener('abort'\x2C () => {\n      port1.postMessage(this.reason);\n      port1.close();\n    }\x2C { once: true });\n\n    return {\n      data: { port: port2 }\x2C\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    if (!this.aborted) {\n      const { port1\x2C port2 } = lazyMessageChannel();\n      port1.unref();\n      port2.unref();\n      this[kCloneData] = {\n        port1\x2C\n        port2\x2C\n      };\n      return [port2];\n    }\n    return [];\n  }\n\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\n    if (aborted) {\n      this[kAborted] = aborted;\n      this[kReason] = reason;\n      return;\n    }\n\n    port.onmessage = ({ data }) => {\n      abortSignal(this\x2C data);\n      port.close();\n      port.onmessage = undefined;\n    };\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\n    // The unref() has to be called *after* setting the onmessage handler.\n    port.unref();\n  }\n}\n\nfunction ClonedAbortSignal() {\n  return new AbortSignal(kDontThrowSymbol\x2C { transferable: true });\n}\nClonedAbortSignal.prototype[kDeserialize] = () => {};\n\nObjectDefineProperties(AbortSignal.prototype\x2C {\n  aborted: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortSignal'\x2C\n});\n\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\n\n// https://dom.spec.whatwg.org/#dom-abortsignal-abort\nfunction abortSignal(signal\x2C reason) {\n  // 1. If signal is aborted\x2C then return.\n  if (signal[kAborted]) return;\n\n  // 2. Set signal's abort reason to reason if it is given;\n  //    otherwise to a new "AbortError" DOMException.\n  signal[kAborted] = true;\n  signal[kReason] = reason;\n  // 3. Let dependentSignalsToAbort be a new list.\n  const dependentSignalsToAbort = ObjectSetPrototypeOf([]\x2C null);\n  // 4. For each dependentSignal of signal's dependent signals:\n  signal[kDependantSignals]?.forEach((s) => {\n    const dependentSignal = s.deref();\n    // 1. If dependentSignal is not aborted\x2C then:\n    if (dependentSignal && !dependentSignal[kAborted]) {\n      // 1. Set dependentSignal's abort reason to signal's abort reason.\n      dependentSignal[kReason] = reason;\n      dependentSignal[kAborted] = true;\n      // 2. Append dependentSignal to dependentSignalsToAbort.\n      ArrayPrototypePush(dependentSignalsToAbort\x2C dependentSignal);\n    }\n  });\n\n  // 5. Run the abort steps for signal\n  runAbort(signal);\n  // 6. For each dependentSignal of dependentSignalsToAbort\x2C\n  //    run the abort steps for dependentSignal.\n  for (let i = 0; i < dependentSignalsToAbort.length; i++) {\n    const dependentSignal = dependentSignalsToAbort[i];\n    runAbort(dependentSignal);\n  }\n}\n\n// To run the abort steps for an AbortSignal signal\nfunction runAbort(signal) {\n  const event = new Event('abort'\x2C {\n    [kTrustEvent]: true\x2C\n  });\n  signal.dispatchEvent(event);\n}\n\nclass AbortController {\n  #signal;\n\n  /**\n   * @type {AbortSignal}\n   */\n  get signal() {\n    this.#signal ??= new AbortSignal(kDontThrowSymbol);\n    return this.#signal;\n  }\n\n  /**\n   * @param {any} [reason]\n   */\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    abortSignal(this.#signal ??= new AbortSignal(kDontThrowSymbol)\x2C reason);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      signal: this.signal\x2C\n    }\x2C depth\x2C options);\n  }\n\n  static [kMakeTransferable]() {\n    const controller = new AbortController();\n    controller.#signal = new AbortSignal(kDontThrowSymbol\x2C { transferable: true });\n    return controller;\n  }\n}\n\n/**\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\n * @param {AbortSignal} signal\n * @returns {AbortSignal}\n */\nfunction transferableAbortSignal(signal) {\n  if (signal?.[kAborted] === undefined)\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  markTransferMode(signal\x2C false\x2C true);\n  return signal;\n}\n\n/**\n * Creates an AbortController with a transferable AbortSignal\n */\nfunction transferableAbortController() {\n  return AbortController[kMakeTransferable]();\n}\n\n/**\n * @param {AbortSignal} signal\n * @param {any} resource\n * @returns {Promise<void>}\n */\nasync function aborted(signal\x2C resource) {\n  if (signal === undefined) {\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  }\n  validateAbortSignal(signal\x2C 'signal');\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowObjects);\n  if (signal.aborted)\n    return PromiseResolve();\n  const abortPromise = PromiseWithResolvers();\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\n  return abortPromise.promise;\n}\n\nObjectDefineProperties(AbortController.prototype\x2C {\n  signal: kEnumerableProperty\x2C\n  abort: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortController'\x2C\n});\n\nmodule.exports = {\n  AbortController\x2C\n  AbortSignal\x2C\n  ClonedAbortSignal\x2C\n  aborted\x2C\n  transferableAbortSignal\x2C\n  transferableAbortController\x2C\n};\n
code-source-info,0x32d2c6e84cd0,78,0,14330,C0O0C4O14330,,
code-creation,JS,9,39334,0x32d2c6e850d0,1147, node:internal/abort_controller:1:1,0x2f791667b2a8,~
code-source-info,0x32d2c6e850d
code-creation,JS,9,39375,0x32d2c6e85700,11,AbortController node:internal/abort_controller:427:23,0x2f791667be00,~
code-source-info,0x32d2c6e85700,78,12033,12711,C4O12037C10O12711,,
code-creation,Eval,9,39667,0x32d2c6e85788,5, node:internal/streams/end-of-stream:1:1,0x2f791667e578,~
script-source,79,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  Promise\x2C\n  PromisePrototypeThen\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n  SymbolDispose\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateBoolean\x2C\n} = require('internal/validators');\n\nconst {\n  isClosed\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n  isReadableErrored\x2C\n  isWritable\x2C\n  isWritableNodeStream\x2C\n  isWritableStream\x2C\n  isWritableFinished\x2C\n  isWritableErrored\x2C\n  isNodeStream\x2C\n  willEmitClose: _willEmitClose\x2C\n  kIsClosedPromise\x2C\n} = require('internal/streams/utils');\nlet addAbortListener;\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nconst nop = () => {};\n\nfunction eos(stream\x2C options\x2C callback) {\n  if (arguments.length === 2) {\n    callback = options;\n    options = kEmptyObject;\n  } else if (options == null) {\n    options = kEmptyObject;\n  } else {\n    validateObject(options\x2C 'options');\n  }\n  validateFunction(callback\x2C 'callback');\n  validateAbortSignal(options.signal\x2C 'options.signal');\n\n  callback = once(callback);\n\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream\x2C options\x2C callback);\n  }\n\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n\n  const readable = options.readable ?? isReadableNodeStream(stream);\n  const writable = options.writable ?? isWritableNodeStream(stream);\n\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish();\n    }\n  };\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose = (\n    _willEmitClose(stream) &&\n    isReadableNodeStream(stream) === readable &&\n    isWritableNodeStream(stream) === writable\n  );\n\n  let writableFinished = isWritableFinished(stream\x2C false);\n  const onfinish = () => {\n    writableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.readable || readable)) {\n      return;\n    }\n\n    if (!readable || readableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  let readableFinished = isReadableFinished(stream\x2C false);\n  const onend = () => {\n    readableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.writable || writable)) {\n      return;\n    }\n\n    if (!writable || writableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  const onerror = (err) => {\n    callback.call(stream\x2C err);\n  };\n\n  let closed = isClosed(stream);\n\n  const onclose = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\n      if (!isReadableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n\n    callback.call(stream);\n  };\n\n  const onclosed = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    callback.call(stream);\n  };\n\n  const onrequest = () => {\n    stream.req.on('finish'\x2C onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete'\x2C onfinish);\n    if (!willEmitClose) {\n      stream.on('abort'\x2C onclose);\n    }\n    if (stream.req) {\n      onrequest();\n    } else {\n      stream.on('request'\x2C onrequest);\n    }\n  } else if (writable && !wState) { // legacy streams\n    stream.on('end'\x2C onlegacyfinish);\n    stream.on('close'\x2C onlegacyfinish);\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted'\x2C onclose);\n  }\n\n  stream.on('end'\x2C onend);\n  stream.on('finish'\x2C onfinish);\n  if (options.error !== false) {\n    stream.on('error'\x2C onerror);\n  }\n  stream.on('close'\x2C onclose);\n\n  if (closed) {\n    process.nextTick(onclose);\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed);\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false) &&\n    (wState == null || wState.pendingcb === undefined || wState.pendingcb === 0)\n  ) {\n    process.nextTick(onclosed);\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed);\n  } else if ((rState && stream.req && stream.aborted)) {\n    process.nextTick(onclosed);\n  }\n\n  const cleanup = () => {\n    callback = nop;\n    stream.removeListener('aborted'\x2C onclose);\n    stream.removeListener('complete'\x2C onfinish);\n    stream.removeListener('abort'\x2C onclose);\n    stream.removeListener('request'\x2C onrequest);\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onlegacyfinish);\n    stream.removeListener('close'\x2C onlegacyfinish);\n    stream.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onend);\n    stream.removeListener('error'\x2C onerror);\n    stream.removeListener('close'\x2C onclose);\n  };\n\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback;\n      cleanup();\n      endCallback.call(\n        stream\x2C\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n\n  return cleanup;\n}\n\nfunction eosWeb(stream\x2C options\x2C callback) {\n  let isAborted = false;\n  let abort = nop;\n  if (options.signal) {\n    abort = () => {\n      isAborted = true;\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream\x2C args));\n    }\n  };\n  PromisePrototypeThen(\n    stream[kIsClosedPromise].promise\x2C\n    resolverFn\x2C\n    resolverFn\x2C\n  );\n  return nop;\n}\n\nfunction finished(stream\x2C opts) {\n  let autoCleanup = false;\n  if (opts === null) {\n    opts = kEmptyObject;\n  }\n  if (opts?.cleanup) {\n    validateBoolean(opts.cleanup\x2C 'cleanup');\n    autoCleanup = opts.cleanup;\n  }\n  return new Promise((resolve\x2C reject) => {\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\n      if (autoCleanup) {\n        cleanup();\n      }\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nmodule.exports = eos;\nmodule.exports.finished = finished;\n
code-source-info,0x32d2c6e85788,79,0,8484,C0O0C4O8484,,
code-creation,JS,9,40042,0x32d2c6e85930,353, node:internal/streams/end-of-stream:1:1,0x2f791667e850,~
code-source-info,0x32d2c6e85930,79,0,8484,C0O0C120O147C126O158C132O298C138O298C143O208C149O229C154O235C160O261C166O379C172O379C177O336C183O352C189O360C195O497C201O497C206O415C212O438C218O458C224O476C230O825C236O825C241O540C247O552C253O566C259O590C265O610C271O632C277O653C283O667C289O691C295O711C301O733C307O754C313O785C319O803C325O864C326O864C328O992C332O992C334O8426C336O8441C340O8455C347O8472C352O8483,,
tick,0x19d567bbc,40042,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e84af0,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,40209,0x32d2c6e85b70,5, node:internal/streams/compose:1:1,0x2f791667f700,~
script-source,80,node:internal/streams/compose,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n} = primordials;\n\nconst { pipeline } = require('internal/streams/pipeline');\nconst Duplex = require('internal/streams/duplex');\nconst { destroyer } = require('internal/streams/destroy');\nconst {\n  isNodeStream\x2C\n  isReadable\x2C\n  isWritable\x2C\n  isWebStream\x2C\n  isTransformStream\x2C\n  isWritableStream\x2C\n  isReadableStream\x2C\n} = require('internal/streams/utils');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst eos = require('internal/streams/end-of-stream');\n\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  if (streams.length === 1) {\n    return Duplex.from(streams[0]);\n  }\n\n  const orgStreams = ArrayPrototypeSlice(streams);\n\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0]);\n  }\n\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1;\n    streams[idx] = Duplex.from(streams[idx]);\n  }\n\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue;\n    }\n    if (\n      n < streams.length - 1 &&\n      !(\n        isReadable(streams[n]) ||\n        isReadableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be readable'\x2C\n      );\n    }\n    if (\n      n > 0 &&\n      !(\n        isWritable(streams[n]) ||\n        isWritableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be writable'\x2C\n      );\n    }\n  }\n\n  let ondrain;\n  let onfinish;\n  let onreadable;\n  let onclose;\n  let d;\n\n  function onfinished(err) {\n    const cb = onclose;\n    onclose = null;\n\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      d.destroy(err);\n    } else if (!readable && !writable) {\n      d.destroy();\n    }\n  }\n\n  const head = streams[0];\n  const tail = pipeline(streams\x2C onfinished);\n\n  const writable = !!(\n    isWritable(head) ||\n    isWritableStream(head) ||\n    isTransformStream(head)\n  );\n  const readable = !!(\n    isReadable(tail) ||\n    isReadableStream(tail) ||\n    isTransformStream(tail)\n  );\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See\x2C https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!head?.writableObjectMode\x2C\n    readableObjectMode: !!tail?.readableObjectMode\x2C\n    writable\x2C\n    readable\x2C\n  });\n\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function(chunk\x2C encoding\x2C callback) {\n        if (head.write(chunk\x2C encoding)) {\n          callback();\n        } else {\n          ondrain = callback;\n        }\n      };\n\n      d._final = function(callback) {\n        head.end();\n        onfinish = callback;\n      };\n\n      head.on('drain'\x2C function() {\n        if (ondrain) {\n          const cb = ondrain;\n          ondrain = null;\n          cb();\n        }\n      });\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head;\n      const writer = writable.getWriter();\n\n      d._write = async function(chunk\x2C encoding\x2C callback) {\n        try {\n          await writer.ready;\n          writer.write(chunk).catch(() => {});\n          callback();\n        } catch (err) {\n          callback(err);\n        }\n      };\n\n      d._final = async function(callback) {\n        try {\n          await writer.ready;\n          writer.close().catch(() => {});\n          onfinish = callback;\n        } catch (err) {\n          callback(err);\n        }\n      };\n    }\n\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\n\n    eos(toRead\x2C () => {\n      if (onfinish) {\n        const cb = onfinish;\n        onfinish = null;\n        cb();\n      }\n    });\n  }\n\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable'\x2C function() {\n        if (onreadable) {\n          const cb = onreadable;\n          onreadable = null;\n          cb();\n        }\n      });\n\n      tail.on('end'\x2C function() {\n        d.push(null);\n      });\n\n      d._read = function() {\n        while (true) {\n          const buf = tail.read();\n          if (buf === null) {\n            onreadable = d._read;\n            return;\n          }\n\n          if (!d.push(buf)) {\n            return;\n          }\n        }\n      };\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail;\n      const reader = readable.getReader();\n      d._read = async function() {\n        while (true) {\n          try {\n            const { value\x2C done } = await reader.read();\n\n            if (!d.push(value)) {\n              return;\n            }\n\n            if (done) {\n              d.push(null);\n              return;\n            }\n          } catch {\n            return;\n          }\n        }\n      };\n    }\n  }\n\n  d._destroy = function(err\x2C callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError();\n    }\n\n    onreadable = null;\n    ondrain = null;\n    onfinish = null;\n\n    if (isNodeStream(tail)) {\n      destroyer(tail\x2C err);\n    }\n\n    if (onclose === null) {\n      callback(err);\n    } else {\n      onclose = callback;\n    }\n  };\n\n  return d;\n};\n
code-source-info,0x32d2c6e85b70,80,0,5511,C0O0C4O5511,,
code-creation,JS,9,40459,0x32d2c6e85c98,193, node:internal/streams/compose:1:1,0x2f791667f8b8,~
code-source-info,0x32d2c6e85c98,80,0,5511,C0O0C50O25C56O85C59O85C64O72C70O138C73O138C77O138C79O196C82O196C87O182C93O365C96O365C101O243C107O259C113O273C119O287C125O302C131O323C137O343C143O491C146O491C151O410C157O431C162O437C168O464C174O531C177O531C181O531C183O575C187O590C192O5510,,
new,MemoryChunk,0x3a18e6f80000,262144
code-creation,Eval,9,40667,0x32d2c6e85e18,5, node:internal/streams/pipeline:1:1,0x3a18e6f82380,~
script-source,81,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Promise\x2C\n  SymbolAsyncIterator\x2C\n} = primordials;\n\nconst eos = require('internal/streams/end-of-stream');\nconst { SymbolDispose\x2C once } = require('internal/util');\nconst destroyImpl = require('internal/streams/destroy');\nconst Duplex = require('internal/streams/duplex');\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_RETURN_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateAbortSignal\x2C\n} = require('internal/validators');\n\nconst {\n  isIterable\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isNodeStream\x2C\n  isTransformStream\x2C\n  isWebStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n} = require('internal/streams/utils');\nconst { AbortController } = require('internal/abort_controller');\n\nlet PassThrough;\nlet Readable;\nlet addAbortListener;\n\nfunction destroyer(stream\x2C reading\x2C writing) {\n  let finished = false;\n  stream.on('close'\x2C () => {\n    finished = true;\n  });\n\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\n    finished = !err;\n  });\n\n  return {\n    destroy: (err) => {\n      if (finished) return;\n      finished = true;\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\n    }\x2C\n    cleanup\x2C\n  };\n}\n\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\n  return streams.pop();\n}\n\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val;\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val);\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\n}\n\nasync function* fromReadable(val) {\n  Readable ??= require('internal/streams/readable');\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\n}\n\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\n  let error;\n  let onresolve = null;\n\n  const resume = (err) => {\n    if (err) {\n      error = err;\n    }\n\n    if (onresolve) {\n      const callback = onresolve;\n      onresolve = null;\n      callback();\n    }\n  };\n\n  const wait = () => new Promise((resolve\x2C reject) => {\n    if (error) {\n      reject(error);\n    } else {\n      onresolve = () => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      };\n    }\n  });\n\n  writable.on('drain'\x2C resume);\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\n\n  try {\n    if (writable.writableNeedDrain) {\n      await wait();\n    }\n\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait();\n      }\n    }\n\n    if (end) {\n      writable.end();\n      await wait();\n    }\n\n    finish();\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\n  } finally {\n    cleanup();\n    writable.off('drain'\x2C resume);\n  }\n}\n\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable;\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter();\n  try {\n    for await (const chunk of readable) {\n      await writer.ready;\n      writer.write(chunk).catch(() => {});\n    }\n\n    await writer.ready;\n\n    if (end) {\n      await writer.close();\n    }\n\n    finish();\n  } catch (err) {\n    try {\n      await writer.abort(err);\n      finish(err);\n    } catch (err) {\n      finish(err);\n    }\n  }\n}\n\nfunction pipeline(...streams) {\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\n}\n\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0];\n  }\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  const ac = new AbortController();\n  const signal = ac.signal;\n  const outerSignal = opts?.signal;\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = [];\n\n  validateAbortSignal(outerSignal\x2C 'options.signal');\n\n  function abort() {\n    finishImpl(new AbortError(undefined\x2C { cause: outerSignal?.reason }));\n  }\n\n  addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n  let disposable;\n  if (outerSignal) {\n    disposable = addAbortListener(outerSignal\x2C abort);\n  }\n\n  let error;\n  let value;\n  const destroys = [];\n\n  let finishCount = 0;\n\n  function finish(err) {\n    finishImpl(err\x2C --finishCount === 0);\n  }\n\n  function finishOnlyHandleError(err) {\n    finishImpl(err\x2C false);\n  }\n\n  function finishImpl(err\x2C final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err;\n    }\n\n    if (!error && !final) {\n      return;\n    }\n\n    while (destroys.length) {\n      destroys.shift()(error);\n    }\n\n    disposable?.[SymbolDispose]();\n    ac.abort();\n\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn());\n      }\n      process.nextTick(callback\x2C error\x2C value);\n    }\n  }\n\n  let ret;\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i];\n    const reading = i < streams.length - 1;\n    const writing = i > 0;\n    const end = reading || opts?.end !== false;\n    const isLastStream = i === streams.length - 1;\n\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\n        destroys.push(destroy);\n\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (\n          err &&\n          err.name !== 'AbortError' &&\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\n        ) {\n          finishOnlyHandleError(err);\n        }\n      }\n      stream.on('error'\x2C onError);\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error'\x2C onError);\n        });\n      }\n    }\n\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({ signal });\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream;\n      } else {\n        ret = Duplex.from(stream);\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        ret = makeAsyncIterable(ret?.readable);\n      } else {\n        ret = makeAsyncIterable(ret);\n      }\n      ret = stream(ret\x2C { signal });\n\n      if (reading) {\n        if (!isIterable(ret\x2C true)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\n        }\n      } else {\n        PassThrough ??= require('internal/streams/passthrough');\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\x2C\n        });\n\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\n        // second use.\n        const then = ret?.then;\n        if (typeof then === 'function') {\n          finishCount++;\n          then.call(ret\x2C\n                    (val) => {\n                      value = val;\n                      if (val != null) {\n                        pt.write(val);\n                      }\n                      if (end) {\n                        pt.end();\n                      }\n                      process.nextTick(finish);\n                    }\x2C (err) => {\n                      pt.destroy(err);\n                      process.nextTick(finish\x2C err);\n                    }\x2C\n          );\n        } else if (isIterable(ret\x2C true)) {\n          finishCount++;\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret;\n          finishCount++;\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\n        }\n\n        ret = pt;\n\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\n        destroys.push(destroy);\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2;\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C finishOnlyHandleError\x2C { end });\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret;\n        finishCount++;\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\n      } else if (isIterable(ret)) {\n        finishCount++;\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++;\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++;\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\n      } else if (isTransformStream(ret)) {\n        finishCount++;\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else {\n      ret = Duplex.from(stream);\n    }\n  }\n\n  if (signal?.aborted || outerSignal?.aborted) {\n    process.nextTick(abort);\n  }\n\n  return ret;\n}\n\nfunction pipe(src\x2C dst\x2C finish\x2C finishOnlyHandleError\x2C { end }) {\n  let ended = false;\n  dst.on('close'\x2C () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finishOnlyHandleError(new ERR_STREAM_PREMATURE_CLOSE());\n    }\n  });\n\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but "secretly" don't close the underlying fd.\n\n    function endFn() {\n      ended = true;\n      dst.end();\n    }\n\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\n      process.nextTick(endFn);\n    } else {\n      src.once('end'\x2C endFn);\n    }\n  } else {\n    finish();\n  }\n\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\n    const rState = src._readableState;\n    if (\n      err &&\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n      (rState?.ended && !rState.errored && !rState.errorEmitted)\n    ) {\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\n      // this is on the readable side 'end' should still be emitted if the\n      // stream has been ended and no error emitted. This should be allowed in\n      // favor of backwards compatibility. Since the stream is piped to a\n      // destination this should not result in any observable difference.\n      // We don't need to check if this is a writable premature close since\n      // eos will only fail with premature close on the reading side for\n      // duplex streams.\n      src\n        .once('end'\x2C finish)\n        .once('error'\x2C finish);\n    } else {\n      finish(err);\n    }\n  });\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\n}\n\nmodule.exports = { pipelineImpl\x2C pipeline };\n
code-source-info,0x32d2c6e85e18,81,0,12467,C0O0C4O12467,,
code-creation,JS,9,41250,0x32d2c6e85ff8,421, node:internal/streams/pipeline:1:1,0x3a18e6f826b8,~
code-source-info,0x32d2c6e85ff8,81,0,12467,C0O0C153O138C159O154C165O165C171O216C177O216C181O216C183O291C189O291C194O267C200O282C206O337C212O337C216O337C218O389C224O389C228O389C230O625C236O625C241O435C247O449C253O478C258O484C264O510C270O540C276O562C282O588C288O709C294O709C299O664C305O684C311O900C317O900C322O752C328O766C334O780C340O804C346O820C352O841C358O856C364O876C370O963C376O963C381O943C387O1006C388O1006C390O1023C391O1023C393O1037C394O1037C396O12422C403O12441C409O12455C415O12437C420O12466,,
tick,0x19d669474,41250,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,41417,0x32d2c6e86288,5, node:internal/streams/destroy:1:1,0x3a18e6f83a58,~
script-source,82,node:internal/streams/destroy,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kIsDestroyed\x2C\n  isDestroyed\x2C\n  isFinished\x2C\n  isServerRequest\x2C\n  kState\x2C\n  kErrorEmitted\x2C\n  kEmitClose\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kConstructed\x2C\n  kDestroyed\x2C\n  kAutoDestroy\x2C\n  kErrored\x2C\n} = require('internal/streams/utils');\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if (\n    (w && (w[kState] & kDestroyed) !== 0) ||\n    (r && (r[kState] & kDestroyed) !== 0)\n  ) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w[kState] |= kDestroyed;\n  }\n  if (r) {\n    r[kState] |= kDestroyed;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if ((s[kState] & kConstructed) === 0) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w[kState] |= kClosed;\n    }\n    if (r) {\n      r[kState] |= kClosed;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    self._destroy(err || null\x2C onDestroy);\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w[kState] |= kCloseEmitted;\n  }\n  if (r) {\n    r[kState] |= kCloseEmitted;\n  }\n\n  if (\n    (w && (w[kState] & kEmitClose) !== 0) ||\n    (r && (r[kState] & kEmitClose) !== 0)\n  ) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\n    (r && (r[kState] & kErrorEmitted) !== 0)\n  ) {\n    return;\n  }\n\n  if (w) {\n    w[kState] |= kErrorEmitted;\n  }\n  if (r) {\n    r[kState] |= kErrorEmitted;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = r.readable === false;\n    r.endEmitted = r.readable === false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.ended = w.writable === false;\n    w.ending = w.writable === false;\n    w.finished = w.writable === false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\n  ) {\n    return this;\n  }\n\n  if (\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\n    (w && (w[kState] & kAutoDestroy) !== 0)\n  ) {\n    stream.destroy(err);\n  } else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && (w[kState] & kErrored) === 0) {\n      w.errored = err;\n    }\n    if (r && (r[kState] & kErrored) === 0) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r[kState] &= ~kConstructed;\n  }\n  if (w) {\n    w[kState] &= ~kConstructed;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r[kState] |= kConstructed;\n    }\n    if (w) {\n      w[kState] |= kConstructed;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      stream.emit(kConstruct);\n    }\n  }\n\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct\x2C err);\n    });\n  } catch (err) {\n    process.nextTick(onConstruct\x2C err);\n  }\n}\n\nfunction isRequest(stream) {\n  return stream?.setHeader && typeof stream.abort === 'function';\n}\n\nfunction emitCloseLegacy(stream) {\n  stream.emit('close');\n}\n\nfunction emitErrorCloseLegacy(stream\x2C err) {\n  stream.emit('error'\x2C err);\n  process.nextTick(emitCloseLegacy\x2C stream);\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream || isDestroyed(stream)) {\n    return;\n  }\n\n  if (!err && !isFinished(stream)) {\n    err = new AbortError();\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null;\n    stream.destroy(err);\n  } else if (isRequest(stream)) {\n    stream.abort();\n  } else if (isRequest(stream.req)) {\n    stream.req.abort();\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err);\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close();\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\n  } else {\n    process.nextTick(emitCloseLegacy\x2C stream);\n  }\n\n  if (!stream.destroyed) {\n    stream[kIsDestroyed] = true;\n  }\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\x2C\n};\n
code-source-info,0x32d2c6e86288,82,0,7355,C0O0C4O7355,,
code-creation,JS,9,41750,0x32d2c6e86458,326, node:internal/streams/destroy:1:1,0x3a18e6f83cf0,~
code-source-info,0x32d2c6e86458,82,0,7355,C0O0C143O25C148O142C151O142C156O61C162O75C168O104C173O110C179O373C182O373C187O180C193O196C199O211C205O225C211O244C217O254C223O271C229O285C235O296C241O313C247O329C253O343C259O359C265O426C268O426C272O426C274O465C277O465C281O465C283O7265C290O7286C296O7299C302O7312C308O7323C314O7336C320O7280C325O7354,,
code-creation,Eval,9,41875,0x32d2c6e86660,5, node:internal/streams/duplex:1:1,0x3a18e6f84f60,~
script-source,83,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Stream = require('internal/streams/legacy').Stream;\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst destroyImpl = require('internal/streams/destroy');\nconst { kOnConstructed } = require('internal/streams/utils');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  const keys = ObjectKeys(Writable.prototype);\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i];\n    Duplex.prototype[method] ||= Writable.prototype[method];\n  }\n}\n\n// Use the `destroy` method of `Writable`.\nDuplex.prototype.destroy = Writable.prototype.destroy;\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\n\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false;\n\n    if (options.readable === false) {\n      this._readableState.readable = false;\n      this._readableState.ended = true;\n      this._readableState.endEmitted = true;\n    }\n\n    if (options.writable === false) {\n      this._writableState.writable = false;\n      this._writableState.ending = true;\n      this._writableState.ended = true;\n      this._writableState.finished = true;\n    }\n\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  } else {\n    this.allowHalfOpen = true;\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\n  writableHighWaterMark:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\n  writableObjectMode:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\n  writableBuffer:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\n  writableLength:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\n  writableFinished:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\n  writableCorked:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\n  writableEnded:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\n  writableNeedDrain:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\x2C\n  }\x2C\n});\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nDuplex.fromWeb = function(pair\x2C options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\n    pair\x2C\n    options);\n};\n\nDuplex.toWeb = function(duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\n};\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  duplexify ??= require('internal/streams/duplexify');\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0x32d2c6e86660,83,0,6529,C0O0C4O6529,,
code-creation,JS,9,42167,0x32d2c6e86828,698, node:internal/streams/duplex:1:1,0x3a18e6f850d8,~
code-source-info,0x32d2c6e86828,83,0,6529,C0O0C45O1383C50O1409C55O1443C60O1457C65O1497C67O1512C71O1538C77O1538C82O1572C86O1538C88O1598C94O1598C98O1598C100O1653C106O1653C110O1653C112O1722C118O1722C123O1702C129O1789C135O1789C139O1789C141O1853C147O1853C152O1834C158O1889C161O1917C169O1937C174O1889C179O1949C185O1949C190O2007C193O2027C198O2007C203O2093C205O2105C209O2098C214O2139C216O2143C220O2152C223O2159C230O2169C241O2190C248O2199C251O2177C255O2114C260O2080C264O2259C267O2266C275O2295C280O2305C284O2284C288O4280C291O4310C301O4339C309O4401C318O4361C337O4456C345O4518C354O4478C373O4583C381O4645C390O4605C409O4703C417O4765C426O4725C445O4819C453O4881C462O4841C481O4937C489O4999C498O4959C517O5055C525O5117C534O5077C553O5170C561O5232C570O5192C589O5288C597O5350C606O5310C625O5399C630O5426C638O5644C652O4280C657O5921C658O5921C660O6145C667O6160C671O6283C678O6296C682O6394C683O6394C685O6406C692O6418C697O6528,,
tick,0x19d5393fc,42209,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e860d8,0x108609188,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,42292,0x32d2c6e86c50,5, node:internal/streams/legacy:1:1,0x3a18e6f85d10,~
script-source,84,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectOwnKeys\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nStream.prototype.eventNames = function eventNames() {\n  const names = [];\n  for (const key of ReflectOwnKeys(this._events)) {\n    if (typeof this._events[key] === 'function' || (ArrayIsArray(this._events[key]) && this._events[key].length > 0)) {\n      names.push(key);\n    }\n  }\n  return names;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0x32d2c6e86c50,84,0,3251,C0O0C4O3251,,
code-creation,JS,9,42459,0x32d2c6e86d40,128, node:internal/streams/legacy:1:1,0x3a18e6f85e18,~
code-source-info,0x32d2c6e86d40,84,0,3251,C0O0C25O25C31O41C36O65C42O110C45O110C49O110C51O207C59O221C64O179C69O233C72O233C77O275C86O290C90O2104C99O2125C103O3205C110O3224C116O3232C122O3220C127O3250,,
code-creation,Eval,9,43084,0x32d2c6e86e60,5, node:internal/streams/readable:1:1,0x3a18e6f8aa38,~
script-source,85,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolAsyncIterator\x2C\n  SymbolSpecies\x2C\n  TypedArrayPrototypeSet\x2C\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\nconst {\n  SymbolAsyncDispose\x2C\n} = require('internal/util');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\nconst eos = require('internal/streams/end-of-stream');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst { validateObject } = require('internal/validators');\n\nconst FastBuffer = Buffer[SymbolSpecies];\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kDecoderValue = Symbol('kDecoderValue');\nconst kEncodingValue = Symbol('kEncodingValue');\n\nconst kEnded = 1 << 9;\nconst kEndEmitted = 1 << 10;\nconst kReading = 1 << 11;\nconst kSync = 1 << 12;\nconst kNeedReadable = 1 << 13;\nconst kEmittedReadable = 1 << 14;\nconst kReadableListening = 1 << 15;\nconst kResumeScheduled = 1 << 16;\nconst kMultiAwaitDrain = 1 << 17;\nconst kReadingMore = 1 << 18;\nconst kDataEmitted = 1 << 19;\nconst kDefaultUTF8Encoding = 1 << 20;\nconst kDecoder = 1 << 21;\nconst kEncoding = 1 << 22;\nconst kHasFlowing = 1 << 23;\nconst kFlowing = 1 << 24;\nconst kHasPaused = 1 << 25;\nconst kPaused = 1 << 26;\nconst kDataListening = 1 << 27;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(ReadableState.prototype\x2C {\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n  ended: makeBitMapDescriptor(kEnded)\x2C\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\n  reading: makeBitMapDescriptor(kReading)\x2C\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\n  // If true\x2C a maybeReadMore has been scheduled.\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  decoder: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kDecoderValue] = value;\n        this[kState] |= kDecoder;\n      } else {\n        this[kState] &= ~kDecoder;\n      }\n    }\x2C\n  }\x2C\n\n  encoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kEncodingValue] = value;\n        this[kState] |= kEncoding;\n      } else {\n        this[kState] &= ~kEncoding;\n      }\n    }\x2C\n  }\x2C\n\n  flowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\n    }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasFlowing | kFlowing);\n      } else if (value) {\n        this[kState] |= (kHasFlowing | kFlowing);\n      } else {\n        this[kState] |= kHasFlowing;\n        this[kState] &= ~kFlowing;\n      }\n    }\x2C\n  }\x2C\n});\n\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store ReadableState more efficiently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  if (options?.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options?.readableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  this.buffer = [];\n  this.bufferIndex = 0;\n  this.length = 0;\n  this.pipes = [];\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options?.defaultEncoding;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this.defaultEncoding = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n\n  if (options?.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kNeedReadable) !== 0) {\n    maybeReadMore(stream\x2C this);\n  }\n};\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new ReadableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n    });\n  }\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nReadable.prototype[SymbolAsyncDispose] = function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.readableEnded ? null : new AbortError();\n    this.destroy(error);\n  }\n  return new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  debug('push'\x2C chunk);\n\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  debug('unshift'\x2C chunk);\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\n};\n\n\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding ||= state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      if (state.encoding) {\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\n        // the string in the BufferList with the state encoding.\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n      } else {\n        chunk = Buffer.from(chunk\x2C encoding);\n      }\n    }\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n\n  if (!(chunk && chunk.length > 0)) {\n    return canPushMore(state);\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\n  if ((state[kState] & kEndEmitted) !== 0)\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\n    return false;\n  else\n    addChunk(stream\x2C state\x2C chunk\x2C true);\n\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding ||= state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      chunk = Buffer.from(chunk\x2C encoding);\n      encoding = '';\n    }\n  } else if (chunk instanceof Buffer) {\n    encoding = '';\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n    encoding = '';\n  } else if (chunk !== undefined) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n  if (!chunk || chunk.length <= 0) {\n    state[kState] &= ~kReading;\n    maybeReadMore(stream\x2C state);\n\n    return canPushMore(state);\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n    if (chunk.length === 0) {\n      maybeReadMore(stream\x2C state);\n      return canPushMore(state);\n    }\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction canPushMore(state) {\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return (state[kState] & kEnded) === 0 &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n\n    state[kState] |= kDataEmitted;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    if (addToFront) {\n      if (state.bufferIndex > 0) {\n        state.buffer[--state.bufferIndex] = chunk;\n      } else {\n        state.buffer.unshift(chunk); // Slow path\n      }\n    } else {\n      state.buffer.push(chunk);\n    }\n\n    if ((state[kState] & kNeedReadable) !== 0)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const state = this._readableState;\n\n  const decoder = new StringDecoder(enc);\n  state.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  state.encoding = state.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of state.buffer.slice(state.bufferIndex)) {\n    content += decoder.write(data);\n  }\n  state.buffer.length = 0;\n  state.bufferIndex = 0;\n\n  if (content !== '')\n    state.buffer.push(content);\n  state.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\n    return 0;\n  if ((state[kState] & kObjectMode) !== 0)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if ((state[kState] & kFlowing) !== 0 && state.length)\n      return state.buffer[state.bufferIndex].length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state[kState] &= ~kEmittedReadable;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      (state[kState] & kNeedReadable) !== 0 &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       (state[kState] & kEnded) !== 0)) {\n    debug('read: emitReadable');\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = (state[kState] & kNeedReadable) !== 0;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state[kState] |= kReading | kSync;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state[kState] |= kNeedReadable;\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark);\n    } catch (err) {\n      errorOrDestroy(this\x2C err);\n    }\n    state[kState] &= ~kSync;\n\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if ((state[kState] & kReading) === 0)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\n    n = 0;\n  } else {\n    state.length -= n;\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if ((state[kState] & kEnded) === 0)\n      state[kState] |= kNeedReadable;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n  }\n\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\n    state[kState] |= kDataEmitted;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if ((state[kState] & kEnded) !== 0) return;\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\n  if (decoder) {\n    const chunk = decoder.end();\n    if (chunk?.length) {\n      state.buffer.push(chunk);\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    }\n  }\n  state[kState] |= kEnded;\n\n  if ((state[kState] & kSync) !== 0) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state[kState] &= ~kNeedReadable;\n    state[kState] |= kEmittedReadable;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable');\n  state[kState] &= ~kNeedReadable;\n  if ((state[kState] & kEmittedReadable) === 0) {\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\n    state[kState] |= kEmittedReadable;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_');\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\n    stream.emit('readable');\n    state[kState] &= ~kEmittedReadable;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state[kState] |=\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\n    state[kState] |= kReadingMore;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\n         (state.length < state.highWaterMark ||\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state[kState] &= ~kReadingMore;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\n      state[kState] |= kMultiAwaitDrain;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if ((state[kState] & kEndEmitted) !== 0)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state[kState] &= ~kMultiAwaitDrain;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    const ret = dest.write(chunk);\n    debug('dest.write'\x2C ret);\n    if (ret === false) {\n      pause();\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    pause();\n  } else if ((state[kState] & kFlowing) === 0) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      (state[kState] & kDataListening) !== 0) {\n      src.resume();\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    state[kState] |= kDataListening;\n\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n      this.resume();\n    }\n  } else if (ev === 'readable') {\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\n      state[kState] &= ~(kFlowing | kEmittedReadable);\n      debug('on readable');\n      if (state.length) {\n        emitReadable(this);\n      } else if ((state[kState] & kReading) === 0) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const state = this._readableState;\n\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\n    state[kState] &= ~kDataListening;\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n\n  if (self.listenerCount('readable') > 0) {\n    state[kState] |= kReadableListening;\n  } else {\n    state[kState] &= ~kReadableListening;\n  }\n\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state[kState] |= kHasFlowing | kFlowing;\n\n    // Crude way to check if we should resume.\n  } else if ((state[kState] & kDataListening) !== 0) {\n    self.resume();\n  } else if ((state[kState] & kReadableListening) === 0) {\n    state[kState] &= ~(kHasFlowing | kFlowing);\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if ((state[kState] & kFlowing) === 0) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state[kState] |= kHasFlowing;\n    if ((state[kState] & kReadableListening) === 0) {\n      state[kState] |= kFlowing;\n    } else {\n      state[kState] &= ~kFlowing;\n    }\n    resume(this\x2C state);\n  }\n  state[kState] |= kHasPaused;\n  state[kState] &= ~kPaused;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if ((state[kState] & kResumeScheduled) === 0) {\n    state[kState] |= kResumeScheduled;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\n  if ((state[kState] & kReading) === 0) {\n    stream.read(0);\n  }\n\n  state[kState] &= ~kResumeScheduled;\n  stream.emit('resume');\n  flow(stream);\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  const state = this._readableState;\n  debug('call pause');\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n    debug('pause');\n    state[kState] |= kHasFlowing;\n    state[kState] &= ~kFlowing;\n    this.emit('pause');\n  }\n  state[kState] |= kHasPaused | kPaused;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow');\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  stream.on('readable'\x2C next);\n\n  let error;\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\n    callback();\n    callback = nop;\n  });\n\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (error) {\n        throw error;\n      } else if (error === null) {\n        return;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error\x2C err);\n    throw error;\n  } finally {\n    if (\n      (error || options?.destroyOnReturn !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream\x2C null);\n    } else {\n      stream.off('readable'\x2C next);\n      cleanup();\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    __proto__: null\x2C\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  readableDidRead: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\x2C\n  }\x2C\n\n  readableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      );\n    }\x2C\n  }\x2C\n\n  readableHighWaterMark: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\x2C\n  }\x2C\n\n  readableBuffer: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState?.buffer;\n    }\x2C\n  }\x2C\n\n  readableFlowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\x2C\n  }\x2C\n\n  readableLength: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\x2C\n  }\x2C\n\n  readableObjectMode: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\x2C\n  }\x2C\n\n  readableEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.errored : null;\n    }\x2C\n  }\x2C\n\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._readableState ? this._readableState.closed : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\x2C\n  }\x2C\n\n  readableEnded: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\x2C\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null\x2C\n    get() {\n      return this.pipes.length;\n    }\x2C\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null\x2C\n    get() {\n      return (this[kState] & kPaused) !== 0;\n    }\x2C\n    set(value) {\n      this[kState] |= kHasPaused;\n      if (value) {\n        this[kState] |= kPaused;\n      } else {\n        this[kState] &= ~kPaused;\n      }\n    }\x2C\n  }\x2C\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let idx = state.bufferIndex;\n  let ret;\n\n  const buf = state.buffer;\n  const len = buf.length;\n\n  if ((state[kState] & kObjectMode) !== 0) {\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if ((state[kState] & kDecoder) !== 0) {\n      ret = '';\n      while (idx < len) {\n        ret += buf[idx];\n        buf[idx++] = null;\n      }\n    } else if (len - idx === 0) {\n      ret = Buffer.alloc(0);\n    } else if (len - idx === 1) {\n      ret = buf[idx];\n      buf[idx++] = null;\n    } else {\n      ret = Buffer.allocUnsafe(state.length);\n\n      let i = 0;\n      while (idx < len) {\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\n        i += buf[idx].length;\n        buf[idx++] = null;\n      }\n    }\n  } else if (n < buf[idx].length) {\n    // `slice` is the same for buffers and strings.\n    ret = buf[idx].slice(0\x2C n);\n    buf[idx] = buf[idx].slice(n);\n  } else if (n === buf[idx].length) {\n    // First chunk is a perfect match.\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if ((state[kState] & kDecoder) !== 0) {\n    ret = '';\n    while (idx < len) {\n      const str = buf[idx];\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n        buf[idx++] = null;\n      } else {\n        if (n === buf.length) {\n          ret += str;\n          buf[idx++] = null;\n        } else {\n          ret += str.slice(0\x2C n);\n          buf[idx] = str.slice(n);\n        }\n        break;\n      }\n    }\n  } else {\n    ret = Buffer.allocUnsafe(n);\n\n    const retLen = n;\n    while (idx < len) {\n      const data = buf[idx];\n      if (n > data.length) {\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n        n -= data.length;\n        buf[idx++] = null;\n      } else {\n        if (n === data.length) {\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n          buf[idx++] = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\n        }\n        break;\n      }\n    }\n  }\n\n  if (idx === len) {\n    state.buffer.length = 0;\n    state.bufferIndex = 0;\n  } else if (idx > 1024) {\n    state.buffer.splice(0\x2C idx);\n    state.bufferIndex = 0;\n  } else {\n    state.bufferIndex = idx;\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable');\n  if ((state[kState] & kEndEmitted) === 0) {\n    state[kState] |= kEnded;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT');\n\n  // Check that we didn't get one last unshift.\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\n    state[kState] |= kEndEmitted;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nReadable.fromWeb = function(readableStream\x2C options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(\n    readableStream\x2C\n    options);\n};\n\nReadable.toWeb = function(streamReadable\x2C options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\n    streamReadable\x2C\n    options);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\x2C\n  }).wrap(src);\n};\n
code-source-info,0x32d2c6e86e60,85,0,51284,C0O0C4O51284,,
code-creation,JS,9,45209,0x32d2c6e87648,2585, node:internal/streams/readable:1:1,0x3a18e6f8be38,~
code-source-info,0x32d2c6e
tick,0x19d62a8b0,45334,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e86886,0x108609188,0x108608e30,0x32d2c6e860d8,0x108609188,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
tick,0x19d62a40c,45375,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e86886,0x108609188,0x108608e30,0x32d2c6e860d8,0x108609188,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,45500,0x32d2c6e883e8,5, node:internal/streams/add-abort-signal:1:1,0x3a18e6f8f9b8,~
script-source,86,node:internal/streams/add-abort-signal,'use strict';\n\nconst {\n  SymbolDispose\x2C\n} = require('internal/util');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  isNodeStream\x2C\n  isWebStream\x2C\n  kControllerErrorFunction\x2C\n} = require('internal/streams/utils');\n\nconst eos = require('internal/streams/end-of-stream');\nlet addAbortListener;\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal\x2C name) => {\n  if (typeof signal !== 'object' ||\n       !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n};\n\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\n  validateAbortSignal(signal\x2C 'signal');\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\n};\n\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream;\n  }\n  const onAbort = isNodeStream(stream) ?\n    () => {\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\n    } :\n    () => {\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\n    };\n  if (signal.aborted) {\n    onAbort();\n  } else {\n    addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n    const disposable = addAbortListener(signal\x2C onAbort);\n    eos(stream\x2C disposable[SymbolDispose]);\n  }\n  return stream;\n};\n
code-source-info,0x32d2c6e883e8,86,0,1734,C0O0C4O1734,,
code-creation,JS,9,45584,0x32d2c6e884e8,169, node:internal/streams/add-abort-signal:1:1,0x3a18e6f8fb30,~
code-source-info,0x32d2c6e884e8,86,0,1734,C0O0C40O44C46O44C51O25C57O139C63O139C68O81C74O102C79O108C85O239C91O239C96O178C102O194C108O209C114O287C120O287C124O287C126O334C127O334C129O563C133O563C135O725C138O732C147O755C151O1071C154O1078C163O1111C168O1733,,
code-creation,Eval,9,45667,0x32d2c6e88648,5, node:internal/streams/state:1:1,0x3a18e6f90308,~
script-source,87,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\nconst { validateInteger } = require('internal/validators');\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\n// TODO (fix): For some reason Windows CI fails with bigger hwm.\nlet defaultHighWaterMarkBytes = process.platform === 'win32' ? 16 * 1024 : 64 * 1024;\nlet defaultHighWaterMarkObjectMode = 16;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\n}\n\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\n  validateInteger(value\x2C 'value'\x2C 0);\n  if (objectMode) {\n    defaultHighWaterMarkObjectMode = value;\n  } else {\n    defaultHighWaterMarkBytes = value;\n  }\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n  setDefaultHighWaterMark\x2C\n};\n
code-source-info,0x32d2c6e88648,87,0,1440,C0O0C4O1440,,
code-creation,JS,9,45750,0x32d2c6e88750,151, node:internal/streams/state:1:1,0x3a18e6f90450,~
code-source-info,0x32d2c6e88750,87,0,1440,C0O0C45O25C51O38C57O100C60O100C65O80C71O167C74O167C79O193C84O141C90O307C97O316C114O299C116O390C118O390C120O1344C127O1365C133O1385C139O1412C145O1359C150O1439,,
code-creation,Eval,9,45875,0x32d2c6e88888,5, node:string_decoder:1:1,0x3a18e6f90f00,~
script-source,88,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSubarray\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  kIncompleteCharactersStart\x2C\n  kIncompleteCharactersEnd\x2C\n  kMissingBytes\x2C\n  kBufferedBytes\x2C\n  kEncodingField\x2C\n  kSize\x2C\n  decode\x2C\n  flush\x2C\n} = internalBinding('string_decoder');\nconst {\n  kIsEncodingSymbol\x2C\n  encodingsMap\x2C\n  normalizeEncoding: _normalizeEncoding\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_UNKNOWN_ENCODING\x2C\n} = require('internal/errors').codes;\nconst isEncoding = Buffer[kIsEncodingSymbol];\n\nconst kNativeDecoder = Symbol('kNativeDecoder');\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n/**\n * Normalize encoding notation\n * @param {string} enc\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\n *           | "base64" | "latin1" | "base64url"}\n * @throws {TypeError} Throws an error when encoding is invalid\n */\nfunction normalizeEncoding(enc) {\n  const nenc = _normalizeEncoding(enc);\n  if (nenc === undefined) {\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\n      throw new ERR_UNKNOWN_ENCODING(enc);\n    return enc;\n  }\n  return nenc;\n}\n\n/**\n * StringDecoder provides an interface for efficiently splitting a series of\n * buffers into a series of JS strings without breaking apart multi-byte\n * characters.\n * @param {string} [encoding=utf-8]\n */\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  this[kNativeDecoder] = Buffer.alloc(kSize);\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\n}\n\n/**\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\n * @param {string | Buffer | TypedArray | DataView} buf\n * @returns {string}\n * @throws {TypeError} Throws when buf is not in one of supported types\n */\nStringDecoder.prototype.write = function write(buf) {\n  if (typeof buf === 'string')\n    return buf;\n  if (!ArrayBufferIsView(buf))\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buf);\n  if (!this[kNativeDecoder]) {\n    throw new ERR_INVALID_THIS('StringDecoder');\n  }\n  return decode(this[kNativeDecoder]\x2C buf);\n};\n\n/**\n * Returns any remaining input stored in the internal buffer as a string.\n * After end() is called\x2C the stringDecoder object can be reused for new\n * input.\n * @param {string | Buffer | TypedArray | DataView} [buf]\n * @returns {string}\n */\nStringDecoder.prototype.end = function end(buf) {\n  let ret = '';\n  if (buf !== undefined)\n    ret = this.write(buf);\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\n    ret += flush(this[kNativeDecoder]);\n  return ret;\n};\n\n/* Everything below this line is undocumented legacy stuff. */\n/**\n *\n * @param {string | Buffer | TypedArray | DataView} buf\n * @param {number} offset\n * @returns {string}\n */\nStringDecoder.prototype.text = function text(buf\x2C offset) {\n  this[kNativeDecoder][kMissingBytes] = 0;\n  this[kNativeDecoder][kBufferedBytes] = 0;\n  return this.write(buf.slice(offset));\n};\n\nObjectDefineProperties(StringDecoder.prototype\x2C {\n  lastChar: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\n                                         kIncompleteCharactersStart\x2C\n                                         kIncompleteCharactersEnd);\n    }\x2C\n  }\x2C\n  lastNeed: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n  lastTotal: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kBufferedBytes] +\n             this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n});\n\nexports.StringDecoder = StringDecoder;\n
code-source-info,0x32d2c6e88888,88,0,5141,C0O0C4O5141,,
code-creation,JS,9,46125,0x32d2c6e88a70,356, node:string_decoder:1:1,0x3a18e6f910f8,~
code-source-info,0x32d2c6e88a70,88,0,5141,C0O0C70O1159C76O1180C81O1206C86O1216C92O1282C95O1282C100O1271C106O1452C109O1452C114O1311C120O1341C126O1369C132O1386C138O1404C144O1422C150O1431C156O1441C162O1577C165O1577C170O1497C175O1518C181O1553C187O1683C190O1683C195O1709C200O1613C206O1637C212O1657C218O1736C223O1742C226O1736C228O1787C231O1787C235O1787C237O3137C246O3153C250O3801C259O3815C263O4202C272O4217C276O4416C286O4441C291O4514C305O4746C310O4819C324O4902C329O4975C343O4379C348O5102C350O5124C355O5140,,
tick,0x19d5393fc,46125,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e87976,0x108609188,0x108608e30,0x32d2c6e86886,0x108609188,0x108608e30,0x32d2c6e860d8,0x108609188,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,46250,0x32d2c6e88cc8,5, node:internal/streams/from:1:1,0x3a18e6f921c8,~
script-source,89,node:internal/streams/from,'use strict';\n\nconst {\n  PromisePrototypeThen\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n} = primordials;\nconst { Buffer } = require('buffer');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n} = require('internal/errors').codes;\n\nfunction from(Readable\x2C iterable\x2C opts) {\n  let iterator;\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true\x2C\n      ...opts\x2C\n      read() {\n        this.push(iterable);\n        this.push(null);\n      }\x2C\n    });\n  }\n\n  let isAsync;\n  if (iterable?.[SymbolAsyncIterator]) {\n    isAsync = true;\n    iterator = iterable[SymbolAsyncIterator]();\n  } else if (iterable?.[SymbolIterator]) {\n    isAsync = false;\n    iterator = iterable[SymbolIterator]();\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\n  }\n\n\n  const readable = new Readable({\n    objectMode: true\x2C\n    highWaterMark: 1\x2C\n    // TODO(ronag): What options should be allowed?\n    ...opts\x2C\n  });\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false;\n  let isAsyncValues = false;\n\n  readable._read = function() {\n    if (!reading) {\n      reading = true;\n\n      if (isAsync) {\n        nextAsync();\n      } else if (isAsyncValues) {\n        nextSyncWithAsyncValues();\n      } else {\n        nextSyncWithSyncValues();\n      }\n    }\n  };\n\n  readable._destroy = function(error\x2C cb) {\n    PromisePrototypeThen(\n      close(error)\x2C\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\n      (e) => process.nextTick(cb\x2C e || error)\x2C\n    );\n  };\n\n  async function close(error) {\n    const hadError = (error !== undefined) && (error !== null);\n    const hasThrow = typeof iterator.throw === 'function';\n    if (hadError && hasThrow) {\n      const { value\x2C done } = await iterator.throw(error);\n      await value;\n      if (done) {\n        return;\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return();\n      await value;\n    }\n  }\n\n  // There are a lot of duplication here\x2C it's done on purpose for performance\n  // reasons - avoid await when not needed.\n\n  function nextSyncWithSyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value &&\n          typeof value.then === 'function') {\n          return changeToAsyncValues(value);\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function changeToAsyncValues(value) {\n    isAsyncValues = true;\n\n    try {\n      const res = await value;\n\n      if (res === null) {\n        reading = false;\n        throw new ERR_STREAM_NULL_VALUES();\n      }\n\n      if (readable.push(res)) {\n        nextSyncWithAsyncValues();\n        return;\n      }\n\n      reading = false;\n    } catch (err) {\n      readable.destroy(err);\n    }\n  }\n\n  async function nextSyncWithAsyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        const res = (value &&\n          typeof value.then === 'function') ?\n          await value :\n          value;\n\n        if (res === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(res)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function nextAsync() {\n    for (;;) {\n      try {\n        const { value\x2C done } = await iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n  return readable;\n}\n\nmodule.exports = from;\n
code-source-info,0x32d2c6e88cc8,89,0,4321,C0O0C4O4321,,
code-creation,JS,9,46459,0x32d2c6e88d98,97, node:internal/streams/from:1:1,0x3a18e6f92300,~
code-source-info,0x32d2c6e88d98,89,0,4321,C0O0C32O25C38O49C44O72C50O124C53O124C58O113C64O206C67O206C72O232C77O154C83O178C89O4298C91O4313C96O4320,,
code-creation,JS,9,46542,0x32d2c6e88eb8,33,makeBitMapDescriptor node:internal/streams/readable:129:30,0x3a18e6f8bea0,~
code-source-info,0x32d2c6e88eb8,85,3800,3993,C0O3800C9O3810C14O3846C22O3896C32O3991,,
code-creation,Eval,9,47042,0x32d2c6e88f58,5, node:internal/streams/writable:1:1,0x3a18e6f9a9f0,~
script-source,90,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst {\n  SymbolAsyncDispose\x2C\n} = require('internal/util');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_MULTIPLE_CALLBACK\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kWriteCbValue = Symbol('kWriteCbValue');\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\nconst kBufferedValue = Symbol('kBufferedValue');\n\nconst kSync = 1 << 9;\nconst kFinalCalled = 1 << 10;\nconst kNeedDrain = 1 << 11;\nconst kEnding = 1 << 12;\nconst kFinished = 1 << 13;\nconst kDecodeStrings = 1 << 14;\nconst kWriting = 1 << 15;\nconst kBufferProcessing = 1 << 16;\nconst kPrefinished = 1 << 17;\nconst kAllBuffers = 1 << 18;\nconst kAllNoop = 1 << 19;\nconst kOnFinished = 1 << 20;\nconst kHasWritable = 1 << 21;\nconst kWritable = 1 << 22;\nconst kCorked = 1 << 23;\nconst kDefaultUTF8Encoding = 1 << 24;\nconst kWriteCb = 1 << 25;\nconst kExpectWriteCb = 1 << 26;\nconst kAfterWriteTickInfo = 1 << 27;\nconst kAfterWritePending = 1 << 28;\nconst kBuffered = 1 << 29;\nconst kEnded = 1 << 30;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(WritableState.prototype\x2C {\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n\n  // if _final has been called.\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\n\n  // drain event flag.\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\n\n  // At the start of calling end()\n  ending: makeBitMapDescriptor(kEnding)\x2C\n\n  // When end() has been called\x2C and returned.\n  ended: makeBitMapDescriptor(kEnded)\x2C\n\n  // When 'finish' is emitted.\n  finished: makeBitMapDescriptor(kFinished)\x2C\n\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\n\n  // A flag to see when we're in the middle of a write.\n  writing: makeBitMapDescriptor(kWriting)\x2C\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\n\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n\n  // Should close be emitted on destroy. Defaults to true.\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  // This is/should be a cold path.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasWritable | kWritable);\n      } else if (value) {\n        this[kState] |= (kHasWritable | kWritable);\n      } else {\n        this[kState] |= kHasWritable;\n        this[kState] &= ~kWritable;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  writecb: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\n    set(value) {\n      this[kWriteCbValue] = value;\n      if (value) {\n        this[kState] |= kWriteCb;\n      } else {\n        this[kState] &= ~kWriteCb;\n      }\n    }\x2C\n  }\x2C\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  afterWriteTickInfo: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\n    set(value) {\n      this[kAfterWriteTickInfoValue] = value;\n      if (value) {\n        this[kState] |= kAfterWriteTickInfo;\n      } else {\n        this[kState] &= ~kAfterWriteTickInfo;\n      }\n    }\x2C\n  }\x2C\n\n  buffered: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\n    set(value) {\n      this[kBufferedValue] = value;\n      if (value) {\n        this[kState] |= kBuffered;\n      } else {\n        this[kState] &= ~kBuffered;\n      }\n    }\x2C\n  }\x2C\n\n});\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store WritableState more efficiently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\n\n  if (options?.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options?.writableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options ? options.defaultEncoding : null;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this[kState] &= ~kDefaultUTF8Encoding;\n    this[kDefaultEncodingValue] = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n}\n\nfunction resetBuffer(state) {\n  state[kBufferedValue] = null;\n  state.bufferedIndex = 0;\n  state[kState] |= kAllBuffers | kAllNoop;\n  state[kState] &= ~kBuffered;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  __proto__: null\x2C\n  get() {\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\n  }\x2C\n});\n\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kWriting) === 0) {\n    clearBuffer(stream\x2C this);\n  }\n\n  if ((this[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C this);\n  }\n};\n\nfunction Writable(options) {\n  if (!(this instanceof Writable))\n    return new Writable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    // Skip uncommon events...\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._writableState = new WritableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (cb == null || typeof cb !== 'function') {\n    cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  }\n\n  if ((state[kState] & kObjectMode) === 0) {\n    if (!encoding) {\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (typeof chunk === 'string') {\n      if ((state[kState] & kDecodeStrings) !== 0) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isArrayBufferView(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk);\n    }\n  }\n\n  let err;\n  if ((state[kState] & kEnding) !== 0) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  if (encoding != null && typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  const state = this._writableState;\n\n  state[kState] |= kCorked;\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.corked) {\n      state[kState] &= ~kCorked;\n    }\n\n    if ((state[kState] & kWriting) === 0)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n\n  state.length += len;\n\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\n    if ((state[kState] & kBuffered) === 0) {\n      state[kState] |= kBuffered;\n      state[kBufferedValue] = [];\n    }\n\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\n      state[kState] &= ~kAllBuffers;\n    }\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\n      state[kState] &= ~kAllNoop;\n    }\n  } else {\n    state.writelen = len;\n    if (callback !== nop) {\n      state.writecb = callback;\n    }\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state[kState] &= ~kSync;\n  }\n\n  const ret = state.length < state.highWaterMark || state.length === 0;\n\n  if (!ret) {\n    state[kState] |= kNeedDrain;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  if (cb !== nop) {\n    state.writecb = cb;\n  }\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\n  if ((state[kState] & kDestroyed) !== 0)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state[kState] &= ~kSync;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n\n  if ((state[kState] & kExpectWriteCb) === 0) {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  const sync = (state[kState] & kSync) !== 0;\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\n\n  state.writecb = null;\n  state[kState] &= ~(kWriting | kExpectWriteCb);\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if ((state[kState] & kErrored) === 0) {\n      state[kErroredValue] = er;\n      state[kState] |= kErrored;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if ((state[kState] & kBuffered) !== 0) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\n\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (cb === nop) {\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\n          state[kState] |= kAfterWritePending;\n        } else {\n          state.pendingcb--;\n          if ((state[kState] & kEnding) !== 0) {\n            finishMaybe(stream\x2C state\x2C true);\n          }\n        }\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\n                 state[kAfterWriteTickInfoValue].cb === cb) {\n        state[kAfterWriteTickInfoValue].count++;\n      } else if (needTick) {\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\n      } else {\n        state.pendingcb--;\n        if ((state[kState] & kEnding) !== 0) {\n          finishMaybe(stream\x2C state\x2C true);\n        }\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state[kState] &= ~kAfterWriteTickInfo;\n  state[kAfterWriteTickInfoValue] = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  state[kState] &= ~kAfterWritePending;\n\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\n  if (needDrain) {\n    state[kState] &= ~kNeedDrain;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb(null);\n  }\n\n  if ((state[kState] & kDestroyed) !== 0) {\n    errorBuffer(state);\n  }\n\n  if ((state[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C state\x2C true);\n  }\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if ((state[kState] & kWriting) !== 0) {\n    return;\n  }\n\n  if ((state[kState] & kBuffered) !== 0) {\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n      const { chunk\x2C callback } = state[kBufferedValue][n];\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n      state.length -= len;\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\n    }\n  }\n\n\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered | kConstructed)) !==\n      (kBuffered | kConstructed)) {\n    return;\n  }\n\n  const objectMode = (state[kState] & kObjectMode) !== 0;\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state[kState] |= kBufferProcessing;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state[kState] &= ~kBufferProcessing;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk != null) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if ((state[kState] & kCorked) !== 0) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state[kState] |= kEnding;\n    finishMaybe(this\x2C state\x2C true);\n    state[kState] |= kEnded;\n  } else if ((state[kState] & kFinished) !== 0) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err) {\n      process.nextTick(cb\x2C err);\n    } else if ((state[kState] & kErrored) !== 0) {\n      process.nextTick(cb\x2C state[kErroredValue]);\n    } else if ((state[kState] & kFinished) !== 0) {\n      process.nextTick(cb\x2C null);\n    } else {\n      state[kState] |= kOnFinished;\n      state[kOnFinishedValue] ??= [];\n      state[kOnFinishedValue].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\n    (state[kState] & (\n      kEnding |\n          kDestroyed |\n          kConstructed |\n          kFinished |\n          kWriting |\n          kErrorEmitted |\n          kCloseEmitted |\n          kErrored |\n          kBuffered\n    )) === (kEnding | kConstructed) && state.length === 0);\n}\n\nfunction onFinish(stream\x2C state\x2C err) {\n  if ((state[kState] & kPrefinished) !== 0) {\n    errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n  state.pendingcb--;\n  if (err) {\n    callFinishedCallbacks(state\x2C err);\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\n  } else if (needFinish(state)) {\n    state[kState] |= kPrefinished;\n    stream.emit('prefinish');\n    // Backwards compat. Don't check state.sync here.\n    // Some streams assume 'finish' will be emitted\n    // asynchronously relative to _final callback.\n    state.pendingcb++;\n    process.nextTick(finish\x2C stream\x2C state);\n  }\n}\n\nfunction prefinish(stream\x2C state) {\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\n    return;\n  }\n\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\n    state[kState] |= kFinalCalled | kSync;\n    state.pendingcb++;\n\n    try {\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\n    } catch (err) {\n      onFinish(stream\x2C state\x2C err);\n    }\n\n    state[kState] &= ~kSync;\n  } else {\n    state[kState] |= kFinalCalled | kPrefinished;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++;\n        process.nextTick((stream\x2C state) => {\n          if (needFinish(state)) {\n            finish(stream\x2C state);\n          } else {\n            state.pendingcb--;\n          }\n        }\x2C stream\x2C state);\n      } else if (needFinish(state)) {\n        state.pendingcb++;\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state[kState] |= kFinished;\n\n  callFinishedCallbacks(state\x2C null);\n\n  stream.emit('finish');\n\n  if ((state[kState] & kAutoDestroy) !== 0) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nfunction callFinishedCallbacks(state\x2C err) {\n  if ((state[kState] & kOnFinished) === 0) {\n    return;\n  }\n\n  const onfinishCallbacks = state[kOnFinishedValue];\n  state[kOnFinishedValue] = null;\n  state[kState] &= ~kOnFinished;\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](err);\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (!this._writableState) return;\n\n      if (value) this._writableState[kState] |= kDestroyed;\n      else this._writableState[kState] &= ~kDestroyed;\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false &&\n        (w[kState] & (kEnding | kEnded | kDestroyed | kErrored)) === 0;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  writableFinished: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kFinished) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableObjectMode: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableBuffer: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state && state.getBuffer();\n    }\x2C\n  }\x2C\n\n  writableEnded: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kEnding) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableNeedDrain: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\n    }\x2C\n  }\x2C\n\n  writableHighWaterMark: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state?.highWaterMark;\n    }\x2C\n  }\x2C\n\n  writableCorked: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.corked : 0;\n    }\x2C\n  }\x2C\n\n  writableLength: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state?.length;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.errored : null;\n    }\x2C\n  }\x2C\n\n  writableAborted: {\n    __proto__: null\x2C\n    get: function() {\n      const state = this._writableState;\n      return (\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\n        (state[kState] & kFinished) === 0\n      );\n    }\x2C\n  }\x2C\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nWritable.fromWeb = function(writableStream\x2C options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(\n    writableStream\x2C\n    options);\n};\n\nWritable.toWeb = function(streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\n};\n\nWritable.prototype[SymbolAsyncDispose] = function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.writableFinished ? null : new AbortError();\n    this.destroy(error);\n  }\n  return new Promise((resolve\x2C reject) =>\n    eos(this\x2C (err) => (err && err.name !== 'AbortError' ? reject(err) : resolve(null)))\x2C\n  );\n};\n
tick,0x19d5f1aa4,48542,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e86892,0x108609188,0x108608e30,0x32d2c6e860d8,0x108609188,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
tick,0x19d66946c,48542,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e86892,0x108609188,0x108608e30,0x32d2c6e860d8,0x108609188,0x108608e30,0x32d2c6e85cd3,0x108609188,0x108608e30,0x32d2c6e84afe,0x108609188,0x108608e30,0x32d2c6e84145,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-source-info,0x32d2c6e88f58,90,0,33592,C0O0C4O33592,,
code-creation,JS,9,48584,0x32d2c6e89618,2202, node:internal/streams/writable:1:1,0x3a18e6f9bd98,~
code-source-info,0x32d2c6e
code-creation,JS,9,48875,0x32d2c6e8a1f0,33,makeBitMapDescriptor node:internal/streams/writable:128:30,0x3a18e6f9be58,~
code-source-info,0x32d2c6e8a1f0,90,3881,4074,C0O3881C9O3891C14O3927C22O3977C32O4072,,
code-creation,Eval,9,49125,0x32d2c6e8a290,5, node:stream/promises:1:1,0x3a18e6fa3368,~
script-source,91,node:stream/promises,'use strict';\n\nconst {\n  ArrayPrototypePop\x2C\n  Promise\x2C\n} = primordials;\n\nconst {\n  isIterable\x2C\n  isNodeStream\x2C\n  isWebStream\x2C\n} = require('internal/streams/utils');\n\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\nconst { finished } = require('internal/streams/end-of-stream');\n\nrequire('stream');\n\nfunction pipeline(...streams) {\n  return new Promise((resolve\x2C reject) => {\n    let signal;\n    let end;\n    const lastArg = streams[streams.length - 1];\n    if (lastArg && typeof lastArg === 'object' &&\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\n      const options = ArrayPrototypePop(streams);\n      signal = options.signal;\n      end = options.end;\n    }\n\n    pl(streams\x2C (err\x2C value) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(value);\n      }\n    }\x2C { signal\x2C end });\n  });\n}\n\nmodule.exports = {\n  finished\x2C\n  pipeline\x2C\n};\n
code-source-info,0x32d2c6e8a290,91,0,917,C0O0C4O917,,
code-creation,JS,9,49167,0x32d2c6e8a380,125, node:stream/promises:1:1,0x3a18e6fa3490,~
code-source-info,0x32d2c6e8a380,91,0,917,C0O0C28O25C34O46C40O130C43O130C48O83C54O97C60O113C66O195C69O195C74O188C80O254C83O254C88O241C93O298C96O298C100O871C107O892C113O904C119O886C124O916,,
code-creation,Eval,9,49334,0x32d2c6e8a4a0,5, node:internal/streams/transform:1:1,0x3a18e6fa4250,~
script-source,92,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a "filter"\x2C\n// but that's not a great name for it\x2C since that implies a thing where\n// some bits pass through\x2C and others are simply ignored.  (That would\n// be a valid example of a transform\x2C of course.)\n//\n// While the output is causally related to the input\x2C it's not a\n// necessarily symmetric or synchronous transformation.  For example\x2C\n// a zlib stream might take multiple plain-text writes()\x2C and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\n// internally\x2C and returns false if there's a lot of pending writes\n// buffered up.  When you call read()\x2C that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream\x2C the written data is placed in a buffer.  When\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks\x2C then the first\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\n//\n// This way\x2C back-pressure is actually determined by the reading side\x2C\n// since _read has to be called to start processing a new chunk.  However\x2C\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example\x2C imagine a stream where every byte of input is\n// interpreted as an integer from 0-255\x2C and then results in that many\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\n// 1kb of data being output.  In this case\x2C you could write a very small\n// amount of input\x2C and end up with a very large amount of output.  In\n// such a pathological inflating mechanism\x2C there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However\x2C even in such a pathological case\x2C only a single written chunk\n// would be consumed\x2C and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nmodule.exports = Transform;\nconst {\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst Duplex = require('internal/streams/duplex');\nconst { getHighWaterMark } = require('internal/streams/state');\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\nObjectSetPrototypeOf(Transform\x2C Duplex);\n\nconst kCallback = Symbol('kCallback');\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options\x2C\n      highWaterMark: null\x2C\n      readableHighWaterMark\x2C\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\n    };\n  }\n\n  Duplex.call(this\x2C options);\n\n  // We have implemented the _read method\x2C and done the other things\n  // that Readable wants before the first _read call\x2C so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this[kCallback] = null;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  // When the writable side finishes\x2C then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish'\x2C prefinish);\n}\n\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er\x2C data) => {\n      if (er) {\n        if (cb) {\n          cb(er);\n        } else {\n          this.destroy(er);\n        }\n        return;\n      }\n\n      if (data != null) {\n        this.push(data);\n      }\n      this.push(null);\n      if (cb) {\n        cb();\n      }\n    });\n  } else {\n    this.push(null);\n    if (cb) {\n      cb();\n    }\n  }\n}\n\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this);\n  }\n}\n\nTransform.prototype._final = final;\n\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\n};\n\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\n  const rState = this._readableState;\n  const wState = this._writableState;\n  const length = rState.length;\n\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (val != null) {\n      this.push(val);\n    }\n\n    if (rState.ended) {\n      // If user has called this.push(null) we have to\n      // delay the callback to properly propagate the new\n      // state.\n      process.nextTick(callback);\n    } else if (\n      wState.ended || // Backwards compat.\n      length === rState.length || // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback();\n    } else {\n      this[kCallback] = callback;\n    }\n  });\n};\n\nTransform.prototype._read = function() {\n  if (this[kCallback]) {\n    const callback = this[kCallback];\n    this[kCallback] = null;\n    callback();\n  }\n};\n
code-source-info,0x32d2c6e8a4a0,92,0,7123,C0O0C4O7123,,
code-creation,JS,9,49667,0x32d2c6e8a5c0,202, node:internal/streams/transform:1:1,0x3a18e6fa4398,~
code-source-info,0x32d2c6e8a5c0,92,0,7123,C0O0C39O3508C44O3532C49O3558C51O3573C55O3628C58O3628C63O3654C68O3596C74O3677C77O3677C81O3677C83O3742C86O3742C91O3721C97O3777C100O3808C108O3826C113O3777C118O3838C124O3838C129O3898C132O3898C136O3898C138O6031C141O6041C148O6058C152O6068C155O6078C164O6099C168O6199C171O6209C180O6226C184O6968C187O6978C196O6994C201O7122,,
code-creation,Eval,9,49750,0x32d2c6e8a758,5, node:internal/streams/passthrough:1:1,0x3a18e6fa4e70,~
script-source,93,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = PassThrough;\n\nconst Transform = require('internal/streams/transform');\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(PassThrough\x2C Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this\x2C options);\n}\n\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  cb(null\x2C chunk);\n};\n
code-source-info,0x32d2c6e8a758,93,0,1762,C0O0C4O1762,,
code-creation,JS,9,49834,0x32d2c6e8a808,84, node:internal/streams/passthrough:1:1,0x3a18e6fa4f58,~
code-source-info,0x32d2c6e8a808,93,0,1762,C0O0C14O1288C19O1328C21O1343C25O1377C28O1377C32O1377C34O1416C37O1449C45O1470C50O1416C55O1482C61O1482C66O1673C69O1685C78O1706C83O1761,,
tick,0x1012afce4,49875,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e84422,0x108609188,0x108608e30,0x32d2c6e82e0d,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,49959,0x32d2c6e8a8f8,5, node:internal/streams/duplexpair:1:1,0x3a18e6fa56d0,~
script-source,94,node:internal/streams/duplexpair,'use strict';\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { Duplex } = require('stream');\nconst assert = require('internal/assert');\n\nconst kCallback = Symbol('Callback');\nconst kInitOtherSide = Symbol('InitOtherSide');\n\nclass DuplexSide extends Duplex {\n  #otherSide = null;\n\n  constructor(options) {\n    super(options);\n    this[kCallback] = null;\n    this.#otherSide = null;\n  }\n\n  [kInitOtherSide](otherSide) {\n    // Ensure this can only be set once\x2C to enforce encapsulation.\n    if (this.#otherSide === null) {\n      this.#otherSide = otherSide;\n    } else {\n      assert(this.#otherSide === null);\n    }\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    assert(this.#otherSide !== null);\n    assert(this.#otherSide[kCallback] === null);\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this.#otherSide.push(chunk);\n      this.#otherSide[kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this.#otherSide.on('end'\x2C callback);\n    this.#otherSide.push(null);\n  }\n}\n\nfunction duplexPair(options) {\n  const side0 = new DuplexSide(options);\n  const side1 = new DuplexSide(options);\n  side0[kInitOtherSide](side1);\n  side1[kInitOtherSide](side0);\n  return [ side0\x2C side1 ];\n}\nmodule.exports = duplexPair;\n
code-source-info,0x32d2c6e8a8f8,94,0,1373,C0O0C4O1373,,
code-creation,JS,9,50000,0x32d2c6e8aa00,155, node:internal/streams/duplexpair:1:1,0x3a18e6fa5880,~
code-source-info,0x32d2c6e8aa00,94,0,1373,C0O0C26O24C31O69C34O69C39O58C44O103C47O103C51O103C53O150C56O150C60O150C62O193C65O193C69O193C88O244C96O384C145O219C147O1344C149O1359C154O1372,,
code-creation,JS,9,50042,0x32d2c6e8ab28,11,DuplexSide node:internal/streams/duplexpair:12:33,0x3a18e6fa5af8,~
code-source-info,0x32d2c6e8ab28,94,251,1136,C3O268C10O1136,,
code-creation,Eval,9,50417,0x32d2c6e8aba8,5, node:internal/stream_base_commons:1:1,0x3a18e6faf1c0,~
script-source,95,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  ErrnoException\x2C\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateFunction } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kBoundSession = Symbol('kBoundSession');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  const stream = this.handle[owner_symbol];\n\n  if (status < 0) {\n    const error = new ErrnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function') {\n      return this.callback(error);\n    }\n\n    return stream.destroy(error);\n  }\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n  const stream = this[owner_symbol];\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(new ErrnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\n  // and will not deliver any more read events after this point.\n  // (equivalently\x2C it should have called readStop on itself already).\n  // Some streams may be reset and explicitly started again with a call\n  // to readStart\x2C such as TTY.\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n    if (this[kBoundSession]) this[kBoundSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n};\n
code-source-info,0x32d2c6e8aba8,95,0,7070,C0O0C4O7070,,
code-creation,JS,9,50709,0x32d2c6e8ade8,526, node:internal/stream_base_commons:1:1,0x3a18e6faf488,~
code-source-info,0x32d2c6e8ade8,95,0,7070,C0O0C133O25C139O34C144O79C147O79C152O68C158O121C161O121C166O106C172O275C175O275C180O159C186O172C192O193C198O215C204O232C210O254C216O326C219O326C224O315C230O379C233O379C238O359C244O432C247O432C252O463C257O415C263O536C266O536C271O483C277O495C283O514C289O589C292O589C297O572C303O646C306O646C311O629C317O694C320O694C325O673C331O749C334O749C338O749C340O795C343O795C347O795C349O844C352O844C356O844C358O888C361O888C365O888C367O929C370O929C374O929C376O971C379O971C383O971C385O1004C388O1004C393O1037C406O1038C412O1004C414O1101C417O1101C421O1101C423O1139C426O1139C430O1139C432O1179C435O1179C439O1179C441O6865C448O6886C454O6903C460O6919C466O6935C472O6955C478O6972C484O6988C490O6999C496O7011C502O7031C508O7042C514O7055C520O6880C525O7069,,
tick,0x1016ed570,51000,0,0x0,2,0x1086090bc,0x108608e30,0x32d2c6e83155,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,Eval,9,51167,0x32d2c6e8b130,5, node:internal/perf/observe:1:1,0x3a18e6fb2880,~
script-source,96,node:internal/perf/observe,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  ObjectDefineProperties\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\n  }\x2C\n  installGarbageCollectionTracking\x2C\n  observerCounts\x2C\n  removeGarbageCollectionTracking\x2C\n  setupObservers\x2C\n} = internalBinding('performance');\n\nconst {\n  isPerformanceEntry\x2C\n  createPerformanceNodeEntry\x2C\n} = require('internal/perf/performance_entry');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n  validateInternalField\x2C\n} = require('internal/validators');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  deprecate\x2C\n  lazyDOMException\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  setImmediate\x2C\n} = require('timers');\n\nconst { inspect } = require('util');\n\nconst { now } = require('internal/perf/utils');\n\nconst kBuffer = Symbol('kBuffer');\nconst kDispatch = Symbol('kDispatch');\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\n\nconst kDeprecationMessage =\n  'Custom PerformanceEntry accessors are deprecated. ' +\n  'Please use the detail property.';\n\nconst kTypeSingle = 0;\nconst kTypeMultiple = 1;\n\nlet gcTrackingInstalled = false;\n\nconst kSupportedEntryTypes = ObjectFreeze([\n  'dns'\x2C\n  'function'\x2C\n  'gc'\x2C\n  'http'\x2C\n  'http2'\x2C\n  'mark'\x2C\n  'measure'\x2C\n  'net'\x2C\n  'resource'\x2C\n]);\n\n// Performance timeline entry Buffers\nlet markEntryBuffer = [];\nlet measureEntryBuffer = [];\nlet resourceTimingBuffer = [];\nlet resourceTimingSecondaryBuffer = [];\nconst kPerformanceEntryBufferWarnSize = 1e6;\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\n// Default buffer limit for resource timing entries.\nlet resourceTimingBufferSizeLimit = 250;\nlet dispatchBufferFull;\nlet resourceTimingBufferFullPending = false;\n\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\n  'mark': 'performance.clearMarks'\x2C\n  'measure': 'performance.clearMeasures'\x2C\n});\nconst kWarnedEntryTypes = new SafeMap();\n\nconst kObservers = new SafeSet();\nconst kPending = new SafeSet();\nlet isPending = false;\n\nfunction queuePending() {\n  if (isPending) return;\n  isPending = true;\n  setImmediate(() => {\n    isPending = false;\n    const pendings = ArrayFrom(kPending.values());\n    kPending.clear();\n    for (const pending of pendings)\n      pending[kDispatch]();\n  });\n}\n\nfunction getObserverType(type) {\n  switch (type) {\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\n  }\n}\n\nfunction maybeDecrementObserverCounts(entryTypes) {\n  for (const type of entryTypes) {\n    const observerType = getObserverType(type);\n\n    if (observerType !== undefined) {\n      observerCounts[observerType]--;\n\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\n          observerCounts[observerType] === 0) {\n        removeGarbageCollectionTracking();\n        gcTrackingInstalled = false;\n      }\n    }\n  }\n}\n\nfunction maybeIncrementObserverCount(type) {\n  const observerType = getObserverType(type);\n\n  if (observerType !== undefined) {\n    observerCounts[observerType]++;\n    if (!gcTrackingInstalled &&\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\n      installGarbageCollectionTracking();\n      gcTrackingInstalled = true;\n    }\n  }\n}\n\nconst kSkipThrow = Symbol('kSkipThrow');\nconst performanceObserverSorter = (first\x2C second) => {\n  return first.startTime - second.startTime;\n};\n\nclass PerformanceObserverEntryList {\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\n  }\n\n  getEntries() {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    return ArrayPrototypeSlice(this[kBuffer]);\n  }\n\n  getEntriesByType(type) {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('type');\n    }\n    type = `${type}`;\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.entryType === type);\n  }\n\n  getEntriesByName(name\x2C type = undefined) {\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    name = `${name}`;\n    if (type != null /** not nullish */) {\n      return ArrayPrototypeFilter(\n        this[kBuffer]\x2C\n        (entry) => entry.name === name && entry.entryType === type);\n    }\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.name === name);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\n  getEntries: kEnumerableProperty\x2C\n  getEntriesByType: kEnumerableProperty\x2C\n  getEntriesByName: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserverEntryList'\x2C\n  }\x2C\n});\n\nclass PerformanceObserver {\n  #buffer = [];\n  #entryTypes = new SafeSet();\n  #type;\n  #callback;\n\n  constructor(callback) {\n    validateFunction(callback\x2C 'callback');\n    this.#callback = callback;\n  }\n\n  observe(options = kEmptyObject) {\n    validateObject(options\x2C 'options');\n    const {\n      entryTypes\x2C\n      type\x2C\n      buffered\x2C\n    } = { ...options };\n    if (entryTypes === undefined && type === undefined)\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\n    if (entryTypes != null && type != null)\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\n                                      entryTypes\x2C\n                                      'options.entryTypes can not set with ' +\n                                      'options.type together');\n\n    switch (this.#type) {\n      case undefined:\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\n        if (type !== undefined) this.#type = kTypeSingle;\n        break;\n      case kTypeSingle:\n        if (entryTypes !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to multiple observations'\x2C\n            'InvalidModificationError');\n        break;\n      case kTypeMultiple:\n        if (type !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to single observation'\x2C\n            'InvalidModificationError');\n        break;\n    }\n\n    if (this.#type === kTypeMultiple) {\n      if (!ArrayIsArray(entryTypes)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.entryTypes'\x2C\n          'string[]'\x2C\n          entryTypes);\n      }\n      maybeDecrementObserverCounts(this.#entryTypes);\n      this.#entryTypes.clear();\n      for (let n = 0; n < entryTypes.length; n++) {\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\n          this.#entryTypes.add(entryTypes[n]);\n          maybeIncrementObserverCount(entryTypes[n]);\n        }\n      }\n    } else {\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\n        return;\n      this.#entryTypes.add(type);\n      maybeIncrementObserverCount(type);\n      if (buffered) {\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\n        kPending.add(this);\n        if (kPending.size)\n          queuePending();\n      }\n    }\n\n    if (this.#entryTypes.size)\n      kObservers.add(this);\n    else\n      this.disconnect();\n  }\n\n  disconnect() {\n    maybeDecrementObserverCounts(this.#entryTypes);\n    kObservers.delete(this);\n    kPending.delete(this);\n    this.#buffer = [];\n    this.#entryTypes.clear();\n    this.#type = undefined;\n  }\n\n  takeRecords() {\n    const list = this.#buffer;\n    this.#buffer = [];\n    return list;\n  }\n\n  static get supportedEntryTypes() {\n    return kSupportedEntryTypes;\n  }\n\n  [kMaybeBuffer](entry) {\n    if (!this.#entryTypes.has(entry.entryType))\n      return;\n    ArrayPrototypePush(this.#buffer\x2C entry);\n    kPending.add(this);\n    if (kPending.size)\n      queuePending();\n  }\n\n  [kDispatch]() {\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\n\n    this.#callback(entryList\x2C this);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserver ${inspect({\n      connected: kObservers.has(this)\x2C\n      pending: kPending.has(this)\x2C\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\n      buffer: this.#buffer\x2C\n    }\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\n  observe: kEnumerableProperty\x2C\n  disconnect: kEnumerableProperty\x2C\n  takeRecords: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserver'\x2C\n  }\x2C\n});\n\n/**\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\n *\n * Add the performance entry to the interested performance observer's queue.\n */\nfunction enqueue(entry) {\n  if (!isPerformanceEntry(entry))\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\n\n  for (const obs of kObservers) {\n    obs[kMaybeBuffer](entry);\n  }\n}\n\n/**\n * Add the user timing entry to the global buffer.\n */\nfunction bufferUserTiming(entry) {\n  const entryType = entry.entryType;\n  let buffer;\n  if (entryType === 'mark') {\n    buffer = markEntryBuffer;\n  } else if (entryType === 'measure') {\n    buffer = measureEntryBuffer;\n  } else {\n    return;\n  }\n\n  ArrayPrototypePush(buffer\x2C entry);\n  const count = buffer.length;\n\n  if (count > kPerformanceEntryBufferWarnSize &&\n    !kWarnedEntryTypes.has(entryType)) {\n    kWarnedEntryTypes.set(entryType\x2C true);\n    // No error code for this since it is a Warning\n    // eslint-disable-next-line no-restricted-syntax\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\n                        `${count} ${entryType} entries added to the global ` +\n                        'performance entry buffer. Use ' +\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\n                        'clear the buffer.');\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\n    w.entryType = entryType;\n    w.count = count;\n    process.emitWarning(w);\n  }\n}\n\n/**\n * Add the resource timing entry to the global buffer if the buffer size is not\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\n * performance object.\n *\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\n */\nfunction bufferResourceTiming(entry) {\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\n    return;\n  }\n\n  if (!resourceTimingBufferFullPending) {\n    resourceTimingBufferFullPending = true;\n    setImmediate(() => {\n      while (resourceTimingSecondaryBuffer.length > 0) {\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\n        dispatchBufferFull('resourcetimingbufferfull');\n\n        // Calculate the number of items to be pushed to the global buffer.\n        const numbersToPreserve = MathMax(\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\n          0\x2C\n        );\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\n        }\n\n        if (excessNumberBefore <= excessNumberAfter) {\n          resourceTimingSecondaryBuffer = [];\n        }\n      }\n      resourceTimingBufferFullPending = false;\n    });\n  }\n\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\n}\n\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\nfunction setResourceTimingBufferSize(maxSize) {\n  // If the maxSize parameter is less than resource timing buffer current\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\n  // performance entry buffer.\n  resourceTimingBufferSizeLimit = maxSize;\n}\n\nfunction setDispatchBufferFull(fn) {\n  dispatchBufferFull = fn;\n}\n\nfunction clearEntriesFromBuffer(type\x2C name) {\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\n    return;\n  }\n\n  if (type === 'mark') {\n    markEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\n  } else if (type === 'measure') {\n    measureEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\n  } else {\n    resourceTimingBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\n  }\n}\n\nfunction filterBufferMapByNameAndType(name\x2C type) {\n  let bufferList;\n  if (type === 'mark') {\n    bufferList = markEntryBuffer;\n  } else if (type === 'measure') {\n    bufferList = measureEntryBuffer;\n  } else if (type === 'resource') {\n    bufferList = resourceTimingBuffer;\n  } else if (type !== undefined) {\n    // Unrecognized type;\n    return [];\n  } else {\n    bufferList = [];\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\n  }\n  if (name !== undefined) {\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\n  } else if (type !== undefined) {\n    bufferList = ArrayPrototypeSlice(bufferList);\n  }\n\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\n}\n\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\n  const entry =\n    createPerformanceNodeEntry(\n      name\x2C\n      type\x2C\n      startTime\x2C\n      duration\x2C\n      details);\n\n  if (details !== undefined) {\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\n    // properties directly off the entry. Those have been\n    // moved into the details property. The existing accessors\n    // are still included but are deprecated.\n    entry[kDeprecatedFields] = new SafeMap();\n\n    const detailKeys = ObjectKeys(details);\n    const props = {};\n    for (let n = 0; n < detailKeys.length; n++) {\n      const key = detailKeys[n];\n      entry[kDeprecatedFields].set(key\x2C details[key]);\n      props[key] = {\n        configurable: true\x2C\n        enumerable: true\x2C\n        get: deprecate(() => {\n          return entry[kDeprecatedFields].get(key);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n        set: deprecate((value) => {\n          entry[kDeprecatedFields].set(key\x2C value);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n      };\n    }\n    ObjectDefineProperties(entry\x2C props);\n  }\n\n  enqueue(entry);\n}\n\nsetupObservers(observerCallback);\n\nfunction hasObserver(type) {\n  const observerType = getObserverType(type);\n  return observerCounts[observerType] > 0;\n}\n\n\nfunction startPerf(target\x2C key\x2C context = {}) {\n  target[key] = {\n    ...context\x2C\n    startTime: now()\x2C\n  };\n}\n\nfunction stopPerf(target\x2C key\x2C context = {}) {\n  const ctx = target[key];\n  if (!ctx) {\n    return;\n  }\n  const startTime = ctx.startTime;\n  const entry = createPerformanceNodeEntry(\n    ctx.name\x2C\n    ctx.type\x2C\n    startTime\x2C\n    now() - startTime\x2C\n    { ...ctx.detail\x2C ...context.detail }\x2C\n  );\n  enqueue(entry);\n}\n\nmodule.exports = {\n  PerformanceObserver\x2C\n  PerformanceObserverEntryList\x2C\n  enqueue\x2C\n  hasObserver\x2C\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n  startPerf\x2C\n  stopPerf\x2C\n\n  bufferUserTiming\x2C\n  bufferResourceTiming\x2C\n  setResourceTimingBufferSize\x2C\n  setDispatchBufferFull\x2C\n};\n
code-source-info,0x32d2c6e8b130,96,0,16722,C0O0C4O16722,,
code-creation,JS,9,51917,0x32d2c6e8b598,1215, node:internal/perf/observe:1:1,0x3a18e6fb2e70,~
code-source-info,0x32d2c6e8b
code-creation,JS,9,51959,0x32d2c6e8bc40,50,PerformanceObserver node:internal/perf/observe:243:27,0x3a18e6fb38f8,~
code-source-info,0x32d2c6e8bc40,96,5962,9533,C3O5976C13O5996C20O5996C34O6013C43O6022C49O9533,,
code-creation,Eval,9,52209,0x32d2c6e8bcf8,5, node:internal/perf/performance_entry:1:1,0x3a18e6fb4da0,~
script-source,97,node:internal/perf/performance_entry,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { validateInternalField } = require('internal/validators');\n\nconst { inspect } = require('util');\n\nconst kName = Symbol('PerformanceEntry.Name');\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\nconst kDuration = Symbol('PerformanceEntry.Duration');\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\nconst kSkipThrow = Symbol('kSkipThrow');\n\nfunction isPerformanceEntry(obj) {\n  return obj?.[kName] !== undefined;\n}\n\nclass PerformanceEntry {\n  constructor(\n    skipThrowSymbol = undefined\x2C\n    name = undefined\x2C\n    type = undefined\x2C\n    start = undefined\x2C\n    duration = undefined\x2C\n  ) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kName] = name;\n    this[kEntryType] = type;\n    this[kStartTime] = start;\n    this[kDuration] = duration;\n  }\n\n  get name() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return this[kName];\n  }\n\n  get entryType() {\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\n    return this[kEntryType];\n  }\n\n  get startTime() {\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\n    return this[kStartTime];\n  }\n\n  get duration() {\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\n    return this[kDuration];\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n    };\n  }\n}\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  entryType: kEnumerableProperty\x2C\n  startTime: kEnumerableProperty\x2C\n  duration: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n}\n\n/**\n * Node.js specific extension to PerformanceEntry.\n */\nclass PerformanceNodeEntry extends PerformanceEntry {\n  get detail() {\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\n    return this[kDetail];\n  }\n\n  toJSON() {\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n      detail: this[kDetail]\x2C\n    };\n  }\n}\n\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n\n  entry[kDetail] = detail;\n\n  return entry;\n}\n\nmodule.exports = {\n  createPerformanceEntry\x2C\n  PerformanceEntry\x2C\n  isPerformanceEntry\x2C\n  PerformanceNodeEntry\x2C\n  createPerformanceNodeEntry\x2C\n  kSkipThrow\x2C\n};\n
code-source-info,0x32d2c6e8bcf8,97,0,3272,C0O0C4O3272,,
code-creation,JS,9,52375,0x32d2c6e8bee8,371, node:internal/perf/performance_entry:1:1,0x3a18e6fb4f18,~
code-source-info,0x32d2c6e8bee8,97,0,3272,C0O0C53O25C58O51C63O134C66O134C71O94C76O100C82O231C85O231C90O194C95O206C100O291C103O291C108O265C114O344C117O344C122O332C128O376C131O376C135O376C137O428C140O428C144O428C146O485C149O485C153O485C155O541C158O541C162O541C164O594C167O594C171O594C173O652C176O652C180O652C211O1595C239O750C241O2067C244O2107C256O2128C262O2162C268O2196C274O2229C280O2260C284O2067C292O2518C320O2483C322O3114C329O3135C335O3161C341O3181C347O3203C353O3227C359O3257C365O3129C370O3271,,
tick,0x19d567bbc,52375,0,0x0,3,0x1086090bc,0x108608e30,0x32d2c6e8b761,0x108609188,0x108608e30,0x32d2c6e83155,0x108609188,0x108608e30,0x1f5524e76a23,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,JS,9,52584,0x32d2c6e8c170,34,protoGetter node:net:878:21,0x2f7916672de0,~
code-source-info,0x32d2c6e8c170,75,23048,23210,C0O23069C8O23097C13O23108C20O23193C27O23069C33O23209,,
code-creation,JS,9,52750,0x32d2c6e8c450,926,Socket node:net:366:16,0x2f7916672c28,~
code-source-info,0x32d2c6e8c
code-creation,JS,9,52875,0x32d2c6e8cb60,504,Duplex node:internal/streams/duplex:64:16,0x3a18e6f85140,~
code-source-info,0x32d2c6e8cb
code-creation,JS,9,52959,0x32d2c6e8cf30,254,Readable node:internal/streams/readable:320:18,0x3a18e6f8bf78,~
code-source-info,0x32d2c6e8cf30,85,10109,11126,C0O10109C9O10123C16O10134C21O10160C28O10167C33O10189C34O10193C51O10223C56O10245C61O10266C66O10286C71O10311C77O10206C81O10548C99O10570C104O10568C108O10614C112O10652C120O10679C123O10700C127O10690C131O10730C139O10760C142O10784C146O10774C150O10817C158O10849C161O10875C165O10865C169O10903C175O10917C182O10940C190O10917C195O10962C202O10969C210O10969C216O10993C219O11002C226O11028C233O11040C246O11040C253O11125,,
code-creation,JS,9,53000,0x32d2c6e8d108,18,Stream node:internal/streams/legacy:11:16,0x3a18e6f85e80,~
code-source-info,0x32d2c6e8d108,84,145,178,C0O156C5O159C10O159C17O177,,
code-creation,JS,9,53084,0x32d2c6e8d278,383,ReadableState node:internal/streams/readable:262:23,0x3a18e6f8bf20,~
code-source-info,0x32d2c6e8d278,85,7984,9928,C0O8133C2O8138C7O8148C12O8161C14O8159C20O8176C22O8174C28O8191C30O8189C33O8146C37O8323C44O8334C53O8352C56O8357C62O8368C67O8365C71O8384C82O8407C91O8433C94O8438C100O8449C105O8446C109O8607C114O8628C118O8642C133O8642C142O8715C147O8715C151O8626C155O8750C157O8762C161O8770C162O8787C166O8794C167O8806C171O8813C173O8824C177O8892C181O8915C191O8936C194O8941C200O8952C205O8949C209O9041C213O9064C223O9087C226O9092C232O9103C237O9100C241O9340C248O9347C256O9368C261O9415C268O9445C273O9464C276O9469C282O9480C287O9477C293O9511C298O9522C303O9522C310O9557C312O9578C318O9612C325O9618C330O9612C331O9770C332O9793C336O9804C343O9815C352O9833C354O9852C357O9874C364O9848C369O9846C373O9913C377O9903C382O9927,,
code-creation,JS,9,53125,0x32d2c6e8d538,98,getHighWaterMark node:internal/streams/state:33:26,0x3a18e6f905c0,~
code-source-info,0x32d2c6e8d538,87,934,1342,C0O988C12O988C18O1039C21O1062C26O1067C33O1095C38O1121C47O1143C56O1188C69O1194C74O1188C75O1242C80O1249C84O1264C85O1291C88O1328C93O1298C97O1340,,
code-creation,JS,9,53167,0x32d2c6e8d638,26,highWaterMarkFrom node:internal/streams/state:15:27,0x3a18e6f904b8,~
code-source-info,0x32d2c6e8d638,87,421,562,C0O471C7O503C15O523C19O541C25O560,,
code-creation,JS,9,53167,0x32d2c6e8d6d0,22,get node:internal/streams/readable:132:8,0x3a18e6f92df0,~
code-source-info,0x32d2c6e8d6d0,85,3849,3890,C0O3854C4O3867C6O3866C12O3875C17O3882C21O3888,,
code-creation,JS,9,53209,0x32d2c6e8d768,15,getDefaultHighWaterMark node:internal/streams/state:20:33,0x3a18e6f90510,~
code-source-info,0x32d2c6e8d768,87,596,694,C0O613C6O633C12O666C14O692,,
code-creation,JS,9,53250,0x32d2c6e8d8d8,412,WritableState node:internal/streams/writable:304:23,0x3a18e6f9bed8,~
code-source-info,0x32d2c6e8d8d
code-creation,JS,9,53292,0x32d2c6e8dba8,22,get node:internal/streams/writable:131:8,0x3a18e6f9f100,~
code-source-info,0x32d2c6e8dba8,90,3930,3971,C0O3935C4O3948C6O3947C12O3956C17O3963C21O3969,,
code-creation,JS,9,53334,0x32d2c6e8dc60,65,resetBuffer node:internal/streams/writable:364:21,0x3a18e6f9bf30,~
code-source-info,0x32d2c6e8dc60,90,11666,11810,C0O11678C2O11684C6O11700C10O11710C11O11730C15O11737C17O11743C26O11754C31O11768C33O11766C39O11751C43O11780C46O11786C52O11798C54O11797C59O11794C64O11809,,
code-creation,JS,9,53334,0x32d2c6e8dd38,50,set node:internal/streams/readable:133:8,0x3a18e6f92e48,~
code-source-info,0x32d2c6e8dd38,85,3899,3985,C0O3915C4O3926C8O3931C17O3942C20O3939C26O3958C30O3963C39O3974C44O3971C49O3984,,
code-creation,JS,9,53375,0x32d2c6e8de40,131,createHandle node:net:178:22,0x2f7916672808,~
code-source-info,0x32d2c6e8de40,75,4938,5300,C0O4958C13O4958C18O5001C23O5001C28O5024C30O5033C35O5051C42O5074C46O5086C49O5100C57O5109C60O5123C67O5058C72O5137C73O5145C75O5154C80O5171C87O5193C91O5205C94O5218C102O5227C105O5240C112O5178C117O5254C118O5262C125O5268C130O5262,,
code-creation,JS,9,53459,0x32d2c6e8df70,14,set node:net:2411:6,0x2f7916675248,~
code-source-info,0x32d2c6e8df70,75,67275,67308,C0O67281C2O67293C7O67302C13O67306,,
code-creation,JS,9,53500,0x32d2c6e8dff8,8,get node:net:2410:6,0x2f79166751f0,~
code-source-info,0x32d2c6e8dff8,75,67240,67268,C0O67245C2O67257C4O67256C7O67266,,
tick,0x19d5f1f3c,53542,0,0x0,0,0x32d2c6e8c613,0x1f5524e76a87,0x1f5524e77257,0x32d2c6e81f53,0x32d2c6e81e18,0x108609188,0x108608e30,0x2f1cca486c5e,0x2f1cca48a5d8
code-creation,JS,9,53584,0x32d2c6e8e120,315,Readable.on node:internal/streams/readable:1127:33,0x3a18e6f8d4b0,~
code-source-info,0x32d2c6e8e
code-creation,JS,9,53625,0x32d2c6e8e3b0,133,initSocketHandle node:net:322:26,0x2f7916672b78,~
code-source-info,0x32d2c6e8e3b0,75,8262,8840,C0O8278C5O8278C9O8294C10O8309C14O8395C20O8415C27O8423C32O8437C36O8454C43O8471C45O8469C49O8489C51O8494C57O8532C62O8513C66O8511C70O8561C72O8566C74O8565C78O8580C80O8616C82O8621C84O8620C88O8640C90O8681C94O8699C99O8704C105O8737C106O8744C107O8753C112O8767C116O8797C121O8805C126O8805C132O8839,,
new,MemoryChunk,0x257667340000,262144
code-creation,JS,9,53709,0x32d2c6e8e578,155,undestroy node:internal/streams/destroy:173:19,0x3a18e6f83fb8,~
code-source-info,0x32d2c6e8e578,82,3192,3864,C0O3214C5O3247C10O3266C14O3279C15O3293C19O3305C20O3314C24O3327C25O3342C29O3355C30O3367C34O3380C35O3390C39O3402C40O3417C44O3430C45O3440C49O3465C57O3461C61O3506C69O3502C73O3533C77O3546C78O3560C82O3572C83O3584C87O3597C88O3606C92O3619C93O3634C97O3647C98O3657C102O3669C103O3684C107O3697C108O3711C112O3724C113O3738C117O3763C125O3759C129O3800C137O3796C141O3839C149O3835C154O3863,,
code-creation,JS,9,53750,0x32d2c6e8e6f8,61,set node:internal/streams/readable:186:8,0x3a18e6f8ca78,~
code-source-info,0x32d2c6e8e6f8,85,6264,6427,C0O6280C4O6301C6O6306C11O6321C15O6338C17O6343C26O6354C31O6351C37O6387C39O6392C48O6404C50O6403C55O6400C60O6426,,
code-creation,JS,9,53750,0x32d2c6e8e7c8,50,set node:internal/streams/writable:132:8,0x3a18e6f9f158,~
code-source-info,0x32d2c6e8e7c8,90,3980,4066,C0O3996C4O4007C8O4012C17O4023C20O4020C26O4039C30O4044C39O4055C44O4052C49O4065,,
code-creation,JS,9,53792,0x32d2c6e8e890,61,set node:internal/streams/writable:217:8,0x3a18e6f9c5b8,~
code-source-info,0x32d2c6e8e890,90,7125,7288,C0O7141C4O7162C6O7167C11O7182C15O7199C17O7204C26O7215C31O7212C37O7248C39O7253C48O7265C50O7264C55O7261C60O7287,,
code-creation,JS,9,53792,0x32d2c6e8e970,45,get node:internal/streams/writable:230:8,0x3a18e6f9c610,~
code-source-info,0x32d2c6e8e970,90,7361,7458,C0O7366C2O7379C4O7378C10O7389C12O7387C17O7403C24O7416C30O7427C32O7425C37O7438C44O7456,,
code-creation,JS,10,53834,0x10860b440,384,set node:internal/streams/writable:132:8,0x3a18e6f9f158,^
code-source-info,0x10860b440,90,3980,4066,,,
code-creation,JS,10,53834,0x10860b5e0,376,SafeMap node:internal/per_context/primordials:409:16,0x315d24f7f8e8,^
code-source-info,0x10860b5e0,3,11638,11655,,,
code-creation,JS,10,53875,0x10860b780,328,makeBitMapDescriptor node:internal/streams/readable:129:30,0x3a18e6f8bea0,^
code-source-info,0x10860b780,85,3800,3993,,,
code-creation,JS,10,53875,0x10860b900,328,makeBitMapDescriptor node:internal/streams/writable:128:30,0x3a18e6f9be58,^
code-source-info,0x10860b900,90,3881,4074,,,
code-creation,JS,10,53875,0x10860ba80,256,get node:diagnostics_channel:48:6,0x36812ca7e520,^
script-source,65,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeAt\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = require('internal/util');\n\n// Can't delete when weakref count reaches 0 as it could increment again.\n// Only GC can be used as a valid time to clean up the channels map.\nclass WeakRefMap extends SafeMap {\n  #finalizers = new SafeFinalizationRegistry((key) => {\n    this.delete(key);\n  });\n\n  set(key\x2C value) {\n    this.#finalizers.register(value\x2C key);\n    return super.set(key\x2C new WeakReference(value));\n  }\n\n  get(key) {\n    return super.get(key)?.get();\n  }\n\n  incRef(key) {\n    return super.get(key)?.incRef();\n  }\n\n  decRef(key) {\n    return super.get(key)?.decRef();\n  }\n}\n\nfunction markActive(channel) {\n  // eslint-disable-next-line no-use-before-define\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\n  channel._subscribers = [];\n  channel._stores = new SafeMap();\n}\n\nfunction maybeMarkInactive(channel) {\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\n  if (!channel._subscribers.length && !channel._stores.size) {\n    // eslint-disable-next-line no-use-before-define\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\n    channel._subscribers = undefined;\n    channel._stores = undefined;\n  }\n}\n\nfunction defaultTransform(data) {\n  return data;\n}\n\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\n  return () => {\n    let context;\n    try {\n      context = transform(data);\n    } catch (err) {\n      process.nextTick(() => {\n        triggerUncaughtException(err\x2C false);\n      });\n      return next();\n    }\n\n    return store.run(context\x2C next);\n  };\n}\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    this._subscribers = ArrayPrototypeSlice(this._subscribers);\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n    channels.incRef(this.name);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index === -1) return false;\n\n    const before = ArrayPrototypeSlice(this._subscribers\x2C 0\x2C index);\n    const after = ArrayPrototypeSlice(this._subscribers\x2C index + 1);\n    this._subscribers = before;\n    ArrayPrototypePushApply(this._subscribers\x2C after);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  bindStore(store\x2C transform) {\n    const replacing = this._stores.has(store);\n    if (!replacing) channels.incRef(this.name);\n    this._stores.set(store\x2C transform);\n  }\n\n  unbindStore(store) {\n    if (!this._stores.has(store)) {\n      return false;\n    }\n\n    this._stores.delete(store);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    const subscribers = this._subscribers;\n    for (let i = 0; i < (subscribers?.length || 0); i++) {\n      try {\n        const onMessage = subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    let run = () => {\n      this.publish(data);\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    };\n\n    for (const entry of this._stores.entries()) {\n      const store = entry[0];\n      const transform = entry[1];\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\n    }\n\n    return run();\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this._stores = undefined;\n    this.name = name;\n\n    channels.set(name\x2C this);\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    markActive(this);\n    this.subscribe(subscription);\n  }\n\n  unsubscribe() {\n    return false;\n  }\n\n  bindStore(store\x2C transform) {\n    markActive(this);\n    this.bindStore(store\x2C transform);\n  }\n\n  unbindStore() {\n    return false;\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    return ReflectApply(fn\x2C thisArg\x2C args);\n  }\n}\n\nconst channels = new WeakRefMap();\n\nfunction channel(name) {\n  const channel = channels.get(name);\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  return new Channel(name);\n}\n\nfunction subscribe(name\x2C subscription) {\n  return channel(name).subscribe(subscription);\n}\n\nfunction unsubscribe(name\x2C subscription) {\n  return channel(name).unsubscribe(subscription);\n}\n\nfunction hasSubscribers(name) {\n  const channel = channels.get(name);\n  if (!channel) return false;\n\n  return channel.hasSubscribers;\n}\n\nconst traceEvents = [\n  'start'\x2C\n  'end'\x2C\n  'asyncStart'\x2C\n  'asyncEnd'\x2C\n  'error'\x2C\n];\n\nfunction assertChannel(value\x2C name) {\n  if (!(value instanceof Channel)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\n  }\n}\n\nfunction tracingChannelFrom(nameOrChannels\x2C name) {\n  if (typeof nameOrChannels === 'string') {\n    return channel(`tracing:${nameOrChannels}:${name}`);\n  }\n\n  if (typeof nameOrChannels === 'object' && nameOrChannels !== null) {\n    const channel = nameOrChannels[name];\n    assertChannel(channel\x2C `nameOrChannels.${name}`);\n    return channel;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\n                                 ['string'\x2C 'object'\x2C 'TracingChannel']\x2C\n                                 nameOrChannels);\n}\n\nclass TracingChannel {\n  constructor(nameOrChannels) {\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const eventName = traceEvents[i];\n      ObjectDefineProperty(this\x2C eventName\x2C {\n        __proto__: null\x2C\n        value: tracingChannelFrom(nameOrChannels\x2C eventName)\x2C\n      });\n    }\n  }\n\n  get hasSubscribers() {\n    return this.start?.hasSubscribers ||\n      this.end?.hasSubscribers ||\n      this.asyncStart?.hasSubscribers ||\n      this.asyncEnd?.hasSubscribers ||\n      this.error?.hasSubscribers;\n  }\n\n  subscribe(handlers) {\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const name = traceEvents[i];\n      if (!handlers[name]) continue;\n\n      this[name]?.subscribe(handlers[name]);\n    }\n  }\n\n  unsubscribe(handlers) {\n    let done = true;\n\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const name = traceEvents[i];\n      if (!handlers[name]) continue;\n\n      if (!this[name]?.unsubscribe(handlers[name])) {\n        done = false;\n      }\n    }\n\n    return done;\n  }\n\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C error } = this;\n\n    return start.runStores(context\x2C () => {\n      try {\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\n        context.result = result;\n        return result;\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function reject(err) {\n      context.error = err;\n      error.publish(context);\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return PromiseReject(err);\n    }\n\n    function resolve(result) {\n      context.result = result;\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return result;\n    }\n\n    return start.runStores(context\x2C () => {\n      try {\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\n        // Convert thenables to native promises\n        if (!(promise instanceof Promise)) {\n          promise = PromiseResolve(promise);\n        }\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function wrappedCallback(err\x2C res) {\n      if (err) {\n        context.error = err;\n        error.publish(context);\n      } else {\n        context.result = res;\n      }\n\n      // Using runStores here enables manual context failure recovery\n      asyncStart.runStores(context\x2C () => {\n        try {\n          return ReflectApply(callback\x2C this\x2C arguments);\n        } finally {\n          asyncEnd.publish(context);\n        }\n      });\n    }\n\n    const callback = ArrayPrototypeAt(args\x2C position);\n    validateFunction(callback\x2C 'callback');\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\n\n    return start.runStores(context\x2C () => {\n      try {\n        return ReflectApply(fn\x2C thisArg\x2C args);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n}\n\nfunction tracingChannel(nameOrChannels) {\n  return new TracingChannel(nameOrChannels);\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  subscribe\x2C\n  tracingChannel\x2C\n  unsubscribe\x2C\n  Channel\x2C\n};\n
code-source-info,0x10860ba80,65,1054,1099,,,
code-creation,JS,10,54334,0x10860bba0,184,WeakReference node:internal/util:835:21,0x76180f19ba8,^
code-source-info,0x10860bba0,13,23500,24086,,,
code-creation,JS,10,54334,0x10860bc80,376,SafeWeakRef node:internal/per_context/primordials:443:16,0x315d24f7fca8,^
code-source-info,0x10860bc80,3,12628,12655,,,
code-creation,JS,10,54375,0x10860be20,304,WeakReference node:internal/util:840:14,0x76180f19838,^
code-source-info,0x10860be20,13,23628,23684,,,
code-creation,JS,10,54375,0x10860bf80,384,set node:diagnostics_channel:43:6,0x36812ca7e460,^
code-source-info,0x10860bf80,65,933,1047,,,
code-creation,JS,10,54375,0x10860c120,304,Channel node:diagnostics_channel:176:14,0x36812ca7f5b0,^
code-source-info,0x10860c120,65,4085,4215,,,
code-creation,JS,10,54417,0x10860c280,680,channel node:diagnostics_channel:221:17,0x36812ca7fc80,^
code-source-info,0x10860c280,65,4890,5140,,,
code-creation,JS,10,54417,0x10860c560,752,TracingChannel node:diagnostics_channel:278:14,0x340e318012f0,^
code-source-info,0x10860c560,65,6261,6523,,,
code-creation,JS,10,54459,0x10860c880,312,protoGetter node:net:878:21,0x2f7916672de0,^
code-source-info,0x10860c880,75,23048,23210,,,
code-creation,JS,10,54459,0x10860c9e0,384,set node:internal/streams/readable:133:8,0x3a18e6f92e48,^
code-source-info,0x10860c9e0,85,3899,3985,,,
code-creation,JS,9,54500,0x32d2c6e8f118,32,getNewAsyncId node:net:197:23,0x2f7916672860,~
code-source-info,0x32d2c6e8f118,75,5325,5441,C0O5338C4O5371C14O5404C17O5404C22O5426C27O5426C31O5439,,
code-creation,JS,9,54542,0x32d2c6e8f1d0,80,shouldColorize node:internal/util/colors:18:17,0x2f7916669c90,~
code-source-info,0x32d2c6e8f1d0,74,271,517,C0O286C3O298C8O302C14O337C17O344C21O361C26O362C33O378C36O382C37O393C44O406C53O439C61O485C66O485C73O501C79O513,,
code-creation,RegExp,3,54667,0x10860cb80,1120,^[a-zA-Z_][a-zA-Z_0-9]*$
tick,0x19d5edaa8,54792,0,0x0,0
